/// <reference path="./types/importMeta.d.ts" />

// CSS modules
type CSSModuleClasses = { readonly [key: string]: string }

declare module &apos;*.module.css&apos; {
  const classes: CSSModuleClasses
  export default classes
}
declare module &apos;*.module.scss&apos; {
  const classes: CSSModuleClasses
  export default classes
}
declare module &apos;*.module.sass&apos; {
  const classes: CSSModuleClasses
  export default classes
}
declare module &apos;*.module.less&apos; {
  const classes: CSSModuleClasses
  export default classes
}
declare module &apos;*.module.styl&apos; {
  const classes: CSSModuleClasses
  export default classes
}
declare module &apos;*.module.stylus&apos; {
  const classes: CSSModuleClasses
  export default classes
}
declare module &apos;*.module.pcss&apos; {
  const classes: CSSModuleClasses
  export default classes
}
declare module &apos;*.module.sss&apos; {
  const classes: CSSModuleClasses
  export default classes
}

// CSS
declare module &apos;*.css&apos; {}
declare module &apos;*.scss&apos; {}
declare module &apos;*.sass&apos; {}
declare module &apos;*.less&apos; {}
declare module &apos;*.styl&apos; {}
declare module &apos;*.stylus&apos; {}
declare module &apos;*.pcss&apos; {}
declare module &apos;*.sss&apos; {}

// Built-in asset types
// see `src/node/constants.ts`

// images
declare module &apos;*.apng&apos; {
  const src: string
  export default src
}
declare module &apos;*.bmp&apos; {
  const src: string
  export default src
}
declare module &apos;*.png&apos; {
  const src: string
  export default src
}
declare module &apos;*.jpg&apos; {
  const src: string
  export default src
}
declare module &apos;*.jpeg&apos; {
  const src: string
  export default src
}
declare module &apos;*.jfif&apos; {
  const src: string
  export default src
}
declare module &apos;*.pjpeg&apos; {
  const src: string
  export default src
}
declare module &apos;*.pjp&apos; {
  const src: string
  export default src
}
declare module &apos;*.gif&apos; {
  const src: string
  export default src
}
declare module &apos;*.svg&apos; {
  const src: string
  export default src
}
declare module &apos;*.ico&apos; {
  const src: string
  export default src
}
declare module &apos;*.webp&apos; {
  const src: string
  export default src
}
declare module &apos;*.avif&apos; {
  const src: string
  export default src
}
declare module &apos;*.cur&apos; {
  const src: string
  export default src
}
declare module &apos;*.jxl&apos; {
  const src: string
  export default src
}

// media
declare module &apos;*.mp4&apos; {
  const src: string
  export default src
}
declare module &apos;*.webm&apos; {
  const src: string
  export default src
}
declare module &apos;*.ogg&apos; {
  const src: string
  export default src
}
declare module &apos;*.mp3&apos; {
  const src: string
  export default src
}
declare module &apos;*.wav&apos; {
  const src: string
  export default src
}
declare module &apos;*.flac&apos; {
  const src: string
  export default src
}
declare module &apos;*.aac&apos; {
  const src: string
  export default src
}
declare module &apos;*.opus&apos; {
  const src: string
  export default src
}
declare module &apos;*.mov&apos; {
  const src: string
  export default src
}
declare module &apos;*.m4a&apos; {
  const src: string
  export default src
}
declare module &apos;*.vtt&apos; {
  const src: string
  export default src
}

// fonts
declare module &apos;*.woff&apos; {
  const src: string
  export default src
}
declare module &apos;*.woff2&apos; {
  const src: string
  export default src
}
declare module &apos;*.eot&apos; {
  const src: string
  export default src
}
declare module &apos;*.ttf&apos; {
  const src: string
  export default src
}
declare module &apos;*.otf&apos; {
  const src: string
  export default src
}

// other
declare module &apos;*.webmanifest&apos; {
  const src: string
  export default src
}
declare module &apos;*.pdf&apos; {
  const src: string
  export default src
}
declare module &apos;*.txt&apos; {
  const src: string
  export default src
}

// wasm?init
declare module &apos;*.wasm?init&apos; {
  const initWasm: (
    options?: WebAssembly.Imports,
  ) => Promise<WebAssembly.Instance>
  export default initWasm
}

// web worker
declare module '*?worker' {
  const workerConstructor: {
    new (options?: { name?: string }): Worker
  }
  export default workerConstructor
}

declare module '*?worker&inline' {
  const workerConstructor: {
    new (options?: { name?: string }): Worker
  }
  export default workerConstructor
}

declare module '*?worker&url' {
  const src: string
  export default src
}

declare module '*?sharedworker' {
  const sharedWorkerConstructor: {
    new (options?: { name?: string }): SharedWorker
  }
  export default sharedWorkerConstructor
}

declare module '*?sharedworker&inline' {
  const sharedWorkerConstructor: {
    new (options?: { name?: string }): SharedWorker
  }
  export default sharedWorkerConstructor
}

declare module '*?sharedworker&url' {
  const src: string
  export default src
}

declare module '*?raw' {
  const src: string
  export default src
}

declare module '*?url' {
  const src: string
  export default src
}

declare module '*?inline' {
  const src: string
  export default src
}

declare module '*?no-inline' {
  const src: string
  export default src
}

declare module '*?url&inline' {
  const src: string
  export default src
}

declare module '*?url&no-inline' {
  const src: string
  export default src
}

declare interface VitePreloadErrorEvent extends Event {
  payload: Error
}

declare interface WindowEventMap {
  'vite:preloadError': VitePreloadErrorEvent
}
