import * as util from "../core/util.js";
const error = () => {
    const Sizable = {
        string: { unit: &quot;حروف&quot;, verb: &quot;ہونا&quot; },
        file: { unit: &quot;بائٹس&quot;, verb: &quot;ہونا&quot; },
        array: { unit: &quot;آئٹمز&quot;, verb: &quot;ہونا&quot; },
        set: { unit: &quot;آئٹمز&quot;, verb: &quot;ہونا&quot; },
    };
    function getSizing(origin) {
        return Sizable[origin] ?? null;
    }
    const parsedType = (data) => {
        const t = typeof data;
        switch (t) {
            case &quot;number&quot;: {
                return Number.isNaN(data) ? &quot;NaN&quot; : &quot;نمبر&quot;;
            }
            case &quot;object&quot;: {
                if (Array.isArray(data)) {
                    return &quot;آرے&quot;;
                }
                if (data === null) {
                    return &quot;نل&quot;;
                }
                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {
                    return data.constructor.name;
                }
            }
        }
        return t;
    };
    const Nouns = {
        regex: &quot;ان پٹ&quot;,
        email: &quot;ای میل ایڈریس&quot;,
        url: &quot;یو آر ایل&quot;,
        emoji: &quot;ایموجی&quot;,
        uuid: &quot;یو یو آئی ڈی&quot;,
        uuidv4: &quot;یو یو آئی ڈی وی 4&quot;,
        uuidv6: &quot;یو یو آئی ڈی وی 6&quot;,
        nanoid: &quot;نینو آئی ڈی&quot;,
        guid: &quot;جی یو آئی ڈی&quot;,
        cuid: &quot;سی یو آئی ڈی&quot;,
        cuid2: &quot;سی یو آئی ڈی 2&quot;,
        ulid: &quot;یو ایل آئی ڈی&quot;,
        xid: &quot;ایکس آئی ڈی&quot;,
        ksuid: &quot;کے ایس یو آئی ڈی&quot;,
        datetime: &quot;آئی ایس او ڈیٹ ٹائم&quot;,
        date: &quot;آئی ایس او تاریخ&quot;,
        time: &quot;آئی ایس او وقت&quot;,
        duration: &quot;آئی ایس او مدت&quot;,
        ipv4: &quot;آئی پی وی 4 ایڈریس&quot;,
        ipv6: &quot;آئی پی وی 6 ایڈریس&quot;,
        cidrv4: &quot;آئی پی وی 4 رینج&quot;,
        cidrv6: &quot;آئی پی وی 6 رینج&quot;,
        base64: &quot;بیس 64 ان کوڈڈ سٹرنگ&quot;,
        base64url: &quot;بیس 64 یو آر ایل ان کوڈڈ سٹرنگ&quot;,
        json_string: &quot;جے ایس او این سٹرنگ&quot;,
        e164: &quot;ای 164 نمبر&quot;,
        jwt: &quot;جے ڈبلیو ٹی&quot;,
        template_literal: &quot;ان پٹ&quot;,
    };
    return (issue) => {
        switch (issue.code) {
            case &quot;invalid_type&quot;:
                return `غلط ان پٹ: ${issue.expected} متوقع تھا، ${parsedType(issue.input)} موصول ہوا`;
            case &quot;invalid_value&quot;:
                if (issue.values.length === 1)
                    return `غلط ان پٹ: ${util.stringifyPrimitive(issue.values[0])} متوقع تھا`;
                return `غلط آپشن: ${util.joinValues(issue.values, &quot;|&quot;)} میں سے ایک متوقع تھا`;
            case &quot;too_big&quot;: {
                const adj = issue.inclusive ? &quot;<=" : "<";
                const sizing = getSizing(issue.origin);
                if (sizing)
                    return `بہت بڑا: ${issue.origin ?? "ویلیو"} کے ${adj}${issue.maximum.toString()} ${sizing.unit ?? "عناصر"} ہونے متوقع تھے`;
                return `بہت بڑا: ${issue.origin ?? "ویلیو"} کا ${adj}${issue.maximum.toString()} ہونا متوقع تھا`;
            }
            case "too_small": {
                const adj = issue.inclusive ? ">=" : ">";
                const sizing = getSizing(issue.origin);
                if (sizing) {
                    return `بہت چھوٹا: ${issue.origin} کے ${adj}${issue.minimum.toString()} ${sizing.unit} ہونے متوقع تھے`;
                }
                return `بہت چھوٹا: ${issue.origin} کا ${adj}${issue.minimum.toString()} ہونا متوقع تھا`;
            }
            case "invalid_format": {
                const _issue = issue;
                if (_issue.format === "starts_with") {
                    return `غلط سٹرنگ: "${_issue.prefix}" سے شروع ہونا چاہیے`;
                }
                if (_issue.format === "ends_with")
                    return `غلط سٹرنگ: "${_issue.suffix}" پر ختم ہونا چاہیے`;
                if (_issue.format === "includes")
                    return `غلط سٹرنگ: "${_issue.includes}" شامل ہونا چاہیے`;
                if (_issue.format === "regex")
                    return `غلط سٹرنگ: پیٹرن ${_issue.pattern} سے میچ ہونا چاہیے`;
                return `غلط ${Nouns[_issue.format] ?? issue.format}`;
            }
            case "not_multiple_of":
                return `غلط نمبر: ${issue.divisor} کا مضاعف ہونا چاہیے`;
            case "unrecognized_keys":
                return `غیر تسلیم شدہ کی${issue.keys.length > 1 ? "ز" : ""}: ${util.joinValues(issue.keys, "، ")}`;
            case "invalid_key":
                return `${issue.origin} میں غلط کی`;
            case "invalid_union":
                return "غلط ان پٹ";
            case "invalid_element":
                return `${issue.origin} میں غلط ویلیو`;
            default:
                return `غلط ان پٹ`;
        }
    };
};
export default function () {
    return {
        localeError: error(),
    };
}
