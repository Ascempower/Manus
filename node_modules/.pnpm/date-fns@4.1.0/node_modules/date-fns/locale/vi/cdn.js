(() => {
var _window$dateFns;function _typeof(o) {&quot;@babel/helpers - typeof&quot;;return _typeof = &quot;function&quot; == typeof Symbol && &quot;symbol&quot; == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && &quot;function&quot; == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? &quot;symbol&quot; : typeof o;}, _typeof(o);}function ownKeys(e, r) {var t = Object.keys(e);if (Object.getOwnPropertySymbols) {var o = Object.getOwnPropertySymbols(e);r && (o = o.filter(function (r) {return Object.getOwnPropertyDescriptor(e, r).enumerable;})), t.push.apply(t, o);}return t;}function _objectSpread(e) {for (var r = 1; r < arguments.length; r++) {var t = null != arguments[r] ? arguments[r] : {};r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {_defineProperty(e, r, t[r]);}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));});}return e;}function _defineProperty(obj, key, value) {key = _toPropertyKey(key);if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : String(i);}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);}var __defProp = Object.defineProperty;
var __export = function __export(target, all) {
  for (var name in all)
  __defProp(target, name, {
    get: all[name],
    enumerable: true,
    configurable: true,
    set: function set(newValue) {return all[name] = function () {return newValue;};}
  });
};

// lib/locale/vi/_lib/formatDistance.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: "d\u01B0\u1EDBi 1 gi\xE2y",
    other: "d\u01B0\u1EDBi {{count}} gi\xE2y"
  },
  xSeconds: {
    one: "1 gi\xE2y",
    other: "{{count}} gi\xE2y"
  },
  halfAMinute: "n\u1EEDa ph\xFAt",
  lessThanXMinutes: {
    one: "d\u01B0\u1EDBi 1 ph\xFAt",
    other: "d\u01B0\u1EDBi {{count}} ph\xFAt"
  },
  xMinutes: {
    one: "1 ph\xFAt",
    other: "{{count}} ph\xFAt"
  },
  aboutXHours: {
    one: "kho\u1EA3ng 1 gi\u1EDD",
    other: "kho\u1EA3ng {{count}} gi\u1EDD"
  },
  xHours: {
    one: "1 gi\u1EDD",
    other: "{{count}} gi\u1EDD"
  },
  xDays: {
    one: "1 ng\xE0y",
    other: "{{count}} ng\xE0y"
  },
  aboutXWeeks: {
    one: "kho\u1EA3ng 1 tu\u1EA7n",
    other: "kho\u1EA3ng {{count}} tu\u1EA7n"
  },
  xWeeks: {
    one: "1 tu\u1EA7n",
    other: "{{count}} tu\u1EA7n"
  },
  aboutXMonths: {
    one: "kho\u1EA3ng 1 th\xE1ng",
    other: "kho\u1EA3ng {{count}} th\xE1ng"
  },
  xMonths: {
    one: "1 th\xE1ng",
    other: "{{count}} th\xE1ng"
  },
  aboutXYears: {
    one: "kho\u1EA3ng 1 n\u0103m",
    other: "kho\u1EA3ng {{count}} n\u0103m"
  },
  xYears: {
    one: "1 n\u0103m",
    other: "{{count}} n\u0103m"
  },
  overXYears: {
    one: "h\u01A1n 1 n\u0103m",
    other: "h\u01A1n {{count}} n\u0103m"
  },
  almostXYears: {
    one: "g\u1EA7n 1 n\u0103m",
    other: "g\u1EA7n {{count}} n\u0103m"
  }
};
var formatDistance = function formatDistance(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + &quot; n\u1EEFa&quot;;
    } else {
      return result + &quot; tr\u01B0\u1EDBc&quot;;
    }
  }
  return result;
};

// lib/locale/_lib/buildFormatLongFn.js
function buildFormatLongFn(args) {
  return function () {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}

// lib/locale/vi/_lib/formatLong.js
var dateFormats = {
  full: &quot;EEEE, &apos;ng\xE0y&apos; d MMMM &apos;n\u0103m&apos; y&quot;,
  long: &quot;&apos;ng\xE0y&apos; d MMMM &apos;n\u0103m&apos; y&quot;,
  medium: &quot;d MMM &apos;n\u0103m&apos; y&quot;,
  short: &quot;dd/MM/y&quot;
};
var timeFormats = {
  full: &quot;HH:mm:ss zzzz&quot;,
  long: &quot;HH:mm:ss z&quot;,
  medium: &quot;HH:mm:ss&quot;,
  short: &quot;HH:mm&quot;
};
var dateTimeFormats = {
  full: &quot;{{date}} {{time}}&quot;,
  long: &quot;{{date}} {{time}}&quot;,
  medium: &quot;{{date}} {{time}}&quot;,
  short: &quot;{{date}} {{time}}&quot;
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: &quot;full&quot;
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: &quot;full&quot;
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: &quot;full&quot;
  })
};

// lib/locale/vi/_lib/formatRelative.js
var formatRelativeLocale = {
  lastWeek: &quot;eeee &apos;tu\u1EA7n tr\u01B0\u1EDBc v\xE0o l\xFAc&apos; p&quot;,
  yesterday: &quot;&apos;h\xF4m qua v\xE0o l\xFAc&apos; p&quot;,
  today: &quot;&apos;h\xF4m nay v\xE0o l\xFAc&apos; p&quot;,
  tomorrow: &quot;&apos;ng\xE0y mai v\xE0o l\xFAc&apos; p&quot;,
  nextWeek: &quot;eeee &apos;t\u1EDBi v\xE0o l\xFAc&apos; p&quot;,
  other: &quot;P&quot;
};
var formatRelative = function formatRelative(token, _date, _baseDate, _options) {return formatRelativeLocale[token];};

// lib/locale/_lib/buildLocalizeFn.js
function buildLocalizeFn(args) {
  return function (value, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : &quot;standalone&quot;;
    var valuesArray;
    if (context === &quot;formatting&quot; && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(value) : value;
    return valuesArray[index];
  };
}

// lib/locale/vi/_lib/localize.js
var eraValues = {
  narrow: [&quot;TCN&quot;, &quot;SCN&quot;],
  abbreviated: [&quot;tr\u01B0\u1EDBc CN&quot;, &quot;sau CN&quot;],
  wide: [&quot;tr\u01B0\u1EDBc C\xF4ng Nguy\xEAn&quot;, &quot;sau C\xF4ng Nguy\xEAn&quot;]
};
var quarterValues = {
  narrow: [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;],
  abbreviated: [&quot;Q1&quot;, &quot;Q2&quot;, &quot;Q3&quot;, &quot;Q4&quot;],
  wide: [&quot;Qu\xFD 1&quot;, &quot;Qu\xFD 2&quot;, &quot;Qu\xFD 3&quot;, &quot;Qu\xFD 4&quot;]
};
var formattingQuarterValues = {
  narrow: [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;],
  abbreviated: [&quot;Q1&quot;, &quot;Q2&quot;, &quot;Q3&quot;, &quot;Q4&quot;],
  wide: [&quot;qu\xFD I&quot;, &quot;qu\xFD II&quot;, &quot;qu\xFD III&quot;, &quot;qu\xFD IV&quot;]
};
var monthValues = {
  narrow: [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;10&quot;, &quot;11&quot;, &quot;12&quot;],
  abbreviated: [
  &quot;Thg 1&quot;,
  &quot;Thg 2&quot;,
  &quot;Thg 3&quot;,
  &quot;Thg 4&quot;,
  &quot;Thg 5&quot;,
  &quot;Thg 6&quot;,
  &quot;Thg 7&quot;,
  &quot;Thg 8&quot;,
  &quot;Thg 9&quot;,
  &quot;Thg 10&quot;,
  &quot;Thg 11&quot;,
  &quot;Thg 12&quot;],

  wide: [
  &quot;Th\xE1ng M\u1ED9t&quot;,
  &quot;Th\xE1ng Hai&quot;,
  &quot;Th\xE1ng Ba&quot;,
  &quot;Th\xE1ng T\u01B0&quot;,
  &quot;Th\xE1ng N\u0103m&quot;,
  &quot;Th\xE1ng S\xE1u&quot;,
  &quot;Th\xE1ng B\u1EA3y&quot;,
  &quot;Th\xE1ng T\xE1m&quot;,
  &quot;Th\xE1ng Ch\xEDn&quot;,
  &quot;Th\xE1ng M\u01B0\u1EDDi&quot;,
  &quot;Th\xE1ng M\u01B0\u1EDDi M\u1ED9t&quot;,
  &quot;Th\xE1ng M\u01B0\u1EDDi Hai&quot;]

};
var formattingMonthValues = {
  narrow: [
  &quot;01&quot;,
  &quot;02&quot;,
  &quot;03&quot;,
  &quot;04&quot;,
  &quot;05&quot;,
  &quot;06&quot;,
  &quot;07&quot;,
  &quot;08&quot;,
  &quot;09&quot;,
  &quot;10&quot;,
  &quot;11&quot;,
  &quot;12&quot;],

  abbreviated: [
  &quot;thg 1&quot;,
  &quot;thg 2&quot;,
  &quot;thg 3&quot;,
  &quot;thg 4&quot;,
  &quot;thg 5&quot;,
  &quot;thg 6&quot;,
  &quot;thg 7&quot;,
  &quot;thg 8&quot;,
  &quot;thg 9&quot;,
  &quot;thg 10&quot;,
  &quot;thg 11&quot;,
  &quot;thg 12&quot;],

  wide: [
  &quot;th\xE1ng 01&quot;,
  &quot;th\xE1ng 02&quot;,
  &quot;th\xE1ng 03&quot;,
  &quot;th\xE1ng 04&quot;,
  &quot;th\xE1ng 05&quot;,
  &quot;th\xE1ng 06&quot;,
  &quot;th\xE1ng 07&quot;,
  &quot;th\xE1ng 08&quot;,
  &quot;th\xE1ng 09&quot;,
  &quot;th\xE1ng 10&quot;,
  &quot;th\xE1ng 11&quot;,
  &quot;th\xE1ng 12&quot;]

};
var dayValues = {
  narrow: [&quot;CN&quot;, &quot;T2&quot;, &quot;T3&quot;, &quot;T4&quot;, &quot;T5&quot;, &quot;T6&quot;, &quot;T7&quot;],
  short: [&quot;CN&quot;, &quot;Th 2&quot;, &quot;Th 3&quot;, &quot;Th 4&quot;, &quot;Th 5&quot;, &quot;Th 6&quot;, &quot;Th 7&quot;],
  abbreviated: [&quot;CN&quot;, &quot;Th\u1EE9 2&quot;, &quot;Th\u1EE9 3&quot;, &quot;Th\u1EE9 4&quot;, &quot;Th\u1EE9 5&quot;, &quot;Th\u1EE9 6&quot;, &quot;Th\u1EE9 7&quot;],
  wide: [
  &quot;Ch\u1EE7 Nh\u1EADt&quot;,
  &quot;Th\u1EE9 Hai&quot;,
  &quot;Th\u1EE9 Ba&quot;,
  &quot;Th\u1EE9 T\u01B0&quot;,
  &quot;Th\u1EE9 N\u0103m&quot;,
  &quot;Th\u1EE9 S\xE1u&quot;,
  &quot;Th\u1EE9 B\u1EA3y&quot;]

};
var dayPeriodValues = {
  narrow: {
    am: &quot;am&quot;,
    pm: &quot;pm&quot;,
    midnight: &quot;n\u1EEDa \u0111\xEAm&quot;,
    noon: &quot;tr&quot;,
    morning: &quot;sg&quot;,
    afternoon: &quot;ch&quot;,
    evening: &quot;t\u1ED1i&quot;,
    night: &quot;\u0111\xEAm&quot;
  },
  abbreviated: {
    am: &quot;AM&quot;,
    pm: &quot;PM&quot;,
    midnight: &quot;n\u1EEDa \u0111\xEAm&quot;,
    noon: &quot;tr\u01B0a&quot;,
    morning: &quot;s\xE1ng&quot;,
    afternoon: &quot;chi\u1EC1u&quot;,
    evening: &quot;t\u1ED1i&quot;,
    night: &quot;\u0111\xEAm&quot;
  },
  wide: {
    am: &quot;SA&quot;,
    pm: &quot;CH&quot;,
    midnight: &quot;n\u1EEDa \u0111\xEAm&quot;,
    noon: &quot;tr\u01B0a&quot;,
    morning: &quot;s\xE1ng&quot;,
    afternoon: &quot;chi\u1EC1u&quot;,
    evening: &quot;t\u1ED1i&quot;,
    night: &quot;\u0111\xEAm&quot;
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: &quot;am&quot;,
    pm: &quot;pm&quot;,
    midnight: &quot;n\u1EEDa \u0111\xEAm&quot;,
    noon: &quot;tr&quot;,
    morning: &quot;sg&quot;,
    afternoon: &quot;ch&quot;,
    evening: &quot;t\u1ED1i&quot;,
    night: &quot;\u0111\xEAm&quot;
  },
  abbreviated: {
    am: &quot;AM&quot;,
    pm: &quot;PM&quot;,
    midnight: &quot;n\u1EEDa \u0111\xEAm&quot;,
    noon: &quot;tr\u01B0a&quot;,
    morning: &quot;s\xE1ng&quot;,
    afternoon: &quot;chi\u1EC1u&quot;,
    evening: &quot;t\u1ED1i&quot;,
    night: &quot;\u0111\xEAm&quot;
  },
  wide: {
    am: &quot;SA&quot;,
    pm: &quot;CH&quot;,
    midnight: &quot;n\u1EEDa \u0111\xEAm&quot;,
    noon: &quot;gi\u1EEFa tr\u01B0a&quot;,
    morning: &quot;v\xE0o bu\u1ED5i s\xE1ng&quot;,
    afternoon: &quot;v\xE0o bu\u1ED5i chi\u1EC1u&quot;,
    evening: &quot;v\xE0o bu\u1ED5i t\u1ED1i&quot;,
    night: &quot;v\xE0o ban \u0111\xEAm&quot;
  }
};
var ordinalNumber = function ordinalNumber(dirtyNumber, options) {
  var number = Number(dirtyNumber);
  var unit = options === null || options === void 0 ? void 0 : options.unit;
  if (unit === &quot;quarter&quot;) {
    switch (number) {
      case 1:
        return &quot;I&quot;;
      case 2:
        return &quot;II&quot;;
      case 3:
        return &quot;III&quot;;
      case 4:
        return &quot;IV&quot;;
    }
  } else if (unit === &quot;day&quot;) {
    switch (number) {
      case 1:
        return &quot;th\u1EE9 2&quot;;
      case 2:
        return &quot;th\u1EE9 3&quot;;
      case 3:
        return &quot;th\u1EE9 4&quot;;
      case 4:
        return &quot;th\u1EE9 5&quot;;
      case 5:
        return &quot;th\u1EE9 6&quot;;
      case 6:
        return &quot;th\u1EE9 7&quot;;
      case 7:
        return &quot;ch\u1EE7 nh\u1EADt&quot;;
    }
  } else if (unit === &quot;week&quot;) {
    if (number === 1) {
      return &quot;th\u1EE9 nh\u1EA5t&quot;;
    } else {
      return &quot;th\u1EE9 &quot; + number;
    }
  } else if (unit === &quot;dayOfYear&quot;) {
    if (number === 1) {
      return &quot;\u0111\u1EA7u ti\xEAn&quot;;
    } else {
      return &quot;th\u1EE9 &quot; + number;
    }
  }
  return String(number);
};
var localize = {
  ordinalNumber: ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: &quot;wide&quot;
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: &quot;wide&quot;,
    formattingValues: formattingQuarterValues,
    defaultFormattingWidth: &quot;wide&quot;,
    argumentCallback: function argumentCallback(quarter) {return quarter - 1;}
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: &quot;wide&quot;,
    formattingValues: formattingMonthValues,
    defaultFormattingWidth: &quot;wide&quot;
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: &quot;wide&quot;
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: &quot;wide&quot;,
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: &quot;wide&quot;
  })
};

// lib/locale/_lib/buildMatchFn.js
function buildMatchFn(args) {
  return function (string) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {return pattern.test(matchedString);}) : findKey(parsePatterns, function (pattern) {return pattern.test(matchedString);});
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return { value: value, rest: rest };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (Object.prototype.hasOwnProperty.call(object, key) && predicate(object[key])) {
      return key;
    }
  }
  return;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return;
}

// lib/locale/_lib/buildMatchPatternFn.js
function buildMatchPatternFn(args) {
  return function (string) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult)
    return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult)
    return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return { value: value, rest: rest };
  };
}

// lib/locale/vi/_lib/match.js
var matchOrdinalNumberPattern = /^(\d+)/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(tcn|scn)/i,
  abbreviated: /^(trước CN|sau CN)/i,
  wide: /^(trước Công Nguyên|sau Công Nguyên)/i
};
var parseEraPatterns = {
  any: [/^t/i, /^s/i]
};
var matchQuarterPatterns = {
  narrow: /^([1234]|i{1,3}v?)/i,
  abbreviated: /^q([1234]|i{1,3}v?)/i,
  wide: /^quý ([1234]|i{1,3}v?)/i
};
var parseQuarterPatterns = {
  any: [/(1|i)$/i, /(2|ii)$/i, /(3|iii)$/i, /(4|iv)$/i]
};
var matchMonthPatterns = {
  narrow: /^(0?[2-9]|10|11|12|0?1)/i,
  abbreviated: /^thg[ _]?(0?[1-9](?!\d)|10|11|12)/i,
  wide: /^tháng ?(Một|Hai|Ba|Tư|Năm|Sáu|Bảy|Tám|Chín|Mười|Mười ?Một|Mười ?Hai|0?[1-9](?!\d)|10|11|12)/i
};
var parseMonthPatterns = {
  narrow: [
  /0?1$/i,
  /0?2/i,
  /3/,
  /4/,
  /5/,
  /6/,
  /7/,
  /8/,
  /9/,
  /10/,
  /11/,
  /12/],

  abbreviated: [
  /^thg[ _]?0?1(?!\d)/i,
  /^thg[ _]?0?2/i,
  /^thg[ _]?0?3/i,
  /^thg[ _]?0?4/i,
  /^thg[ _]?0?5/i,
  /^thg[ _]?0?6/i,
  /^thg[ _]?0?7/i,
  /^thg[ _]?0?8/i,
  /^thg[ _]?0?9/i,
  /^thg[ _]?10/i,
  /^thg[ _]?11/i,
  /^thg[ _]?12/i],

  wide: [
  /^tháng ?(Một|0?1(?!\d))/i,
  /^tháng ?(Hai|0?2)/i,
  /^tháng ?(Ba|0?3)/i,
  /^tháng ?(Tư|0?4)/i,
  /^tháng ?(Năm|0?5)/i,
  /^tháng ?(Sáu|0?6)/i,
  /^tháng ?(Bảy|0?7)/i,
  /^tháng ?(Tám|0?8)/i,
  /^tháng ?(Chín|0?9)/i,
  /^tháng ?(Mười|10)/i,
  /^tháng ?(Mười ?Một|11)/i,
  /^tháng ?(Mười ?Hai|12)/i]

};
var matchDayPatterns = {
  narrow: /^(CN|T2|T3|T4|T5|T6|T7)/i,
  short: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i,
  abbreviated: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i,
  wide: /^(Chủ ?Nhật|Chúa ?Nhật|thứ ?Hai|thứ ?Ba|thứ ?Tư|thứ ?Năm|thứ ?Sáu|thứ ?Bảy)/i
};
var parseDayPatterns = {
  narrow: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],
  short: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],
  abbreviated: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],
  wide: [/(Chủ|Chúa) ?Nhật/i, /Hai/i, /Ba/i, /Tư/i, /Năm/i, /Sáu/i, /Bảy/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i,
  abbreviated: /^(am|pm|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i,
  wide: /^(ch[^i]*|sa|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^(a|sa)/i,
    pm: /^(p|ch[^i]*)/i,
    midnight: /nửa đêm/i,
    noon: /trưa/i,
    morning: /sáng/i,
    afternoon: /chiều/i,
    evening: /tối/i,
    night: /^đêm/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {return parseInt(value, 10);}
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function valueCallback(index) {return index + 1;}
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "wide"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "wide"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};

// lib/locale/vi.js
var vi = {
  code: "vi",
  formatDistance: formatDistance,
  formatLong: formatLong,
  formatRelative: formatRelative,
  localize: localize,
  match: match,
  options: {
    weekStartsOn: 1,
    firstWeekContainsDate: 1
  }
};

// lib/locale/vi/cdn.js
window.dateFns = _objectSpread(_objectSpread({},
window.dateFns), {}, {
  locale: _objectSpread(_objectSpread({}, (_window$dateFns =
  window.dateFns) === null || _window$dateFns === void 0 ? void 0 : _window$dateFns.locale), {}, {
    vi: vi }) });



//# debugId=99CB759AEAC8A3D464756E2164756E21

//# sourceMappingURL=cdn.js.map
})();