(() => {
var _window$dateFns;function _typeof(o) {&quot;@babel/helpers - typeof&quot;;return _typeof = &quot;function&quot; == typeof Symbol && &quot;symbol&quot; == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && &quot;function&quot; == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? &quot;symbol&quot; : typeof o;}, _typeof(o);}function ownKeys(e, r) {var t = Object.keys(e);if (Object.getOwnPropertySymbols) {var o = Object.getOwnPropertySymbols(e);r && (o = o.filter(function (r) {return Object.getOwnPropertyDescriptor(e, r).enumerable;})), t.push.apply(t, o);}return t;}function _objectSpread(e) {for (var r = 1; r < arguments.length; r++) {var t = null != arguments[r] ? arguments[r] : {};r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {_defineProperty(e, r, t[r]);}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));});}return e;}function _defineProperty(obj, key, value) {key = _toPropertyKey(key);if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : String(i);}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);}var __defProp = Object.defineProperty;
var __export = function __export(target, all) {
  for (var name in all)
  __defProp(target, name, {
    get: all[name],
    enumerable: true,
    configurable: true,
    set: function set(newValue) {return all[name] = function () {return newValue;};}
  });
};

// lib/locale/gd/_lib/formatDistance.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: "nas lugha na diog",
    other: "nas lugha na {{count}} diogan"
  },
  xSeconds: {
    one: "1 diog",
    two: "2 dhiog",
    twenty: "20 diog",
    other: "{{count}} diogan"
  },
  halfAMinute: "leth mhionaid",
  lessThanXMinutes: {
    one: "nas lugha na mionaid",
    other: "nas lugha na {{count}} mionaidean"
  },
  xMinutes: {
    one: "1 mionaid",
    two: "2 mhionaid",
    twenty: "20 mionaid",
    other: "{{count}} mionaidean"
  },
  aboutXHours: {
    one: "mu uair de th\xECde",
    other: "mu {{count}} uairean de th\xECde"
  },
  xHours: {
    one: "1 uair de th\xECde",
    two: "2 uair de th\xECde",
    twenty: "20 uair de th\xECde",
    other: "{{count}} uairean de th\xECde"
  },
  xDays: {
    one: "1 l\xE0",
    other: "{{count}} l\xE0"
  },
  aboutXWeeks: {
    one: "mu 1 seachdain",
    other: "mu {{count}} seachdainean"
  },
  xWeeks: {
    one: "1 seachdain",
    other: "{{count}} seachdainean"
  },
  aboutXMonths: {
    one: "mu mh\xECos",
    other: "mu {{count}} m\xECosan"
  },
  xMonths: {
    one: "1 m\xECos",
    other: "{{count}} m\xECosan"
  },
  aboutXYears: {
    one: "mu bhliadhna",
    other: "mu {{count}} bliadhnaichean"
  },
  xYears: {
    one: "1 bhliadhna",
    other: "{{count}} bliadhna"
  },
  overXYears: {
    one: "c\xF2rr is bliadhna",
    other: "c\xF2rr is {{count}} bliadhnaichean"
  },
  almostXYears: {
    one: "cha mh\xF2r bliadhna",
    other: "cha mh\xF2r {{count}} bliadhnaichean"
  }
};
var formatDistance = function formatDistance(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else if (count === 2 && !!tokenValue.two) {
    result = tokenValue.two;
  } else if (count === 20 && !!tokenValue.twenty) {
    result = tokenValue.twenty;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return &quot;ann an &quot; + result;
    } else {
      return &quot;o chionn &quot; + result;
    }
  }
  return result;
};

// lib/locale/_lib/buildFormatLongFn.js
function buildFormatLongFn(args) {
  return function () {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}

// lib/locale/gd/_lib/formatLong.js
var dateFormats = {
  full: &quot;EEEE, MMMM do, y&quot;,
  long: &quot;MMMM do, y&quot;,
  medium: &quot;MMM d, y&quot;,
  short: &quot;MM/dd/yyyy&quot;
};
var timeFormats = {
  full: &quot;h:mm:ss a zzzz&quot;,
  long: &quot;h:mm:ss a z&quot;,
  medium: &quot;h:mm:ss a&quot;,
  short: &quot;h:mm a&quot;
};
var dateTimeFormats = {
  full: &quot;{{date}} &apos;aig&apos; {{time}}&quot;,
  long: &quot;{{date}} &apos;aig&apos; {{time}}&quot;,
  medium: &quot;{{date}}, {{time}}&quot;,
  short: &quot;{{date}}, {{time}}&quot;
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: &quot;full&quot;
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: &quot;full&quot;
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: &quot;full&quot;
  })
};

// lib/locale/gd/_lib/formatRelative.js
var formatRelativeLocale = {
  lastWeek: &quot;&apos;mu dheireadh&apos; eeee &apos;aig&apos; p&quot;,
  yesterday: &quot;&apos;an-d\xE8 aig&apos; p&quot;,
  today: &quot;&apos;an-diugh aig&apos; p&quot;,
  tomorrow: &quot;&apos;a-m\xE0ireach aig&apos; p&quot;,
  nextWeek: &quot;eeee &apos;aig&apos; p&quot;,
  other: &quot;P&quot;
};
var formatRelative = function formatRelative(token, _date, _baseDate, _options) {return formatRelativeLocale[token];};

// lib/locale/_lib/buildLocalizeFn.js
function buildLocalizeFn(args) {
  return function (value, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : &quot;standalone&quot;;
    var valuesArray;
    if (context === &quot;formatting&quot; && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(value) : value;
    return valuesArray[index];
  };
}

// lib/locale/gd/_lib/localize.js
var eraValues = {
  narrow: [&quot;R&quot;, &quot;A&quot;],
  abbreviated: [&quot;RC&quot;, &quot;AD&quot;],
  wide: [&quot;ro Chr\xECosta&quot;, &quot;anno domini&quot;]
};
var quarterValues = {
  narrow: [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;],
  abbreviated: [&quot;C1&quot;, &quot;C2&quot;, &quot;C3&quot;, &quot;C4&quot;],
  wide: [
  &quot;a&apos; chiad chairteal&quot;,
  &quot;an d\xE0rna cairteal&quot;,
  &quot;an treas cairteal&quot;,
  &quot;an ceathramh cairteal&quot;]

};
var monthValues = {
  narrow: [&quot;F&quot;, &quot;G&quot;, &quot;M&quot;, &quot;G&quot;, &quot;C&quot;, &quot;\xD2&quot;, &quot;I&quot;, &quot;L&quot;, &quot;S&quot;, &quot;D&quot;, &quot;S&quot;, &quot;D&quot;],
  abbreviated: [
  &quot;Faoi&quot;,
  &quot;Gear&quot;,
  &quot;M\xE0rt&quot;,
  &quot;Gibl&quot;,
  &quot;C\xE8it&quot;,
  &quot;\xD2gmh&quot;,
  &quot;Iuch&quot;,
  &quot;L\xF9n&quot;,
  &quot;Sult&quot;,
  &quot;D\xE0mh&quot;,
  &quot;Samh&quot;,
  &quot;D\xF9bh&quot;],

  wide: [
  &quot;Am Faoilleach&quot;,
  &quot;An Gearran&quot;,
  &quot;Am M\xE0rt&quot;,
  &quot;An Giblean&quot;,
  &quot;An C\xE8itean&quot;,
  &quot;An t-\xD2gmhios&quot;,
  &quot;An t-Iuchar&quot;,
  &quot;An L\xF9nastal&quot;,
  &quot;An t-Sultain&quot;,
  &quot;An D\xE0mhair&quot;,
  &quot;An t-Samhain&quot;,
  &quot;An D\xF9bhlachd&quot;]

};
var dayValues = {
  narrow: [&quot;D&quot;, &quot;L&quot;, &quot;M&quot;, &quot;C&quot;, &quot;A&quot;, &quot;H&quot;, &quot;S&quot;],
  short: [&quot;D\xF2&quot;, &quot;Lu&quot;, &quot;M\xE0&quot;, &quot;Ci&quot;, &quot;Ar&quot;, &quot;Ha&quot;, &quot;Sa&quot;],
  abbreviated: [&quot;Did&quot;, &quot;Dil&quot;, &quot;Dim&quot;, &quot;Dic&quot;, &quot;Dia&quot;, &quot;Dih&quot;, &quot;Dis&quot;],
  wide: [
  &quot;Did\xF2mhnaich&quot;,
  &quot;Diluain&quot;,
  &quot;Dim\xE0irt&quot;,
  &quot;Diciadain&quot;,
  &quot;Diardaoin&quot;,
  &quot;Dihaoine&quot;,
  &quot;Disathairne&quot;]

};
var dayPeriodValues = {
  narrow: {
    am: &quot;m&quot;,
    pm: &quot;f&quot;,
    midnight: &quot;m.o.&quot;,
    noon: &quot;m.l.&quot;,
    morning: &quot;madainn&quot;,
    afternoon: &quot;feasgar&quot;,
    evening: &quot;feasgar&quot;,
    night: &quot;oidhche&quot;
  },
  abbreviated: {
    am: &quot;M.&quot;,
    pm: &quot;F.&quot;,
    midnight: &quot;meadhan oidhche&quot;,
    noon: &quot;meadhan l\xE0&quot;,
    morning: &quot;madainn&quot;,
    afternoon: &quot;feasgar&quot;,
    evening: &quot;feasgar&quot;,
    night: &quot;oidhche&quot;
  },
  wide: {
    am: &quot;m.&quot;,
    pm: &quot;f.&quot;,
    midnight: &quot;meadhan oidhche&quot;,
    noon: &quot;meadhan l\xE0&quot;,
    morning: &quot;madainn&quot;,
    afternoon: &quot;feasgar&quot;,
    evening: &quot;feasgar&quot;,
    night: &quot;oidhche&quot;
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: &quot;m&quot;,
    pm: &quot;f&quot;,
    midnight: &quot;m.o.&quot;,
    noon: &quot;m.l.&quot;,
    morning: &quot;sa mhadainn&quot;,
    afternoon: &quot;feasgar&quot;,
    evening: &quot;feasgar&quot;,
    night: &quot;air an oidhche&quot;
  },
  abbreviated: {
    am: &quot;M.&quot;,
    pm: &quot;F.&quot;,
    midnight: &quot;meadhan oidhche&quot;,
    noon: &quot;meadhan l\xE0&quot;,
    morning: &quot;sa mhadainn&quot;,
    afternoon: &quot;feasgar&quot;,
    evening: &quot;feasgar&quot;,
    night: &quot;air an oidhche&quot;
  },
  wide: {
    am: &quot;m.&quot;,
    pm: &quot;f.&quot;,
    midnight: &quot;meadhan oidhche&quot;,
    noon: &quot;meadhan l\xE0&quot;,
    morning: &quot;sa mhadainn&quot;,
    afternoon: &quot;feasgar&quot;,
    evening: &quot;feasgar&quot;,
    night: &quot;air an oidhche&quot;
  }
};
var ordinalNumber = function ordinalNumber(dirtyNumber) {
  var number = Number(dirtyNumber);
  var rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + "d";
      case 2:
        return number + "na";
    }
  }
  if (rem100 === 12) {
    return number + "na";
  }
  return number + "mh";
};
var localize = {
  ordinalNumber: ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: "wide"
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: "wide",
    argumentCallback: function argumentCallback(quarter) {return quarter - 1;}
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: "wide"
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: "wide"
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: "wide"
  })
};

// lib/locale/_lib/buildMatchFn.js
function buildMatchFn(args) {
  return function (string) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {return pattern.test(matchedString);}) : findKey(parsePatterns, function (pattern) {return pattern.test(matchedString);});
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return { value: value, rest: rest };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (Object.prototype.hasOwnProperty.call(object, key) && predicate(object[key])) {
      return key;
    }
  }
  return;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return;
}

// lib/locale/_lib/buildMatchPatternFn.js
function buildMatchPatternFn(args) {
  return function (string) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult)
    return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult)
    return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return { value: value, rest: rest };
  };
}

// lib/locale/gd/_lib/match.js
var matchOrdinalNumberPattern = /^(\d+)(d|na|tr|mh)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(r|a)/i,
  abbreviated: /^(r\.?\s?c\.?|r\.?\s?a\.?\s?c\.?|a\.?\s?d\.?|a\.?\s?c\.?)/i,
  wide: /^(ro Chrìosta|ron aois choitchinn|anno domini|aois choitcheann)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^c[1234]/i,
  wide: /^[1234](cd|na|tr|mh)? cairteal/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[fgmcòilsd]/i,
  abbreviated: /^(faoi|gear|màrt|gibl|cèit|ògmh|iuch|lùn|sult|dàmh|samh|dùbh)/i,
  wide: /^(am faoilleach|an gearran|am màrt|an giblean|an cèitean|an t-Ògmhios|an t-Iuchar|an lùnastal|an t-Sultain|an dàmhair|an t-Samhain|an dùbhlachd)/i
};
var parseMonthPatterns = {
  narrow: [
  /^f/i,
  /^g/i,
  /^m/i,
  /^g/i,
  /^c/i,
  /^ò/i,
  /^i/i,
  /^l/i,
  /^s/i,
  /^d/i,
  /^s/i,
  /^d/i],

  any: [
  /^fa/i,
  /^ge/i,
  /^mà/i,
  /^gi/i,
  /^c/i,
  /^ò/i,
  /^i/i,
  /^l/i,
  /^su/i,
  /^d/i,
  /^sa/i,
  /^d/i]

};
var matchDayPatterns = {
  narrow: /^[dlmcahs]/i,
  short: /^(dò|lu|mà|ci|ar|ha|sa)/i,
  abbreviated: /^(did|dil|dim|dic|dia|dih|dis)/i,
  wide: /^(didòmhnaich|diluain|dimàirt|diciadain|diardaoin|dihaoine|disathairne)/i
};
var parseDayPatterns = {
  narrow: [/^d/i, /^l/i, /^m/i, /^c/i, /^a/i, /^h/i, /^s/i],
  any: [/^d/i, /^l/i, /^m/i, /^c/i, /^a/i, /^h/i, /^s/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(san|aig) (madainn|feasgar|feasgar|oidhche))/i,
  any: /^([ap]\.?\s?m\.?|meadhan oidhche|meadhan là|(san|aig) (madainn|feasgar|feasgar|oidhche))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^m/i,
    pm: /^f/i,
    midnight: /^meadhan oidhche/i,
    noon: /^meadhan là/i,
    morning: /sa mhadainn/i,
    afternoon: /feasgar/i,
    evening: /feasgar/i,
    night: /air an oidhche/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {return parseInt(value, 10);}
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function valueCallback(index) {return index + 1;}
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};

// lib/locale/gd.js
var gd = {
  code: "gd",
  formatDistance: formatDistance,
  formatLong: formatLong,
  formatRelative: formatRelative,
  localize: localize,
  match: match,
  options: {
    weekStartsOn: 0,
    firstWeekContainsDate: 1
  }
};

// lib/locale/gd/cdn.js
window.dateFns = _objectSpread(_objectSpread({},
window.dateFns), {}, {
  locale: _objectSpread(_objectSpread({}, (_window$dateFns =
  window.dateFns) === null || _window$dateFns === void 0 ? void 0 : _window$dateFns.locale), {}, {
    gd: gd }) });



//# debugId=8A995658F065856664756E2164756E21

//# sourceMappingURL=cdn.js.map
})();