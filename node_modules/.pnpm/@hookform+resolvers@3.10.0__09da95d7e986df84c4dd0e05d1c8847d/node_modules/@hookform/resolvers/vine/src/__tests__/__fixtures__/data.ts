import vine from '@vinejs/vine';
import { Infer } from '@vinejs/vine/build/src/types';
import { Field, InternalFieldName } from 'react-hook-form';

export const schema = vine.compile(
  vine.object({
    username: vine.string().regex(/^\w+$/).minLength(3).maxLength(30),
    password: vine
      .string()
      .regex(new RegExp('.*[A-Z].*'))
      .regex(new RegExp('.*[a-z].*'))
      .regex(new RegExp('.*\\d.*'))
      .regex(new RegExp('.*[`~<>?,./!@#$%^&*()\\-_+=&quot;\&apos;|{}\\[\\];:\\\\].*&apos;))
      .minLength(8)
      .confirmed({ confirmationField: &apos;repeatPassword&apos; }),
    repeatPassword: vine.string().sameAs(&apos;password&apos;),
    accessToken: vine.unionOfTypes([vine.string(), vine.number()]),
    birthYear: vine.number().min(1900).max(2013),
    email: vine.string().email().optional(),
    tags: vine.array(vine.string()),
    enabled: vine.boolean(),
    like: vine.array(
      vine.object({
        id: vine.number(),
        name: vine.string().fixedLength(4),
      }),
    ),
    dateStr: vine
      .string()
      .transform((value: string) => new Date(value).toISOString()),
  }),
);

export const validData: Infer<typeof schema> = {
  username: &apos;Doe&apos;,
  password: &apos;Password123_&apos;,
  repeatPassword: &apos;Password123_&apos;,
  birthYear: 2000,
  email: &apos;john@doe.com&apos;,
  tags: [&apos;tag1&apos;, &apos;tag2&apos;],
  enabled: true,
  accessToken: &apos;accessToken&apos;,
  like: [
    {
      id: 1,
      name: &apos;name&apos;,
    },
  ],
  dateStr: &apos;2020-01-01T00:00:00.000Z&apos;,
};

export const invalidData = {
  password: &apos;___&apos;,
  email: &apos;&apos;,
  birthYear: &apos;birthYear&apos;,
  like: [{ id: &apos;z&apos; }],
};

export const fields: Record<InternalFieldName, Field['_f']> = {
  username: {
    ref: { name: 'username' },
    name: 'username',
  },
  password: {
    ref: { name: 'password' },
    name: 'password',
  },
  email: {
    ref: { name: 'email' },
    name: 'email',
  },
  birthday: {
    ref: { name: 'birthday' },
    name: 'birthday',
  },
};
