import { Field, InternalFieldName } from 'react-hook-form';
import * as vest from 'vest';

export const validationSuite = vest.create('form', (data: any = {}) => {
  vest.test(&apos;username&apos;, &apos;Username is required&apos;, () => {
    vest.enforce(data.username).isNotEmpty();
  });

  vest.test(&apos;username&apos;, &apos;Must be longer than 3 chars&apos;, () => {
    vest.enforce(data.username).longerThan(3);
  });

  vest.test(&apos;deepObject.data&apos;, &apos;deepObject.data is required&apos;, () => {
    vest.enforce(data.deepObject.data).isNotEmpty();
  });

  vest.test(&apos;password&apos;, &apos;Password is required&apos;, () => {
    vest.enforce(data.password).isNotEmpty();
  });

  vest.test(&apos;password&apos;, &apos;Password must be at least 5 chars&apos;, () => {
    vest.enforce(data.password).longerThanOrEquals(5);
  });

  vest.test(&apos;password&apos;, &apos;Password must contain a digit&apos;, () => {
    vest.enforce(data.password).matches(/[0-9]/);
  });

  vest.test(&apos;password&apos;, &apos;Password must contain a symbol&apos;, () => {
    vest.enforce(data.password).matches(/[^A-Za-z0-9]/);
  });
});

export const validData = {
  username: &apos;asdda&apos;,
  password: &apos;asddfg123!&apos;,
  deepObject: {
    data: &apos;test&apos;,
  },
};

export const invalidData = {
  username: &apos;&apos;,
  password: &apos;a&apos;,
  deepObject: {
    data: &apos;&apos;,
  },
};

export const fields: Record<InternalFieldName, Field['_f']> = {
  username: {
    ref: { name: 'username' },
    name: 'username',
  },
  password: {
    ref: { name: 'password' },
    name: 'password',
  },
  email: {
    ref: { name: 'email' },
    name: 'email',
  },
  birthday: {
    ref: { name: 'birthday' },
    name: 'birthday',
  },
};
