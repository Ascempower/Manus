export = plugin;
/** @typedef {{ plugins: { react: typeof plugin }, rules: import('eslint').Linter.RulesRecord, languageOptions: { parserOptions: import('eslint').Linter.ParserOptions } }} ReactFlatConfig */
/** @type {{ deprecatedRules: typeof deprecatedRules, rules: typeof allRules, configs: typeof configs & { flat: Record<string, ReactFlatConfig> }}} */
declare const plugin: {
    deprecatedRules: typeof deprecatedRules;
    rules: typeof allRules;
    configs: typeof configs & {
        flat: Record<string, ReactFlatConfig>;
    };
};
declare namespace plugin {
    export { ReactFlatConfig };
}
/** @type {Partial<typeof allRules>} */
declare const deprecatedRules: Partial<typeof allRules>;
declare const allRules: {
    &apos;boolean-prop-naming&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;button-has-type&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;checked-requires-onchange-or-readonly&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;default-props-match-prop-types&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;destructuring-assignment&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;display-name&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;forbid-component-props&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;forbid-dom-props&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;forbid-elements&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;forbid-foreign-prop-types&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;forbid-prop-types&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;forward-ref-uses-ref&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;function-component-definition&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;hook-use-state&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;iframe-missing-sandbox&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-boolean-value&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-child-element-spacing&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-closing-bracket-location&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-closing-tag-location&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-curly-spacing&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-curly-newline&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-equals-spacing&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-filename-extension&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-first-prop-new-line&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-handler-names&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-indent&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-indent-props&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-key&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-max-depth&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-max-props-per-line&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-newline&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-no-bind&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-no-comment-textnodes&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-no-constructed-context-values&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-no-duplicate-props&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-no-leaked-render&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-no-literals&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-no-script-url&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-no-target-blank&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-no-useless-fragment&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-one-expression-per-line&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-no-undef&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-curly-brace-presence&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-pascal-case&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-fragments&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-props-no-multi-spaces&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-props-no-spreading&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-props-no-spread-multi&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-sort-default-props&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-sort-props&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-space-before-closing&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-tag-spacing&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-uses-react&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-uses-vars&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;jsx-wrap-multilines&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-invalid-html-attribute&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-access-state-in-setstate&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-adjacent-inline-elements&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-array-index-key&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-arrow-function-lifecycle&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-children-prop&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-danger&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-danger-with-children&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-deprecated&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-did-mount-set-state&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-did-update-set-state&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-direct-mutation-state&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-find-dom-node&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-is-mounted&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-multi-comp&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-namespace&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-set-state&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-string-refs&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-redundant-should-component-update&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-render-return-value&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-this-in-sfc&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-typos&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-unescaped-entities&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-unknown-property&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-unsafe&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-unstable-nested-components&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-unused-class-component-methods&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-unused-prop-types&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-unused-state&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-object-type-as-default-prop&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;no-will-update-set-state&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;prefer-es6-class&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;prefer-exact-props&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;prefer-read-only-props&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;prefer-stateless-function&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;prop-types&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;react-in-jsx-scope&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;require-default-props&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;require-optimization&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;require-render-return&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;self-closing-comp&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;sort-comp&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;sort-default-props&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;sort-prop-types&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;state-in-constructor&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;static-property-placement&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;style-prop-object&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
    &apos;void-dom-elements-no-children&apos;: import(&quot;eslint&quot;).Rule.RuleModule;
};
declare const configs: {
    recommended: {
        plugins: [&quot;react&quot;];
        parserOptions: {
            ecmaFeatures: {
                jsx: boolean;
            };
        };
        rules: {
            &apos;react/display-name&apos;: 2;
            &apos;react/jsx-key&apos;: 2;
            &apos;react/jsx-no-comment-textnodes&apos;: 2;
            &apos;react/jsx-no-duplicate-props&apos;: 2;
            &apos;react/jsx-no-target-blank&apos;: 2;
            &apos;react/jsx-no-undef&apos;: 2;
            &apos;react/jsx-uses-react&apos;: 2;
            &apos;react/jsx-uses-vars&apos;: 2;
            &apos;react/no-children-prop&apos;: 2;
            &apos;react/no-danger-with-children&apos;: 2;
            &apos;react/no-deprecated&apos;: 2;
            &apos;react/no-direct-mutation-state&apos;: 2;
            &apos;react/no-find-dom-node&apos;: 2;
            &apos;react/no-is-mounted&apos;: 2;
            &apos;react/no-render-return-value&apos;: 2;
            &apos;react/no-string-refs&apos;: 2;
            &apos;react/no-unescaped-entities&apos;: 2;
            &apos;react/no-unknown-property&apos;: 2;
            &apos;react/no-unsafe&apos;: 0;
            &apos;react/prop-types&apos;: 2;
            &apos;react/react-in-jsx-scope&apos;: 2;
            &apos;react/require-render-return&apos;: 2;
        };
    };
    all: {
        plugins: [&quot;react&quot;];
        parserOptions: {
            ecmaFeatures: {
                jsx: boolean;
            };
        };
        rules: Record<"boolean-prop-naming" | "button-has-type" | "checked-requires-onchange-or-readonly" | "default-props-match-prop-types" | "destructuring-assignment" | "display-name" | "forbid-component-props" | "forbid-dom-props" | "forbid-elements" | "forbid-foreign-prop-types" | "forbid-prop-types" | "prop-types" | "forward-ref-uses-ref" | "function-component-definition" | "hook-use-state" | "iframe-missing-sandbox" | "jsx-boolean-value" | "jsx-child-element-spacing" | "jsx-closing-bracket-location" | "jsx-closing-tag-location" | "jsx-curly-spacing" | "jsx-curly-newline" | "jsx-equals-spacing" | "jsx-filename-extension" | "jsx-first-prop-new-line" | "jsx-handler-names" | "jsx-indent" | "jsx-indent-props" | "jsx-key" | "jsx-max-depth" | "jsx-max-props-per-line" | "jsx-newline" | "jsx-no-bind" | "jsx-no-comment-textnodes" | "jsx-no-constructed-context-values" | "jsx-no-duplicate-props" | "jsx-no-leaked-render" | "jsx-no-literals" | "jsx-no-script-url" | "jsx-no-target-blank" | "jsx-no-useless-fragment" | "jsx-one-expression-per-line" | "jsx-no-undef" | "jsx-curly-brace-presence" | "jsx-pascal-case" | "jsx-fragments" | "jsx-props-no-multi-spaces" | "jsx-props-no-spreading" | "jsx-props-no-spread-multi" | "sort-default-props" | "jsx-sort-default-props" | "jsx-sort-props" | "jsx-tag-spacing" | "jsx-space-before-closing" | "jsx-uses-react" | "jsx-uses-vars" | "jsx-wrap-multilines" | "no-invalid-html-attribute" | "no-access-state-in-setstate" | "no-adjacent-inline-elements" | "no-array-index-key" | "no-arrow-function-lifecycle" | "no-children-prop" | "no-danger" | "no-danger-with-children" | "no-deprecated" | "no-direct-mutation-state" | "no-find-dom-node" | "no-is-mounted" | "no-multi-comp" | "no-namespace" | "no-set-state" | "no-string-refs" | "no-redundant-should-component-update" | "no-render-return-value" | "no-this-in-sfc" | "no-typos" | "no-unescaped-entities" | "no-unknown-property" | "no-unsafe" | "no-unstable-nested-components" | "no-unused-class-component-methods" | "no-unused-prop-types" | "no-unused-state" | "no-object-type-as-default-prop" | "prefer-es6-class" | "prefer-exact-props" | "prefer-read-only-props" | "prefer-stateless-function" | "react-in-jsx-scope" | "require-default-props" | "require-optimization" | "require-render-return" | "self-closing-comp" | "sort-comp" | "sort-prop-types" | "state-in-constructor" | "static-property-placement" | "style-prop-object" | "void-dom-elements-no-children" | "no-did-mount-set-state" | "no-did-update-set-state" | "no-will-update-set-state", 2 | "error">;
    };
    &apos;jsx-runtime&apos;: {
        plugins: [&quot;react&quot;];
        parserOptions: {
            ecmaFeatures: {
                jsx: boolean;
            };
            jsxPragma: any;
        };
        rules: {
            &apos;react/react-in-jsx-scope&apos;: 0;
            &apos;react/jsx-uses-react&apos;: 0;
        };
    };
    flat: Record<string, ReactFlatConfig>;
};
type ReactFlatConfig = {
    plugins: {
        react: typeof plugin;
    };
    rules: import('eslint').Linter.RulesRecord;
    languageOptions: {
        parserOptions: import('eslint').Linter.ParserOptions;
    };
};
//# sourceMappingURL=index.d.ts.map