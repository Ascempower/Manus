import { screen } from '@testing-library/react';

import { customRender } from 'test/render';

import { Button } from './Button';

let button: HTMLButtonElement;

describe('when rendered without props', () => {
  beforeEach(() => {
    customRender(<Button className="foo" style={{ color: 'blue' }} />);
    button = screen.getByRole(&apos;button&apos;);
  });
  test(&apos;should render a button with type &quot;button&quot;&apos;, () => {
    expect(button).toHaveAttribute(&apos;type&apos;, &apos;button&apos;);
  });
  test(&apos;should render a button with the button class name&apos;, () => {
    expect(button).toHaveClass(&apos;rdp-button&apos;);
  });
  test(&apos;should render a button with the reset class name&apos;, () => {
    expect(button).toHaveClass(&apos;rdp-button_reset&apos;);
  });
  test(&apos;should add the class name&apos;, () => {
    expect(button).toHaveClass(&apos;foo&apos;);
  });
  test(&apos;should apply the style&apos;, () => {
    expect(button).toHaveStyle({ color: &apos;blue&apos; });
  });
});

describe(&apos;when using class names and styles from context&apos;, () => {
  beforeEach(() => {
    customRender(<Button />, {
      classNames: { button: 'foo' },
      styles: { button: { color: 'red' } }
    });
    button = screen.getByRole('button');
  });
  test('should apply the style', () => {
    expect(button).toHaveStyle({ color: 'red' });
  });
  test('should apply the class name', () => {
    expect(button).toHaveClass('foo');
  });
});
