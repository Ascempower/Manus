(() => {
var _window$dateFns;function _typeof(o) {&quot;@babel/helpers - typeof&quot;;return _typeof = &quot;function&quot; == typeof Symbol && &quot;symbol&quot; == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && &quot;function&quot; == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? &quot;symbol&quot; : typeof o;}, _typeof(o);}function ownKeys(e, r) {var t = Object.keys(e);if (Object.getOwnPropertySymbols) {var o = Object.getOwnPropertySymbols(e);r && (o = o.filter(function (r) {return Object.getOwnPropertyDescriptor(e, r).enumerable;})), t.push.apply(t, o);}return t;}function _objectSpread(e) {for (var r = 1; r < arguments.length; r++) {var t = null != arguments[r] ? arguments[r] : {};r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {_defineProperty(e, r, t[r]);}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));});}return e;}function _defineProperty(obj, key, value) {key = _toPropertyKey(key);if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : String(i);}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);}var __defProp = Object.defineProperty;
var __export = function __export(target, all) {
  for (var name in all)
  __defProp(target, name, {
    get: all[name],
    enumerable: true,
    configurable: true,
    set: function set(newValue) {return all[name] = function () {return newValue;};}
  });
};

// lib/locale/et/_lib/formatDistance.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    standalone: {
      one: "v\xE4hem kui \xFCks sekund",
      other: "v\xE4hem kui {{count}} sekundit"
    },
    withPreposition: {
      one: "v\xE4hem kui \xFChe sekundi",
      other: "v\xE4hem kui {{count}} sekundi"
    }
  },
  xSeconds: {
    standalone: {
      one: "\xFCks sekund",
      other: "{{count}} sekundit"
    },
    withPreposition: {
      one: "\xFChe sekundi",
      other: "{{count}} sekundi"
    }
  },
  halfAMinute: {
    standalone: "pool minutit",
    withPreposition: "poole minuti"
  },
  lessThanXMinutes: {
    standalone: {
      one: "v\xE4hem kui \xFCks minut",
      other: "v\xE4hem kui {{count}} minutit"
    },
    withPreposition: {
      one: "v\xE4hem kui \xFChe minuti",
      other: "v\xE4hem kui {{count}} minuti"
    }
  },
  xMinutes: {
    standalone: {
      one: "\xFCks minut",
      other: "{{count}} minutit"
    },
    withPreposition: {
      one: "\xFChe minuti",
      other: "{{count}} minuti"
    }
  },
  aboutXHours: {
    standalone: {
      one: "umbes \xFCks tund",
      other: "umbes {{count}} tundi"
    },
    withPreposition: {
      one: "umbes \xFChe tunni",
      other: "umbes {{count}} tunni"
    }
  },
  xHours: {
    standalone: {
      one: "\xFCks tund",
      other: "{{count}} tundi"
    },
    withPreposition: {
      one: "\xFChe tunni",
      other: "{{count}} tunni"
    }
  },
  xDays: {
    standalone: {
      one: "\xFCks p\xE4ev",
      other: "{{count}} p\xE4eva"
    },
    withPreposition: {
      one: "\xFChe p\xE4eva",
      other: "{{count}} p\xE4eva"
    }
  },
  aboutXWeeks: {
    standalone: {
      one: "umbes \xFCks n\xE4dal",
      other: "umbes {{count}} n\xE4dalat"
    },
    withPreposition: {
      one: "umbes \xFChe n\xE4dala",
      other: "umbes {{count}} n\xE4dala"
    }
  },
  xWeeks: {
    standalone: {
      one: "\xFCks n\xE4dal",
      other: "{{count}} n\xE4dalat"
    },
    withPreposition: {
      one: "\xFChe n\xE4dala",
      other: "{{count}} n\xE4dala"
    }
  },
  aboutXMonths: {
    standalone: {
      one: "umbes \xFCks kuu",
      other: "umbes {{count}} kuud"
    },
    withPreposition: {
      one: "umbes \xFChe kuu",
      other: "umbes {{count}} kuu"
    }
  },
  xMonths: {
    standalone: {
      one: "\xFCks kuu",
      other: "{{count}} kuud"
    },
    withPreposition: {
      one: "\xFChe kuu",
      other: "{{count}} kuu"
    }
  },
  aboutXYears: {
    standalone: {
      one: "umbes \xFCks aasta",
      other: "umbes {{count}} aastat"
    },
    withPreposition: {
      one: "umbes \xFChe aasta",
      other: "umbes {{count}} aasta"
    }
  },
  xYears: {
    standalone: {
      one: "\xFCks aasta",
      other: "{{count}} aastat"
    },
    withPreposition: {
      one: "\xFChe aasta",
      other: "{{count}} aasta"
    }
  },
  overXYears: {
    standalone: {
      one: "rohkem kui \xFCks aasta",
      other: "rohkem kui {{count}} aastat"
    },
    withPreposition: {
      one: "rohkem kui \xFChe aasta",
      other: "rohkem kui {{count}} aasta"
    }
  },
  almostXYears: {
    standalone: {
      one: "peaaegu \xFCks aasta",
      other: "peaaegu {{count}} aastat"
    },
    withPreposition: {
      one: "peaaegu \xFChe aasta",
      other: "peaaegu {{count}} aasta"
    }
  }
};
var formatDistance = function formatDistance(token, count, options) {
  var usageGroup = options !== null && options !== void 0 && options.addSuffix ? formatDistanceLocale[token].withPreposition : formatDistanceLocale[token].standalone;
  var result;
  if (typeof usageGroup === "string") {
    result = usageGroup;
  } else if (count === 1) {
    result = usageGroup.one;
  } else {
    result = usageGroup.other.replace("{{count}}", String(count));
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return result + &quot; p\xE4rast&quot;;
    } else {
      return result + &quot; eest&quot;;
    }
  }
  return result;
};

// lib/locale/_lib/buildFormatLongFn.js
function buildFormatLongFn(args) {
  return function () {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}

// lib/locale/et/_lib/formatLong.js
var dateFormats = {
  full: &quot;EEEE, d. MMMM y&quot;,
  long: &quot;d. MMMM y&quot;,
  medium: &quot;d. MMM y&quot;,
  short: &quot;dd.MM.y&quot;
};
var timeFormats = {
  full: &quot;HH:mm:ss zzzz&quot;,
  long: &quot;HH:mm:ss z&quot;,
  medium: &quot;HH:mm:ss&quot;,
  short: &quot;HH:mm&quot;
};
var dateTimeFormats = {
  full: &quot;{{date}} &apos;kell&apos; {{time}}&quot;,
  long: &quot;{{date}} &apos;kell&apos; {{time}}&quot;,
  medium: &quot;{{date}}. {{time}}&quot;,
  short: &quot;{{date}}. {{time}}&quot;
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: &quot;full&quot;
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: &quot;full&quot;
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: &quot;full&quot;
  })
};

// lib/locale/et/_lib/formatRelative.js
var formatRelativeLocale = {
  lastWeek: &quot;&apos;eelmine&apos; eeee &apos;kell&apos; p&quot;,
  yesterday: &quot;&apos;eile kell&apos; p&quot;,
  today: &quot;&apos;t\xE4na kell&apos; p&quot;,
  tomorrow: &quot;&apos;homme kell&apos; p&quot;,
  nextWeek: &quot;&apos;j\xE4rgmine&apos; eeee &apos;kell&apos; p&quot;,
  other: &quot;P&quot;
};
var formatRelative = function formatRelative(token, _date, _baseDate, _options) {return formatRelativeLocale[token];};

// lib/locale/_lib/buildLocalizeFn.js
function buildLocalizeFn(args) {
  return function (value, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : &quot;standalone&quot;;
    var valuesArray;
    if (context === &quot;formatting&quot; && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(value) : value;
    return valuesArray[index];
  };
}

// lib/locale/et/_lib/localize.js
var eraValues = {
  narrow: [&quot;e.m.a&quot;, &quot;m.a.j&quot;],
  abbreviated: [&quot;e.m.a&quot;, &quot;m.a.j&quot;],
  wide: [&quot;enne meie ajaarvamist&quot;, &quot;meie ajaarvamise j\xE4rgi&quot;]
};
var quarterValues = {
  narrow: [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;],
  abbreviated: [&quot;K1&quot;, &quot;K2&quot;, &quot;K3&quot;, &quot;K4&quot;],
  wide: [&quot;1. kvartal&quot;, &quot;2. kvartal&quot;, &quot;3. kvartal&quot;, &quot;4. kvartal&quot;]
};
var monthValues = {
  narrow: [&quot;J&quot;, &quot;V&quot;, &quot;M&quot;, &quot;A&quot;, &quot;M&quot;, &quot;J&quot;, &quot;J&quot;, &quot;A&quot;, &quot;S&quot;, &quot;O&quot;, &quot;N&quot;, &quot;D&quot;],
  abbreviated: [
  &quot;jaan&quot;,
  &quot;veebr&quot;,
  &quot;m\xE4rts&quot;,
  &quot;apr&quot;,
  &quot;mai&quot;,
  &quot;juuni&quot;,
  &quot;juuli&quot;,
  &quot;aug&quot;,
  &quot;sept&quot;,
  &quot;okt&quot;,
  &quot;nov&quot;,
  &quot;dets&quot;],

  wide: [
  &quot;jaanuar&quot;,
  &quot;veebruar&quot;,
  &quot;m\xE4rts&quot;,
  &quot;aprill&quot;,
  &quot;mai&quot;,
  &quot;juuni&quot;,
  &quot;juuli&quot;,
  &quot;august&quot;,
  &quot;september&quot;,
  &quot;oktoober&quot;,
  &quot;november&quot;,
  &quot;detsember&quot;]

};
var dayValues = {
  narrow: [&quot;P&quot;, &quot;E&quot;, &quot;T&quot;, &quot;K&quot;, &quot;N&quot;, &quot;R&quot;, &quot;L&quot;],
  short: [&quot;P&quot;, &quot;E&quot;, &quot;T&quot;, &quot;K&quot;, &quot;N&quot;, &quot;R&quot;, &quot;L&quot;],
  abbreviated: [
  &quot;p\xFChap.&quot;,
  &quot;esmasp.&quot;,
  &quot;teisip.&quot;,
  &quot;kolmap.&quot;,
  &quot;neljap.&quot;,
  &quot;reede.&quot;,
  &quot;laup.&quot;],

  wide: [
  &quot;p\xFChap\xE4ev&quot;,
  &quot;esmasp\xE4ev&quot;,
  &quot;teisip\xE4ev&quot;,
  &quot;kolmap\xE4ev&quot;,
  &quot;neljap\xE4ev&quot;,
  &quot;reede&quot;,
  &quot;laup\xE4ev&quot;]

};
var dayPeriodValues = {
  narrow: {
    am: &quot;AM&quot;,
    pm: &quot;PM&quot;,
    midnight: &quot;kesk\xF6\xF6&quot;,
    noon: &quot;keskp\xE4ev&quot;,
    morning: &quot;hommik&quot;,
    afternoon: &quot;p\xE4rastl\xF5una&quot;,
    evening: &quot;\xF5htu&quot;,
    night: &quot;\xF6\xF6&quot;
  },
  abbreviated: {
    am: &quot;AM&quot;,
    pm: &quot;PM&quot;,
    midnight: &quot;kesk\xF6\xF6&quot;,
    noon: &quot;keskp\xE4ev&quot;,
    morning: &quot;hommik&quot;,
    afternoon: &quot;p\xE4rastl\xF5una&quot;,
    evening: &quot;\xF5htu&quot;,
    night: &quot;\xF6\xF6&quot;
  },
  wide: {
    am: &quot;AM&quot;,
    pm: &quot;PM&quot;,
    midnight: &quot;kesk\xF6\xF6&quot;,
    noon: &quot;keskp\xE4ev&quot;,
    morning: &quot;hommik&quot;,
    afternoon: &quot;p\xE4rastl\xF5una&quot;,
    evening: &quot;\xF5htu&quot;,
    night: &quot;\xF6\xF6&quot;
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: &quot;AM&quot;,
    pm: &quot;PM&quot;,
    midnight: &quot;kesk\xF6\xF6l&quot;,
    noon: &quot;keskp\xE4eval&quot;,
    morning: &quot;hommikul&quot;,
    afternoon: &quot;p\xE4rastl\xF5unal&quot;,
    evening: &quot;\xF5htul&quot;,
    night: &quot;\xF6\xF6sel&quot;
  },
  abbreviated: {
    am: &quot;AM&quot;,
    pm: &quot;PM&quot;,
    midnight: &quot;kesk\xF6\xF6l&quot;,
    noon: &quot;keskp\xE4eval&quot;,
    morning: &quot;hommikul&quot;,
    afternoon: &quot;p\xE4rastl\xF5unal&quot;,
    evening: &quot;\xF5htul&quot;,
    night: &quot;\xF6\xF6sel&quot;
  },
  wide: {
    am: &quot;AM&quot;,
    pm: &quot;PM&quot;,
    midnight: &quot;kesk\xF6\xF6l&quot;,
    noon: &quot;keskp\xE4eval&quot;,
    morning: &quot;hommikul&quot;,
    afternoon: &quot;p\xE4rastl\xF5unal&quot;,
    evening: &quot;\xF5htul&quot;,
    night: &quot;\xF6\xF6sel&quot;
  }
};
var ordinalNumber = function ordinalNumber(dirtyNumber, _options) {
  var number = Number(dirtyNumber);
  return number + &quot;.&quot;;
};
var localize = {
  ordinalNumber: ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: &quot;wide&quot;
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: &quot;wide&quot;,
    argumentCallback: function argumentCallback(quarter) {return quarter - 1;}
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: &quot;wide&quot;,
    formattingValues: monthValues,
    defaultFormattingWidth: &quot;wide&quot;
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: &quot;wide&quot;,
    formattingValues: dayValues,
    defaultFormattingWidth: &quot;wide&quot;
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: &quot;wide&quot;,
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: &quot;wide&quot;
  })
};

// lib/locale/_lib/buildMatchFn.js
function buildMatchFn(args) {
  return function (string) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {return pattern.test(matchedString);}) : findKey(parsePatterns, function (pattern) {return pattern.test(matchedString);});
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return { value: value, rest: rest };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (Object.prototype.hasOwnProperty.call(object, key) && predicate(object[key])) {
      return key;
    }
  }
  return;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return;
}

// lib/locale/_lib/buildMatchPatternFn.js
function buildMatchPatternFn(args) {
  return function (string) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult)
    return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult)
    return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return { value: value, rest: rest };
  };
}

// lib/locale/et/_lib/match.js
var matchOrdinalNumberPattern = /^\d+\./i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(e\.m\.a|m\.a\.j|eKr|pKr)/i,
  abbreviated: /^(e\.m\.a|m\.a\.j|eKr|pKr)/i,
  wide: /^(enne meie ajaarvamist|meie ajaarvamise järgi|enne Kristust|pärast Kristust)/i
};
var parseEraPatterns = {
  any: [/^e/i, /^(m|p)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^K[1234]/i,
  wide: /^[1234](\.)? kvartal/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jvmasond]/i,
  abbreviated: /^(jaan|veebr|märts|apr|mai|juuni|juuli|aug|sept|okt|nov|dets)/i,
  wide: /^(jaanuar|veebruar|märts|aprill|mai|juuni|juuli|august|september|oktoober|november|detsember)/i
};
var parseMonthPatterns = {
  narrow: [
  /^j/i,
  /^v/i,
  /^m/i,
  /^a/i,
  /^m/i,
  /^j/i,
  /^j/i,
  /^a/i,
  /^s/i,
  /^o/i,
  /^n/i,
  /^d/i],

  any: [
  /^ja/i,
  /^v/i,
  /^mär/i,
  /^ap/i,
  /^mai/i,
  /^juun/i,
  /^juul/i,
  /^au/i,
  /^s/i,
  /^o/i,
  /^n/i,
  /^d/i]

};
var matchDayPatterns = {
  narrow: /^[petknrl]/i,
  short: /^[petknrl]/i,
  abbreviated: /^(püh?|esm?|tei?|kolm?|nel?|ree?|laup?)\.?/i,
  wide: /^(pühapäev|esmaspäev|teisipäev|kolmapäev|neljapäev|reede|laupäev)/i
};
var parseDayPatterns = {
  any: [/^p/i, /^e/i, /^t/i, /^k/i, /^n/i, /^r/i, /^l/i]
};
var matchDayPeriodPatterns = {
  any: /^(am|pm|keskööl?|keskpäev(al)?|hommik(ul)?|pärastlõunal?|õhtul?|öö(sel)?)/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^keskö/i,
    noon: /^keskp/i,
    morning: /hommik/i,
    afternoon: /pärastlõuna/i,
    evening: /õhtu/i,
    night: /öö/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {return parseInt(value, 10);}
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function valueCallback(index) {return index + 1;}
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};

// lib/locale/et.js
var et = {
  code: "et",
  formatDistance: formatDistance,
  formatLong: formatLong,
  formatRelative: formatRelative,
  localize: localize,
  match: match,
  options: {
    weekStartsOn: 1,
    firstWeekContainsDate: 4
  }
};

// lib/locale/et/cdn.js
window.dateFns = _objectSpread(_objectSpread({},
window.dateFns), {}, {
  locale: _objectSpread(_objectSpread({}, (_window$dateFns =
  window.dateFns) === null || _window$dateFns === void 0 ? void 0 : _window$dateFns.locale), {}, {
    et: et }) });



//# debugId=6B2AC2413AC3C80264756E2164756E21

//# sourceMappingURL=cdn.js.map
})();