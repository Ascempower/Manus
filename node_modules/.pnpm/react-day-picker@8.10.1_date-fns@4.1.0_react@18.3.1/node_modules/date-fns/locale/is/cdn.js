(() => {
var _window$dateFns;function _typeof(o) {&quot;@babel/helpers - typeof&quot;;return _typeof = &quot;function&quot; == typeof Symbol && &quot;symbol&quot; == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && &quot;function&quot; == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? &quot;symbol&quot; : typeof o;}, _typeof(o);}function ownKeys(e, r) {var t = Object.keys(e);if (Object.getOwnPropertySymbols) {var o = Object.getOwnPropertySymbols(e);r && (o = o.filter(function (r) {return Object.getOwnPropertyDescriptor(e, r).enumerable;})), t.push.apply(t, o);}return t;}function _objectSpread(e) {for (var r = 1; r < arguments.length; r++) {var t = null != arguments[r] ? arguments[r] : {};r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {_defineProperty(e, r, t[r]);}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));});}return e;}function _defineProperty(obj, key, value) {key = _toPropertyKey(key);if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : String(i);}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);}var __defProp = Object.defineProperty;
var __export = function __export(target, all) {
  for (var name in all)
  __defProp(target, name, {
    get: all[name],
    enumerable: true,
    configurable: true,
    set: function set(newValue) {return all[name] = function () {return newValue;};}
  });
};

// lib/locale/is/_lib/formatDistance.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: "minna en 1 sek\xFAnda",
    other: "minna en {{count}} sek\xFAndur"
  },
  xSeconds: {
    one: "1 sek\xFAnda",
    other: "{{count}} sek\xFAndur"
  },
  halfAMinute: "h\xE1lf m\xEDn\xFAta",
  lessThanXMinutes: {
    one: "minna en 1 m\xEDn\xFAta",
    other: "minna en {{count}} m\xEDn\xFAtur"
  },
  xMinutes: {
    one: "1 m\xEDn\xFAta",
    other: "{{count}} m\xEDn\xFAtur"
  },
  aboutXHours: {
    one: "u.\xFE.b. 1 klukkustund",
    other: "u.\xFE.b. {{count}} klukkustundir"
  },
  xHours: {
    one: "1 klukkustund",
    other: "{{count}} klukkustundir"
  },
  xDays: {
    one: "1 dagur",
    other: "{{count}} dagar"
  },
  aboutXWeeks: {
    one: "um viku",
    other: "um {{count}} vikur"
  },
  xWeeks: {
    one: "1 viku",
    other: "{{count}} vikur"
  },
  aboutXMonths: {
    one: "u.\xFE.b. 1 m\xE1nu\xF0ur",
    other: "u.\xFE.b. {{count}} m\xE1nu\xF0ir"
  },
  xMonths: {
    one: "1 m\xE1nu\xF0ur",
    other: "{{count}} m\xE1nu\xF0ir"
  },
  aboutXYears: {
    one: "u.\xFE.b. 1 \xE1r",
    other: "u.\xFE.b. {{count}} \xE1r"
  },
  xYears: {
    one: "1 \xE1r",
    other: "{{count}} \xE1r"
  },
  overXYears: {
    one: "meira en 1 \xE1r",
    other: "meira en {{count}} \xE1r"
  },
  almostXYears: {
    one: "n\xE6stum 1 \xE1r",
    other: "n\xE6stum {{count}} \xE1r"
  }
};
var formatDistance = function formatDistance(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", count.toString());
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return &quot;\xED &quot; + result;
    } else {
      return result + &quot; s\xED\xF0an&quot;;
    }
  }
  return result;
};

// lib/locale/_lib/buildFormatLongFn.js
function buildFormatLongFn(args) {
  return function () {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}

// lib/locale/is/_lib/formatLong.js
var dateFormats = {
  full: &quot;EEEE, do MMMM y&quot;,
  long: &quot;do MMMM y&quot;,
  medium: &quot;do MMM y&quot;,
  short: &quot;d.MM.y&quot;
};
var timeFormats = {
  full: &quot;&apos;kl&apos;. HH:mm:ss zzzz&quot;,
  long: &quot;HH:mm:ss z&quot;,
  medium: &quot;HH:mm:ss&quot;,
  short: &quot;HH:mm&quot;
};
var dateTimeFormats = {
  full: &quot;{{date}} &apos;kl.&apos; {{time}}&quot;,
  long: &quot;{{date}} &apos;kl.&apos; {{time}}&quot;,
  medium: &quot;{{date}} {{time}}&quot;,
  short: &quot;{{date}} {{time}}&quot;
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: &quot;full&quot;
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: &quot;full&quot;
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: &quot;full&quot;
  })
};

// lib/locale/is/_lib/formatRelative.js
var formatRelativeLocale = {
  lastWeek: &quot;&apos;s\xED\xF0asta&apos; dddd &apos;kl.&apos; p&quot;,
  yesterday: &quot;&apos;\xED g\xE6r kl.&apos; p&quot;,
  today: &quot;&apos;\xED dag kl.&apos; p&quot;,
  tomorrow: &quot;&apos;\xE1 morgun kl.&apos; p&quot;,
  nextWeek: &quot;dddd &apos;kl.&apos; p&quot;,
  other: &quot;P&quot;
};
var formatRelative = function formatRelative(token, _date, _baseDate, _options) {return formatRelativeLocale[token];};

// lib/locale/_lib/buildLocalizeFn.js
function buildLocalizeFn(args) {
  return function (value, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : &quot;standalone&quot;;
    var valuesArray;
    if (context === &quot;formatting&quot; && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(value) : value;
    return valuesArray[index];
  };
}

// lib/locale/is/_lib/localize.js
var eraValues = {
  narrow: [&quot;f.Kr.&quot;, &quot;e.Kr.&quot;],
  abbreviated: [&quot;f.Kr.&quot;, &quot;e.Kr.&quot;],
  wide: [&quot;fyrir Krist&quot;, &quot;eftir Krist&quot;]
};
var quarterValues = {
  narrow: [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;],
  abbreviated: [&quot;1F&quot;, &quot;2F&quot;, &quot;3F&quot;, &quot;4F&quot;],
  wide: [&quot;1. fj\xF3r\xF0ungur&quot;, &quot;2. fj\xF3r\xF0ungur&quot;, &quot;3. fj\xF3r\xF0ungur&quot;, &quot;4. fj\xF3r\xF0ungur&quot;]
};
var monthValues = {
  narrow: [&quot;J&quot;, &quot;F&quot;, &quot;M&quot;, &quot;A&quot;, &quot;M&quot;, &quot;J&quot;, &quot;J&quot;, &quot;\xC1&quot;, &quot;S&quot;, &quot;\xD3&quot;, &quot;N&quot;, &quot;D&quot;],
  abbreviated: [
  &quot;jan.&quot;,
  &quot;feb.&quot;,
  &quot;mars&quot;,
  &quot;apr\xEDl&quot;,
  &quot;ma\xED&quot;,
  &quot;j\xFAn\xED&quot;,
  &quot;j\xFAl\xED&quot;,
  &quot;\xE1g\xFAst&quot;,
  &quot;sept.&quot;,
  &quot;okt.&quot;,
  &quot;n\xF3v.&quot;,
  &quot;des.&quot;],

  wide: [
  &quot;jan\xFAar&quot;,
  &quot;febr\xFAar&quot;,
  &quot;mars&quot;,
  &quot;apr\xEDl&quot;,
  &quot;ma\xED&quot;,
  &quot;j\xFAn\xED&quot;,
  &quot;j\xFAl\xED&quot;,
  &quot;\xE1g\xFAst&quot;,
  &quot;september&quot;,
  &quot;okt\xF3ber&quot;,
  &quot;n\xF3vember&quot;,
  &quot;desember&quot;]

};
var dayValues = {
  narrow: [&quot;S&quot;, &quot;M&quot;, &quot;\xDE&quot;, &quot;M&quot;, &quot;F&quot;, &quot;F&quot;, &quot;L&quot;],
  short: [&quot;Su&quot;, &quot;M\xE1&quot;, &quot;\xDEr&quot;, &quot;Mi&quot;, &quot;Fi&quot;, &quot;F\xF6&quot;, &quot;La&quot;],
  abbreviated: [&quot;sun.&quot;, &quot;m\xE1n.&quot;, &quot;\xFEri.&quot;, &quot;mi\xF0.&quot;, &quot;fim.&quot;, &quot;f\xF6s.&quot;, &quot;lau.&quot;],
  wide: [
  &quot;sunnudagur&quot;,
  &quot;m\xE1nudagur&quot;,
  &quot;\xFEri\xF0judagur&quot;,
  &quot;mi\xF0vikudagur&quot;,
  &quot;fimmtudagur&quot;,
  &quot;f\xF6studagur&quot;,
  &quot;laugardagur&quot;]

};
var dayPeriodValues = {
  narrow: {
    am: &quot;f&quot;,
    pm: &quot;e&quot;,
    midnight: &quot;mi\xF0n\xE6tti&quot;,
    noon: &quot;h\xE1degi&quot;,
    morning: &quot;morgunn&quot;,
    afternoon: &quot;s\xED\xF0degi&quot;,
    evening: &quot;kv\xF6ld&quot;,
    night: &quot;n\xF3tt&quot;
  },
  abbreviated: {
    am: &quot;f.h.&quot;,
    pm: &quot;e.h.&quot;,
    midnight: &quot;mi\xF0n\xE6tti&quot;,
    noon: &quot;h\xE1degi&quot;,
    morning: &quot;morgunn&quot;,
    afternoon: &quot;s\xED\xF0degi&quot;,
    evening: &quot;kv\xF6ld&quot;,
    night: &quot;n\xF3tt&quot;
  },
  wide: {
    am: &quot;fyrir h\xE1degi&quot;,
    pm: &quot;eftir h\xE1degi&quot;,
    midnight: &quot;mi\xF0n\xE6tti&quot;,
    noon: &quot;h\xE1degi&quot;,
    morning: &quot;morgunn&quot;,
    afternoon: &quot;s\xED\xF0degi&quot;,
    evening: &quot;kv\xF6ld&quot;,
    night: &quot;n\xF3tt&quot;
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: &quot;f&quot;,
    pm: &quot;e&quot;,
    midnight: &quot;\xE1 mi\xF0n\xE6tti&quot;,
    noon: &quot;\xE1 h\xE1degi&quot;,
    morning: &quot;a\xF0 morgni&quot;,
    afternoon: &quot;s\xED\xF0degis&quot;,
    evening: &quot;um kv\xF6ld&quot;,
    night: &quot;um n\xF3tt&quot;
  },
  abbreviated: {
    am: &quot;f.h.&quot;,
    pm: &quot;e.h.&quot;,
    midnight: &quot;\xE1 mi\xF0n\xE6tti&quot;,
    noon: &quot;\xE1 h\xE1degi&quot;,
    morning: &quot;a\xF0 morgni&quot;,
    afternoon: &quot;s\xED\xF0degis&quot;,
    evening: &quot;um kv\xF6ld&quot;,
    night: &quot;um n\xF3tt&quot;
  },
  wide: {
    am: &quot;fyrir h\xE1degi&quot;,
    pm: &quot;eftir h\xE1degi&quot;,
    midnight: &quot;\xE1 mi\xF0n\xE6tti&quot;,
    noon: &quot;\xE1 h\xE1degi&quot;,
    morning: &quot;a\xF0 morgni&quot;,
    afternoon: &quot;s\xED\xF0degis&quot;,
    evening: &quot;um kv\xF6ld&quot;,
    night: &quot;um n\xF3tt&quot;
  }
};
var ordinalNumber = function ordinalNumber(dirtyNumber, _options) {
  var number = Number(dirtyNumber);
  return number + &quot;.&quot;;
};
var localize = {
  ordinalNumber: ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: &quot;wide&quot;
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: &quot;wide&quot;,
    argumentCallback: function argumentCallback(quarter) {return quarter - 1;}
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: &quot;wide&quot;
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: &quot;wide&quot;
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: &quot;wide&quot;,
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: &quot;wide&quot;
  })
};

// lib/locale/_lib/buildMatchFn.js
function buildMatchFn(args) {
  return function (string) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {return pattern.test(matchedString);}) : findKey(parsePatterns, function (pattern) {return pattern.test(matchedString);});
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return { value: value, rest: rest };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (Object.prototype.hasOwnProperty.call(object, key) && predicate(object[key])) {
      return key;
    }
  }
  return;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return;
}

// lib/locale/_lib/buildMatchPatternFn.js
function buildMatchPatternFn(args) {
  return function (string) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult)
    return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult)
    return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return { value: value, rest: rest };
  };
}

// lib/locale/is/_lib/match.js
var matchOrdinalNumberPattern = /^(\d+)(\.)?/i;
var parseOrdinalNumberPattern = /\d+(\.)?/i;
var matchEraPatterns = {
  narrow: /^(f\.Kr\.|e\.Kr\.)/i,
  abbreviated: /^(f\.Kr\.|e\.Kr\.)/i,
  wide: /^(fyrir Krist|eftir Krist)/i
};
var parseEraPatterns = {
  any: [/^(f\.Kr\.)/i, /^(e\.Kr\.)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]\.?/i,
  abbreviated: /^q[1234]\.?/i,
  wide: /^[1234]\.? fjórðungur/i
};
var parseQuarterPatterns = {
  any: [/1\.?/i, /2\.?/i, /3\.?/i, /4\.?/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmásónd]/i,
  abbreviated: /^(jan\.|feb\.|mars\.|apríl\.|maí|júní|júlí|águst|sep\.|oct\.|nov\.|dec\.)/i,
  wide: /^(januar|febrúar|mars|apríl|maí|júní|júlí|águst|september|október|nóvember|desember)/i
};
var parseMonthPatterns = {
  narrow: [
  /^j/i,
  /^f/i,
  /^m/i,
  /^a/i,
  /^m/i,
  /^j/i,
  /^j/i,
  /^á/i,
  /^s/i,
  /^ó/i,
  /^n/i,
  /^d/i],

  any: [
  /^ja/i,
  /^f/i,
  /^mar/i,
  /^ap/i,
  /^maí/i,
  /^jún/i,
  /^júl/i,
  /^áu/i,
  /^s/i,
  /^ó/i,
  /^n/i,
  /^d/i]

};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|má|þr|mi|fi|fö|la)/i,
  abbreviated: /^(sun|mán|þri|mið|fim|fös|lau)\.?/i,
  wide: /^(sunnudagur|mánudagur|þriðjudagur|miðvikudagur|fimmtudagur|föstudagur|laugardagur)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^þ/i, /^m/i, /^f/i, /^f/i, /^l/i],
  any: [/^su/i, /^má/i, /^þr/i, /^mi/i, /^fi/i, /^fö/i, /^la/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(f|e|síðdegis|(á|að|um) (morgni|kvöld|nótt|miðnætti))/i,
  any: /^(fyrir hádegi|eftir hádegi|[ef]\.?h\.?|síðdegis|morgunn|(á|að|um) (morgni|kvöld|nótt|miðnætti))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^f/i,
    pm: /^e/i,
    midnight: /^mi/i,
    noon: /^há/i,
    morning: /morgunn/i,
    afternoon: /síðdegi/i,
    evening: /kvöld/i,
    night: /nótt/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {return parseInt(value, 10);}
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function valueCallback(index) {return index + 1;}
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};

// lib/locale/is.js
var is = {
  code: "is",
  formatDistance: formatDistance,
  formatLong: formatLong,
  formatRelative: formatRelative,
  localize: localize,
  match: match,
  options: {
    weekStartsOn: 1,
    firstWeekContainsDate: 4
  }
};

// lib/locale/is/cdn.js
window.dateFns = _objectSpread(_objectSpread({},
window.dateFns), {}, {
  locale: _objectSpread(_objectSpread({}, (_window$dateFns =
  window.dateFns) === null || _window$dateFns === void 0 ? void 0 : _window$dateFns.locale), {}, {
    is: is }) });



//# debugId=223E763435194E8664756E2164756E21

//# sourceMappingURL=cdn.js.map
})();