(() => {
var _window$dateFns;function _typeof(o) {&quot;@babel/helpers - typeof&quot;;return _typeof = &quot;function&quot; == typeof Symbol && &quot;symbol&quot; == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && &quot;function&quot; == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? &quot;symbol&quot; : typeof o;}, _typeof(o);}function ownKeys(e, r) {var t = Object.keys(e);if (Object.getOwnPropertySymbols) {var o = Object.getOwnPropertySymbols(e);r && (o = o.filter(function (r) {return Object.getOwnPropertyDescriptor(e, r).enumerable;})), t.push.apply(t, o);}return t;}function _objectSpread(e) {for (var r = 1; r < arguments.length; r++) {var t = null != arguments[r] ? arguments[r] : {};r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {_defineProperty(e, r, t[r]);}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));});}return e;}function _defineProperty(obj, key, value) {key = _toPropertyKey(key);if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : String(i);}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);}var __defProp = Object.defineProperty;
var __export = function __export(target, all) {
  for (var name in all)
  __defProp(target, name, {
    get: all[name],
    enumerable: true,
    configurable: true,
    set: function set(newValue) {return all[name] = function () {return newValue;};}
  });
};

// lib/locale/oc/_lib/formatDistance.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: "mens d\u2019una segonda",
    other: "mens de {{count}} segondas"
  },
  xSeconds: {
    one: "1 segonda",
    other: "{{count}} segondas"
  },
  halfAMinute: "30 segondas",
  lessThanXMinutes: {
    one: "mens d\u2019una minuta",
    other: "mens de {{count}} minutas"
  },
  xMinutes: {
    one: "1 minuta",
    other: "{{count}} minutas"
  },
  aboutXHours: {
    one: "environ 1 ora",
    other: "environ {{count}} oras"
  },
  xHours: {
    one: "1 ora",
    other: "{{count}} oras"
  },
  xDays: {
    one: "1 jorn",
    other: "{{count}} jorns"
  },
  aboutXWeeks: {
    one: "environ 1 setmana",
    other: "environ {{count}} setmanas"
  },
  xWeeks: {
    one: "1 setmana",
    other: "{{count}} setmanas"
  },
  aboutXMonths: {
    one: "environ 1 mes",
    other: "environ {{count}} meses"
  },
  xMonths: {
    one: "1 mes",
    other: "{{count}} meses"
  },
  aboutXYears: {
    one: "environ 1 an",
    other: "environ {{count}} ans"
  },
  xYears: {
    one: "1 an",
    other: "{{count}} ans"
  },
  overXYears: {
    one: "mai d\u2019un an",
    other: "mai de {{count}} ans"
  },
  almostXYears: {
    one: "gaireben un an",
    other: "gaireben {{count}} ans"
  }
};
var formatDistance = function formatDistance(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return &quot;d\u2019aqu\xED &quot; + result;
    } else {
      return &quot;fa &quot; + result;
    }
  }
  return result;
};

// lib/locale/_lib/buildFormatLongFn.js
function buildFormatLongFn(args) {
  return function () {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}

// lib/locale/oc/_lib/formatLong.js
var dateFormats = {
  full: &quot;EEEE d &apos;de&apos; MMMM y&quot;,
  long: &quot;d &apos;de&apos; MMMM y&quot;,
  medium: &quot;d MMM y&quot;,
  short: &quot;dd/MM/y&quot;
};
var timeFormats = {
  full: &quot;HH:mm:ss zzzz&quot;,
  long: &quot;HH:mm:ss z&quot;,
  medium: &quot;HH:mm:ss&quot;,
  short: &quot;HH:mm&quot;
};
var dateTimeFormats = {
  full: &quot;{{date}} &apos;a&apos; {{time}}&quot;,
  long: &quot;{{date}} &apos;a&apos; {{time}}&quot;,
  medium: &quot;{{date}}, {{time}}&quot;,
  short: &quot;{{date}}, {{time}}&quot;
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: &quot;full&quot;
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: &quot;full&quot;
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: &quot;full&quot;
  })
};

// lib/locale/oc/_lib/formatRelative.js
var formatRelativeLocale = {
  lastWeek: &quot;eeee &apos;passat a&apos; p&quot;,
  yesterday: &quot;&apos;i\xE8r a&apos; p&quot;,
  today: &quot;&apos;u\xE8i a&apos; p&quot;,
  tomorrow: &quot;&apos;deman a&apos; p&quot;,
  nextWeek: &quot;eeee &apos;a&apos; p&quot;,
  other: &quot;P&quot;
};
var formatRelative = function formatRelative(token, _date, _baseDate, _options) {return formatRelativeLocale[token];};

// lib/locale/_lib/buildLocalizeFn.js
function buildLocalizeFn(args) {
  return function (value, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : &quot;standalone&quot;;
    var valuesArray;
    if (context === &quot;formatting&quot; && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(value) : value;
    return valuesArray[index];
  };
}

// lib/locale/oc/_lib/localize.js
var eraValues = {
  narrow: [&quot;ab. J.C.&quot;, &quot;apr. J.C.&quot;],
  abbreviated: [&quot;ab. J.C.&quot;, &quot;apr. J.C.&quot;],
  wide: [&quot;abans J\xE8sus-Crist&quot;, &quot;apr\xE8s J\xE8sus-Crist&quot;]
};
var quarterValues = {
  narrow: [&quot;T1&quot;, &quot;T2&quot;, &quot;T3&quot;, &quot;T4&quot;],
  abbreviated: [&quot;1\xE8r trim.&quot;, &quot;2nd trim.&quot;, &quot;3en trim.&quot;, &quot;4en trim.&quot;],
  wide: [&quot;1\xE8r trim\xE8stre&quot;, &quot;2nd trim\xE8stre&quot;, &quot;3en trim\xE8stre&quot;, &quot;4en trim\xE8stre&quot;]
};
var monthValues = {
  narrow: [
  &quot;GN&quot;,
  &quot;FB&quot;,
  &quot;M\xC7&quot;,
  &quot;AB&quot;,
  &quot;MA&quot;,
  &quot;JN&quot;,
  &quot;JL&quot;,
  &quot;AG&quot;,
  &quot;ST&quot;,
  &quot;OC&quot;,
  &quot;NV&quot;,
  &quot;DC&quot;],

  abbreviated: [
  &quot;gen.&quot;,
  &quot;febr.&quot;,
  &quot;mar\xE7&quot;,
  &quot;abr.&quot;,
  &quot;mai&quot;,
  &quot;junh&quot;,
  &quot;jul.&quot;,
  &quot;ag.&quot;,
  &quot;set.&quot;,
  &quot;oct.&quot;,
  &quot;nov.&quot;,
  &quot;dec.&quot;],

  wide: [
  &quot;geni\xE8r&quot;,
  &quot;febri\xE8r&quot;,
  &quot;mar\xE7&quot;,
  &quot;abril&quot;,
  &quot;mai&quot;,
  &quot;junh&quot;,
  &quot;julhet&quot;,
  &quot;agost&quot;,
  &quot;setembre&quot;,
  &quot;oct\xF2bre&quot;,
  &quot;novembre&quot;,
  &quot;decembre&quot;]

};
var dayValues = {
  narrow: [&quot;dg.&quot;, &quot;dl.&quot;, &quot;dm.&quot;, &quot;dc.&quot;, &quot;dj.&quot;, &quot;dv.&quot;, &quot;ds.&quot;],
  short: [&quot;dg.&quot;, &quot;dl.&quot;, &quot;dm.&quot;, &quot;dc.&quot;, &quot;dj.&quot;, &quot;dv.&quot;, &quot;ds.&quot;],
  abbreviated: [&quot;dg.&quot;, &quot;dl.&quot;, &quot;dm.&quot;, &quot;dc.&quot;, &quot;dj.&quot;, &quot;dv.&quot;, &quot;ds.&quot;],
  wide: [
  &quot;dimenge&quot;,
  &quot;diluns&quot;,
  &quot;dimars&quot;,
  &quot;dim\xE8cres&quot;,
  &quot;dij\xF2us&quot;,
  &quot;divendres&quot;,
  &quot;dissabte&quot;]

};
var dayPeriodValues = {
  narrow: {
    am: &quot;am&quot;,
    pm: &quot;pm&quot;,
    midnight: &quot;mi\xE8janu\xE8ch&quot;,
    noon: &quot;mi\xE8gjorn&quot;,
    morning: &quot;matin&quot;,
    afternoon: &quot;apr\xE8p-mi\xE8gjorn&quot;,
    evening: &quot;v\xE8spre&quot;,
    night: &quot;nu\xE8ch&quot;
  },
  abbreviated: {
    am: &quot;a.m.&quot;,
    pm: &quot;p.m.&quot;,
    midnight: &quot;mi\xE8janu\xE8ch&quot;,
    noon: &quot;mi\xE8gjorn&quot;,
    morning: &quot;matin&quot;,
    afternoon: &quot;apr\xE8p-mi\xE8gjorn&quot;,
    evening: &quot;v\xE8spre&quot;,
    night: &quot;nu\xE8ch&quot;
  },
  wide: {
    am: &quot;a.m.&quot;,
    pm: &quot;p.m.&quot;,
    midnight: &quot;mi\xE8janu\xE8ch&quot;,
    noon: &quot;mi\xE8gjorn&quot;,
    morning: &quot;matin&quot;,
    afternoon: &quot;apr\xE8p-mi\xE8gjorn&quot;,
    evening: &quot;v\xE8spre&quot;,
    night: &quot;nu\xE8ch&quot;
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: &quot;am&quot;,
    pm: &quot;pm&quot;,
    midnight: &quot;mi\xE8janu\xE8ch&quot;,
    noon: &quot;mi\xE8gjorn&quot;,
    morning: &quot;del matin&quot;,
    afternoon: &quot;de l\u2019apr\xE8p-mi\xE8gjorn&quot;,
    evening: &quot;del ser&quot;,
    night: &quot;de la nu\xE8ch&quot;
  },
  abbreviated: {
    am: &quot;AM&quot;,
    pm: &quot;PM&quot;,
    midnight: &quot;mi\xE8janu\xE8ch&quot;,
    noon: &quot;mi\xE8gjorn&quot;,
    morning: &quot;del matin&quot;,
    afternoon: &quot;de l\u2019apr\xE8p-mi\xE8gjorn&quot;,
    evening: &quot;del ser&quot;,
    night: &quot;de la nu\xE8ch&quot;
  },
  wide: {
    am: &quot;ante meridiem&quot;,
    pm: &quot;post meridiem&quot;,
    midnight: &quot;mi\xE8janu\xE8ch&quot;,
    noon: &quot;mi\xE8gjorn&quot;,
    morning: &quot;del matin&quot;,
    afternoon: &quot;de l\u2019apr\xE8p-mi\xE8gjorn&quot;,
    evening: &quot;del ser&quot;,
    night: &quot;de la nu\xE8ch&quot;
  }
};
var ordinalNumber = function ordinalNumber(dirtyNumber, options) {
  var number = Number(dirtyNumber);
  var unit = options === null || options === void 0 ? void 0 : options.unit;
  var ordinal;
  switch (number) {
    case 1:
      ordinal = &quot;\xE8r&quot;;
      break;
    case 2:
      ordinal = &quot;nd&quot;;
      break;
    default:
      ordinal = &quot;en&quot;;
  }
  if (unit === &quot;year&quot; || unit === &quot;week&quot; || unit === &quot;hour&quot; || unit === &quot;minute&quot; || unit === &quot;second&quot;) {
    ordinal += &quot;a&quot;;
  }
  return number + ordinal;
};
var localize = {
  ordinalNumber: ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: &quot;wide&quot;
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: &quot;wide&quot;,
    argumentCallback: function argumentCallback(quarter) {return quarter - 1;}
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: &quot;wide&quot;
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: &quot;wide&quot;
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: &quot;wide&quot;,
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: &quot;wide&quot;
  })
};

// lib/locale/_lib/buildMatchFn.js
function buildMatchFn(args) {
  return function (string) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {return pattern.test(matchedString);}) : findKey(parsePatterns, function (pattern) {return pattern.test(matchedString);});
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return { value: value, rest: rest };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (Object.prototype.hasOwnProperty.call(object, key) && predicate(object[key])) {
      return key;
    }
  }
  return;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return;
}

// lib/locale/_lib/buildMatchPatternFn.js
function buildMatchPatternFn(args) {
  return function (string) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult)
    return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult)
    return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return { value: value, rest: rest };
  };
}

// lib/locale/oc/_lib/match.js
var matchOrdinalNumberPattern = /^(\d+)(èr|nd|en)?[a]?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(ab\.J\.C|apr\.J\.C|apr\.J\.-C)/i,
  abbreviated: /^(ab\.J\.-C|ab\.J-C|apr\.J\.-C|apr\.J-C|ap\.J-C)/i,
  wide: /^(abans Jèsus-Crist|après Jèsus-Crist)/i
};
var parseEraPatterns = {
  any: [/^ab/i, /^ap/i]
};
var matchQuarterPatterns = {
  narrow: /^T[1234]/i,
  abbreviated: /^[1234](èr|nd|en)? trim\.?/i,
  wide: /^[1234](èr|nd|en)? trimèstre/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^(GN|FB|MÇ|AB|MA|JN|JL|AG|ST|OC|NV|DC)/i,
  abbreviated: /^(gen|febr|març|abr|mai|junh|jul|ag|set|oct|nov|dec)\.?/i,
  wide: /^(genièr|febrièr|març|abril|mai|junh|julhet|agost|setembre|octòbre|novembre|decembre)/i
};
var parseMonthPatterns = {
  any: [
  /^g/i,
  /^f/i,
  /^ma[r?]|MÇ/i,
  /^ab/i,
  /^ma[i?]/i,
  /^ju[n?]|JN/i,
  /^ju[l?]|JL/i,
  /^ag/i,
  /^s/i,
  /^o/i,
  /^n/i,
  /^d/i]

};
var matchDayPatterns = {
  narrow: /^d[glmcjvs]\.?/i,
  short: /^d[glmcjvs]\.?/i,
  abbreviated: /^d[glmcjvs]\.?/i,
  wide: /^(dimenge|diluns|dimars|dimècres|dijòus|divendres|dissabte)/i
};
var parseDayPatterns = {
  narrow: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i],
  short: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i],
  abbreviated: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i],
  any: [
  /^dg|dime/i,
  /^dl|dil/i,
  /^dm|dima/i,
  /^dc|dimè/i,
  /^dj|dij/i,
  /^dv|div/i,
  /^ds|dis/i]

};
var matchDayPeriodPatterns = {
  any: /(^(a\.?m|p\.?m))|(ante meridiem|post meridiem)|((del |de la |de l’)(matin|aprèp-miègjorn|vèspre|ser|nuèch))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /(^a)|ante meridiem/i,
    pm: /(^p)|post meridiem/i,
    midnight: /^mièj/i,
    noon: /^mièg/i,
    morning: /matin/i,
    afternoon: /aprèp-miègjorn/i,
    evening: /vèspre|ser/i,
    night: /nuèch/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {return parseInt(value, 10);}
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function valueCallback(index) {return index + 1;}
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};

// lib/locale/oc.js
var oc = {
  code: "oc",
  formatDistance: formatDistance,
  formatLong: formatLong,
  formatRelative: formatRelative,
  localize: localize,
  match: match,
  options: {
    weekStartsOn: 1,
    firstWeekContainsDate: 4
  }
};

// lib/locale/oc/cdn.js
window.dateFns = _objectSpread(_objectSpread({},
window.dateFns), {}, {
  locale: _objectSpread(_objectSpread({}, (_window$dateFns =
  window.dateFns) === null || _window$dateFns === void 0 ? void 0 : _window$dateFns.locale), {}, {
    oc: oc }) });



//# debugId=E1706F75EF5DF4F664756E2164756E21

//# sourceMappingURL=cdn.js.map
})();