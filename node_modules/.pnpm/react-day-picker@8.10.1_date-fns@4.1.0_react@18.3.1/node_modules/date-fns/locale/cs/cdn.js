(() => {
var _window$dateFns;function _typeof(o) {&quot;@babel/helpers - typeof&quot;;return _typeof = &quot;function&quot; == typeof Symbol && &quot;symbol&quot; == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && &quot;function&quot; == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? &quot;symbol&quot; : typeof o;}, _typeof(o);}function ownKeys(e, r) {var t = Object.keys(e);if (Object.getOwnPropertySymbols) {var o = Object.getOwnPropertySymbols(e);r && (o = o.filter(function (r) {return Object.getOwnPropertyDescriptor(e, r).enumerable;})), t.push.apply(t, o);}return t;}function _objectSpread(e) {for (var r = 1; r < arguments.length; r++) {var t = null != arguments[r] ? arguments[r] : {};r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {_defineProperty(e, r, t[r]);}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));});}return e;}function _defineProperty(obj, key, value) {key = _toPropertyKey(key);if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : String(i);}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);}var __defProp = Object.defineProperty;
var __export = function __export(target, all) {
  for (var name in all)
  __defProp(target, name, {
    get: all[name],
    enumerable: true,
    configurable: true,
    set: function set(newValue) {return all[name] = function () {return newValue;};}
  });
};

// lib/locale/cs/_lib/formatDistance.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: {
      regular: "m\xE9n\u011B ne\u017E 1 sekunda",
      past: "p\u0159ed m\xE9n\u011B ne\u017E 1 sekundou",
      future: "za m\xE9n\u011B ne\u017E 1 sekundu"
    },
    few: {
      regular: "m\xE9n\u011B ne\u017E {{count}} sekundy",
      past: "p\u0159ed m\xE9n\u011B ne\u017E {{count}} sekundami",
      future: "za m\xE9n\u011B ne\u017E {{count}} sekundy"
    },
    many: {
      regular: "m\xE9n\u011B ne\u017E {{count}} sekund",
      past: "p\u0159ed m\xE9n\u011B ne\u017E {{count}} sekundami",
      future: "za m\xE9n\u011B ne\u017E {{count}} sekund"
    }
  },
  xSeconds: {
    one: {
      regular: "1 sekunda",
      past: "p\u0159ed 1 sekundou",
      future: "za 1 sekundu"
    },
    few: {
      regular: "{{count}} sekundy",
      past: "p\u0159ed {{count}} sekundami",
      future: "za {{count}} sekundy"
    },
    many: {
      regular: "{{count}} sekund",
      past: "p\u0159ed {{count}} sekundami",
      future: "za {{count}} sekund"
    }
  },
  halfAMinute: {
    type: "other",
    other: {
      regular: "p\u016Fl minuty",
      past: "p\u0159ed p\u016Fl minutou",
      future: "za p\u016Fl minuty"
    }
  },
  lessThanXMinutes: {
    one: {
      regular: "m\xE9n\u011B ne\u017E 1 minuta",
      past: "p\u0159ed m\xE9n\u011B ne\u017E 1 minutou",
      future: "za m\xE9n\u011B ne\u017E 1 minutu"
    },
    few: {
      regular: "m\xE9n\u011B ne\u017E {{count}} minuty",
      past: "p\u0159ed m\xE9n\u011B ne\u017E {{count}} minutami",
      future: "za m\xE9n\u011B ne\u017E {{count}} minuty"
    },
    many: {
      regular: "m\xE9n\u011B ne\u017E {{count}} minut",
      past: "p\u0159ed m\xE9n\u011B ne\u017E {{count}} minutami",
      future: "za m\xE9n\u011B ne\u017E {{count}} minut"
    }
  },
  xMinutes: {
    one: {
      regular: "1 minuta",
      past: "p\u0159ed 1 minutou",
      future: "za 1 minutu"
    },
    few: {
      regular: "{{count}} minuty",
      past: "p\u0159ed {{count}} minutami",
      future: "za {{count}} minuty"
    },
    many: {
      regular: "{{count}} minut",
      past: "p\u0159ed {{count}} minutami",
      future: "za {{count}} minut"
    }
  },
  aboutXHours: {
    one: {
      regular: "p\u0159ibli\u017En\u011B 1 hodina",
      past: "p\u0159ibli\u017En\u011B p\u0159ed 1 hodinou",
      future: "p\u0159ibli\u017En\u011B za 1 hodinu"
    },
    few: {
      regular: "p\u0159ibli\u017En\u011B {{count}} hodiny",
      past: "p\u0159ibli\u017En\u011B p\u0159ed {{count}} hodinami",
      future: "p\u0159ibli\u017En\u011B za {{count}} hodiny"
    },
    many: {
      regular: "p\u0159ibli\u017En\u011B {{count}} hodin",
      past: "p\u0159ibli\u017En\u011B p\u0159ed {{count}} hodinami",
      future: "p\u0159ibli\u017En\u011B za {{count}} hodin"
    }
  },
  xHours: {
    one: {
      regular: "1 hodina",
      past: "p\u0159ed 1 hodinou",
      future: "za 1 hodinu"
    },
    few: {
      regular: "{{count}} hodiny",
      past: "p\u0159ed {{count}} hodinami",
      future: "za {{count}} hodiny"
    },
    many: {
      regular: "{{count}} hodin",
      past: "p\u0159ed {{count}} hodinami",
      future: "za {{count}} hodin"
    }
  },
  xDays: {
    one: {
      regular: "1 den",
      past: "p\u0159ed 1 dnem",
      future: "za 1 den"
    },
    few: {
      regular: "{{count}} dny",
      past: "p\u0159ed {{count}} dny",
      future: "za {{count}} dny"
    },
    many: {
      regular: "{{count}} dn\xED",
      past: "p\u0159ed {{count}} dny",
      future: "za {{count}} dn\xED"
    }
  },
  aboutXWeeks: {
    one: {
      regular: "p\u0159ibli\u017En\u011B 1 t\xFDden",
      past: "p\u0159ibli\u017En\u011B p\u0159ed 1 t\xFDdnem",
      future: "p\u0159ibli\u017En\u011B za 1 t\xFDden"
    },
    few: {
      regular: "p\u0159ibli\u017En\u011B {{count}} t\xFDdny",
      past: "p\u0159ibli\u017En\u011B p\u0159ed {{count}} t\xFDdny",
      future: "p\u0159ibli\u017En\u011B za {{count}} t\xFDdny"
    },
    many: {
      regular: "p\u0159ibli\u017En\u011B {{count}} t\xFDdn\u016F",
      past: "p\u0159ibli\u017En\u011B p\u0159ed {{count}} t\xFDdny",
      future: "p\u0159ibli\u017En\u011B za {{count}} t\xFDdn\u016F"
    }
  },
  xWeeks: {
    one: {
      regular: "1 t\xFDden",
      past: "p\u0159ed 1 t\xFDdnem",
      future: "za 1 t\xFDden"
    },
    few: {
      regular: "{{count}} t\xFDdny",
      past: "p\u0159ed {{count}} t\xFDdny",
      future: "za {{count}} t\xFDdny"
    },
    many: {
      regular: "{{count}} t\xFDdn\u016F",
      past: "p\u0159ed {{count}} t\xFDdny",
      future: "za {{count}} t\xFDdn\u016F"
    }
  },
  aboutXMonths: {
    one: {
      regular: "p\u0159ibli\u017En\u011B 1 m\u011Bs\xEDc",
      past: "p\u0159ibli\u017En\u011B p\u0159ed 1 m\u011Bs\xEDcem",
      future: "p\u0159ibli\u017En\u011B za 1 m\u011Bs\xEDc"
    },
    few: {
      regular: "p\u0159ibli\u017En\u011B {{count}} m\u011Bs\xEDce",
      past: "p\u0159ibli\u017En\u011B p\u0159ed {{count}} m\u011Bs\xEDci",
      future: "p\u0159ibli\u017En\u011B za {{count}} m\u011Bs\xEDce"
    },
    many: {
      regular: "p\u0159ibli\u017En\u011B {{count}} m\u011Bs\xEDc\u016F",
      past: "p\u0159ibli\u017En\u011B p\u0159ed {{count}} m\u011Bs\xEDci",
      future: "p\u0159ibli\u017En\u011B za {{count}} m\u011Bs\xEDc\u016F"
    }
  },
  xMonths: {
    one: {
      regular: "1 m\u011Bs\xEDc",
      past: "p\u0159ed 1 m\u011Bs\xEDcem",
      future: "za 1 m\u011Bs\xEDc"
    },
    few: {
      regular: "{{count}} m\u011Bs\xEDce",
      past: "p\u0159ed {{count}} m\u011Bs\xEDci",
      future: "za {{count}} m\u011Bs\xEDce"
    },
    many: {
      regular: "{{count}} m\u011Bs\xEDc\u016F",
      past: "p\u0159ed {{count}} m\u011Bs\xEDci",
      future: "za {{count}} m\u011Bs\xEDc\u016F"
    }
  },
  aboutXYears: {
    one: {
      regular: "p\u0159ibli\u017En\u011B 1 rok",
      past: "p\u0159ibli\u017En\u011B p\u0159ed 1 rokem",
      future: "p\u0159ibli\u017En\u011B za 1 rok"
    },
    few: {
      regular: "p\u0159ibli\u017En\u011B {{count}} roky",
      past: "p\u0159ibli\u017En\u011B p\u0159ed {{count}} roky",
      future: "p\u0159ibli\u017En\u011B za {{count}} roky"
    },
    many: {
      regular: "p\u0159ibli\u017En\u011B {{count}} rok\u016F",
      past: "p\u0159ibli\u017En\u011B p\u0159ed {{count}} roky",
      future: "p\u0159ibli\u017En\u011B za {{count}} rok\u016F"
    }
  },
  xYears: {
    one: {
      regular: "1 rok",
      past: "p\u0159ed 1 rokem",
      future: "za 1 rok"
    },
    few: {
      regular: "{{count}} roky",
      past: "p\u0159ed {{count}} roky",
      future: "za {{count}} roky"
    },
    many: {
      regular: "{{count}} rok\u016F",
      past: "p\u0159ed {{count}} roky",
      future: "za {{count}} rok\u016F"
    }
  },
  overXYears: {
    one: {
      regular: "v\xEDce ne\u017E 1 rok",
      past: "p\u0159ed v\xEDce ne\u017E 1 rokem",
      future: "za v\xEDce ne\u017E 1 rok"
    },
    few: {
      regular: "v\xEDce ne\u017E {{count}} roky",
      past: "p\u0159ed v\xEDce ne\u017E {{count}} roky",
      future: "za v\xEDce ne\u017E {{count}} roky"
    },
    many: {
      regular: "v\xEDce ne\u017E {{count}} rok\u016F",
      past: "p\u0159ed v\xEDce ne\u017E {{count}} roky",
      future: "za v\xEDce ne\u017E {{count}} rok\u016F"
    }
  },
  almostXYears: {
    one: {
      regular: "skoro 1 rok",
      past: "skoro p\u0159ed 1 rokem",
      future: "skoro za 1 rok"
    },
    few: {
      regular: "skoro {{count}} roky",
      past: "skoro p\u0159ed {{count}} roky",
      future: "skoro za {{count}} roky"
    },
    many: {
      regular: "skoro {{count}} rok\u016F",
      past: "skoro p\u0159ed {{count}} roky",
      future: "skoro za {{count}} rok\u016F"
    }
  }
};
var formatDistance = function formatDistance(token, count, options) {
  var pluralResult;
  var tokenValue = formatDistanceLocale[token];
  if (tokenValue.type === "other") {
    pluralResult = tokenValue.other;
  } else if (count === 1) {
    pluralResult = tokenValue.one;
  } else if (count > 1 && count < 5) {
    pluralResult = tokenValue.few;
  } else {
    pluralResult = tokenValue.many;
  }
  var suffixExist = (options === null || options === void 0 ? void 0 : options.addSuffix) === true;
  var comparison = options === null || options === void 0 ? void 0 : options.comparison;
  var timeResult;
  if (suffixExist && comparison === -1) {
    timeResult = pluralResult.past;
  } else if (suffixExist && comparison === 1) {
    timeResult = pluralResult.future;
  } else {
    timeResult = pluralResult.regular;
  }
  return timeResult.replace("{{count}}", String(count));
};

// lib/locale/_lib/buildFormatLongFn.js
function buildFormatLongFn(args) {
  return function () {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}

// lib/locale/cs/_lib/formatLong.js
var dateFormats = {
  full: &quot;EEEE, d. MMMM yyyy&quot;,
  long: &quot;d. MMMM yyyy&quot;,
  medium: &quot;d. M. yyyy&quot;,
  short: &quot;dd.MM.yyyy&quot;
};
var timeFormats = {
  full: &quot;H:mm:ss zzzz&quot;,
  long: &quot;H:mm:ss z&quot;,
  medium: &quot;H:mm:ss&quot;,
  short: &quot;H:mm&quot;
};
var dateTimeFormats = {
  full: &quot;{{date}} &apos;v&apos; {{time}}&quot;,
  long: &quot;{{date}} &apos;v&apos; {{time}}&quot;,
  medium: &quot;{{date}}, {{time}}&quot;,
  short: &quot;{{date}}, {{time}}&quot;
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: &quot;full&quot;
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: &quot;full&quot;
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: &quot;full&quot;
  })
};

// lib/locale/cs/_lib/formatRelative.js
var accusativeWeekdays = [
&quot;ned\u011Bli&quot;,
&quot;pond\u011Bl\xED&quot;,
&quot;\xFAter\xFD&quot;,
&quot;st\u0159edu&quot;,
&quot;\u010Dtvrtek&quot;,
&quot;p\xE1tek&quot;,
&quot;sobotu&quot;];

var formatRelativeLocale = {
  lastWeek: &quot;&apos;posledn\xED&apos; eeee &apos;ve&apos; p&quot;,
  yesterday: &quot;&apos;v\u010Dera v&apos; p&quot;,
  today: &quot;&apos;dnes v&apos; p&quot;,
  tomorrow: &quot;&apos;z\xEDtra v&apos; p&quot;,
  nextWeek: function nextWeek(date) {
    var day = date.getDay();
    return &quot;&apos;v &quot; + accusativeWeekdays[day] + &quot; o&apos; p&quot;;
  },
  other: &quot;P&quot;
};
var formatRelative = function formatRelative(token, date) {
  var format = formatRelativeLocale[token];
  if (typeof format === &quot;function&quot;) {
    return format(date);
  }
  return format;
};

// lib/locale/_lib/buildLocalizeFn.js
function buildLocalizeFn(args) {
  return function (value, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : &quot;standalone&quot;;
    var valuesArray;
    if (context === &quot;formatting&quot; && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(value) : value;
    return valuesArray[index];
  };
}

// lib/locale/cs/_lib/localize.js
var eraValues = {
  narrow: [&quot;p\u0159. n. l.&quot;, &quot;n. l.&quot;],
  abbreviated: [&quot;p\u0159. n. l.&quot;, &quot;n. l.&quot;],
  wide: [&quot;p\u0159ed na\u0161\xEDm letopo\u010Dtem&quot;, &quot;na\u0161eho letopo\u010Dtu&quot;]
};
var quarterValues = {
  narrow: [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;],
  abbreviated: [&quot;1. \u010Dtvrtlet\xED&quot;, &quot;2. \u010Dtvrtlet\xED&quot;, &quot;3. \u010Dtvrtlet\xED&quot;, &quot;4. \u010Dtvrtlet\xED&quot;],
  wide: [&quot;1. \u010Dtvrtlet\xED&quot;, &quot;2. \u010Dtvrtlet\xED&quot;, &quot;3. \u010Dtvrtlet\xED&quot;, &quot;4. \u010Dtvrtlet\xED&quot;]
};
var monthValues = {
  narrow: [&quot;L&quot;, &quot;\xDA&quot;, &quot;B&quot;, &quot;D&quot;, &quot;K&quot;, &quot;\u010C&quot;, &quot;\u010C&quot;, &quot;S&quot;, &quot;Z&quot;, &quot;\u0158&quot;, &quot;L&quot;, &quot;P&quot;],
  abbreviated: [
  &quot;led&quot;,
  &quot;\xFAno&quot;,
  &quot;b\u0159e&quot;,
  &quot;dub&quot;,
  &quot;kv\u011B&quot;,
  &quot;\u010Dvn&quot;,
  &quot;\u010Dvc&quot;,
  &quot;srp&quot;,
  &quot;z\xE1\u0159&quot;,
  &quot;\u0159\xEDj&quot;,
  &quot;lis&quot;,
  &quot;pro&quot;],

  wide: [
  &quot;leden&quot;,
  &quot;\xFAnor&quot;,
  &quot;b\u0159ezen&quot;,
  &quot;duben&quot;,
  &quot;kv\u011Bten&quot;,
  &quot;\u010Derven&quot;,
  &quot;\u010Dervenec&quot;,
  &quot;srpen&quot;,
  &quot;z\xE1\u0159\xED&quot;,
  &quot;\u0159\xEDjen&quot;,
  &quot;listopad&quot;,
  &quot;prosinec&quot;]

};
var formattingMonthValues = {
  narrow: [&quot;L&quot;, &quot;\xDA&quot;, &quot;B&quot;, &quot;D&quot;, &quot;K&quot;, &quot;\u010C&quot;, &quot;\u010C&quot;, &quot;S&quot;, &quot;Z&quot;, &quot;\u0158&quot;, &quot;L&quot;, &quot;P&quot;],
  abbreviated: [
  &quot;led&quot;,
  &quot;\xFAno&quot;,
  &quot;b\u0159e&quot;,
  &quot;dub&quot;,
  &quot;kv\u011B&quot;,
  &quot;\u010Dvn&quot;,
  &quot;\u010Dvc&quot;,
  &quot;srp&quot;,
  &quot;z\xE1\u0159&quot;,
  &quot;\u0159\xEDj&quot;,
  &quot;lis&quot;,
  &quot;pro&quot;],

  wide: [
  &quot;ledna&quot;,
  &quot;\xFAnora&quot;,
  &quot;b\u0159ezna&quot;,
  &quot;dubna&quot;,
  &quot;kv\u011Btna&quot;,
  &quot;\u010Dervna&quot;,
  &quot;\u010Dervence&quot;,
  &quot;srpna&quot;,
  &quot;z\xE1\u0159\xED&quot;,
  &quot;\u0159\xEDjna&quot;,
  &quot;listopadu&quot;,
  &quot;prosince&quot;]

};
var dayValues = {
  narrow: [&quot;ne&quot;, &quot;po&quot;, &quot;\xFAt&quot;, &quot;st&quot;, &quot;\u010Dt&quot;, &quot;p\xE1&quot;, &quot;so&quot;],
  short: [&quot;ne&quot;, &quot;po&quot;, &quot;\xFAt&quot;, &quot;st&quot;, &quot;\u010Dt&quot;, &quot;p\xE1&quot;, &quot;so&quot;],
  abbreviated: [&quot;ned&quot;, &quot;pon&quot;, &quot;\xFAte&quot;, &quot;st\u0159&quot;, &quot;\u010Dtv&quot;, &quot;p\xE1t&quot;, &quot;sob&quot;],
  wide: [&quot;ned\u011Ble&quot;, &quot;pond\u011Bl\xED&quot;, &quot;\xFAter\xFD&quot;, &quot;st\u0159eda&quot;, &quot;\u010Dtvrtek&quot;, &quot;p\xE1tek&quot;, &quot;sobota&quot;]
};
var dayPeriodValues = {
  narrow: {
    am: &quot;dop.&quot;,
    pm: &quot;odp.&quot;,
    midnight: &quot;p\u016Flnoc&quot;,
    noon: &quot;poledne&quot;,
    morning: &quot;r\xE1no&quot;,
    afternoon: &quot;odpoledne&quot;,
    evening: &quot;ve\u010Der&quot;,
    night: &quot;noc&quot;
  },
  abbreviated: {
    am: &quot;dop.&quot;,
    pm: &quot;odp.&quot;,
    midnight: &quot;p\u016Flnoc&quot;,
    noon: &quot;poledne&quot;,
    morning: &quot;r\xE1no&quot;,
    afternoon: &quot;odpoledne&quot;,
    evening: &quot;ve\u010Der&quot;,
    night: &quot;noc&quot;
  },
  wide: {
    am: &quot;dopoledne&quot;,
    pm: &quot;odpoledne&quot;,
    midnight: &quot;p\u016Flnoc&quot;,
    noon: &quot;poledne&quot;,
    morning: &quot;r\xE1no&quot;,
    afternoon: &quot;odpoledne&quot;,
    evening: &quot;ve\u010Der&quot;,
    night: &quot;noc&quot;
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: &quot;dop.&quot;,
    pm: &quot;odp.&quot;,
    midnight: &quot;p\u016Flnoc&quot;,
    noon: &quot;poledne&quot;,
    morning: &quot;r\xE1no&quot;,
    afternoon: &quot;odpoledne&quot;,
    evening: &quot;ve\u010Der&quot;,
    night: &quot;noc&quot;
  },
  abbreviated: {
    am: &quot;dop.&quot;,
    pm: &quot;odp.&quot;,
    midnight: &quot;p\u016Flnoc&quot;,
    noon: &quot;poledne&quot;,
    morning: &quot;r\xE1no&quot;,
    afternoon: &quot;odpoledne&quot;,
    evening: &quot;ve\u010Der&quot;,
    night: &quot;noc&quot;
  },
  wide: {
    am: &quot;dopoledne&quot;,
    pm: &quot;odpoledne&quot;,
    midnight: &quot;p\u016Flnoc&quot;,
    noon: &quot;poledne&quot;,
    morning: &quot;r\xE1no&quot;,
    afternoon: &quot;odpoledne&quot;,
    evening: &quot;ve\u010Der&quot;,
    night: &quot;noc&quot;
  }
};
var ordinalNumber = function ordinalNumber(dirtyNumber, _options) {
  var number = Number(dirtyNumber);
  return number + &quot;.&quot;;
};
var localize = {
  ordinalNumber: ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: &quot;wide&quot;
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: &quot;wide&quot;,
    argumentCallback: function argumentCallback(quarter) {return quarter - 1;}
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: &quot;wide&quot;,
    formattingValues: formattingMonthValues,
    defaultFormattingWidth: &quot;wide&quot;
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: &quot;wide&quot;
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: &quot;wide&quot;,
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: &quot;wide&quot;
  })
};

// lib/locale/_lib/buildMatchFn.js
function buildMatchFn(args) {
  return function (string) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {return pattern.test(matchedString);}) : findKey(parsePatterns, function (pattern) {return pattern.test(matchedString);});
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return { value: value, rest: rest };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (Object.prototype.hasOwnProperty.call(object, key) && predicate(object[key])) {
      return key;
    }
  }
  return;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return;
}

// lib/locale/_lib/buildMatchPatternFn.js
function buildMatchPatternFn(args) {
  return function (string) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult)
    return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult)
    return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return { value: value, rest: rest };
  };
}

// lib/locale/cs/_lib/match.js
var matchOrdinalNumberPattern = /^(\d+)\.?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(p[řr](\.|ed) Kr\.|p[řr](\.|ed) n\. l\.|po Kr\.|n\. l\.)/i,
  abbreviated: /^(p[řr](\.|ed) Kr\.|p[řr](\.|ed) n\. l\.|po Kr\.|n\. l\.)/i,
  wide: /^(p[řr](\.|ed) Kristem|p[řr](\.|ed) na[šs][íi]m letopo[čc]tem|po Kristu|na[šs]eho letopo[čc]tu)/i
};
var parseEraPatterns = {
  any: [/^p[řr]/i, /^(po|n)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^[1234]\. [čc]tvrtlet[íi]/i,
  wide: /^[1234]\. [čc]tvrtlet[íi]/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[lúubdkčcszřrlp]/i,
  abbreviated: /^(led|[úu]no|b[řr]e|dub|kv[ěe]|[čc]vn|[čc]vc|srp|z[áa][řr]|[řr][íi]j|lis|pro)/i,
  wide: /^(leden|ledna|[úu]nora?|b[řr]ezen|b[řr]ezna|duben|dubna|kv[ěe]ten|kv[ěe]tna|[čc]erven(ec|ce)?|[čc]ervna|srpen|srpna|z[áa][řr][íi]|[řr][íi]jen|[řr][íi]jna|listopad(a|u)?|prosinec|prosince)/i
};
var parseMonthPatterns = {
  narrow: [
  /^l/i,
  /^[úu]/i,
  /^b/i,
  /^d/i,
  /^k/i,
  /^[čc]/i,
  /^[čc]/i,
  /^s/i,
  /^z/i,
  /^[řr]/i,
  /^l/i,
  /^p/i],

  any: [
  /^led/i,
  /^[úu]n/i,
  /^b[řr]e/i,
  /^dub/i,
  /^kv[ěe]/i,
  /^[čc]vn|[čc]erven(?!\w)|[čc]ervna/i,
  /^[čc]vc|[čc]erven(ec|ce)/i,
  /^srp/i,
  /^z[áa][řr]/i,
  /^[řr][íi]j/i,
  /^lis/i,
  /^pro/i]

};
var matchDayPatterns = {
  narrow: /^[npuúsčps]/i,
  short: /^(ne|po|[úu]t|st|[čc]t|p[áa]|so)/i,
  abbreviated: /^(ned|pon|[úu]te|st[rř]|[čc]tv|p[áa]t|sob)/i,
  wide: /^(ned[ěe]le|pond[ěe]l[íi]|[úu]ter[ýy]|st[řr]eda|[čc]tvrtek|p[áa]tek|sobota)/i
};
var parseDayPatterns = {
  narrow: [/^n/i, /^p/i, /^[úu]/i, /^s/i, /^[čc]/i, /^p/i, /^s/i],
  any: [/^ne/i, /^po/i, /^[úu]t/i, /^st/i, /^[čc]t/i, /^p[áa]/i, /^so/i]
};
var matchDayPeriodPatterns = {
  any: /^dopoledne|dop\.?|odpoledne|odp\.?|p[ůu]lnoc|poledne|r[áa]no|odpoledne|ve[čc]er|(v )?noci?/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^dop/i,
    pm: /^odp/i,
    midnight: /^p[ůu]lnoc/i,
    noon: /^poledne/i,
    morning: /r[áa]no/i,
    afternoon: /odpoledne/i,
    evening: /ve[čc]er/i,
    night: /noc/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {return parseInt(value, 10);}
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function valueCallback(index) {return index + 1;}
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};

// lib/locale/cs.js
var cs = {
  code: "cs",
  formatDistance: formatDistance,
  formatLong: formatLong,
  formatRelative: formatRelative,
  localize: localize,
  match: match,
  options: {
    weekStartsOn: 1,
    firstWeekContainsDate: 4
  }
};

// lib/locale/cs/cdn.js
window.dateFns = _objectSpread(_objectSpread({},
window.dateFns), {}, {
  locale: _objectSpread(_objectSpread({}, (_window$dateFns =
  window.dateFns) === null || _window$dateFns === void 0 ? void 0 : _window$dateFns.locale), {}, {
    cs: cs }) });



//# debugId=07F73D6D5ED0258E64756E2164756E21

//# sourceMappingURL=cdn.js.map
})();