(() => {
var _window$dateFns;function _typeof(o) {&quot;@babel/helpers - typeof&quot;;return _typeof = &quot;function&quot; == typeof Symbol && &quot;symbol&quot; == typeof Symbol.iterator ? function (o) {return typeof o;} : function (o) {return o && &quot;function&quot; == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? &quot;symbol&quot; : typeof o;}, _typeof(o);}function ownKeys(e, r) {var t = Object.keys(e);if (Object.getOwnPropertySymbols) {var o = Object.getOwnPropertySymbols(e);r && (o = o.filter(function (r) {return Object.getOwnPropertyDescriptor(e, r).enumerable;})), t.push.apply(t, o);}return t;}function _objectSpread(e) {for (var r = 1; r < arguments.length; r++) {var t = null != arguments[r] ? arguments[r] : {};r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {_defineProperty(e, r, t[r]);}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));});}return e;}function _defineProperty(obj, key, value) {key = _toPropertyKey(key);if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toPropertyKey(t) {var i = _toPrimitive(t, "string");return "symbol" == _typeof(i) ? i : String(i);}function _toPrimitive(t, r) {if ("object" != _typeof(t) || !t) return t;var e = t[Symbol.toPrimitive];if (void 0 !== e) {var i = e.call(t, r || "default");if ("object" != _typeof(i)) return i;throw new TypeError("@@toPrimitive must return a primitive value.");}return ("string" === r ? String : Number)(t);}var __defProp = Object.defineProperty;
var __export = function __export(target, all) {
  for (var name in all)
  __defProp(target, name, {
    get: all[name],
    enumerable: true,
    configurable: true,
    set: function set(newValue) {return all[name] = function () {return newValue;};}
  });
};

// lib/locale/ca/_lib/formatDistance.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: "menys d'un segon",
    eleven: "menys d'onze segons",
    other: "menys de {{count}} segons"
  },
  xSeconds: {
    one: "1 segon",
    other: "{{count}} segons"
  },
  halfAMinute: "mig minut",
  lessThanXMinutes: {
    one: "menys d'un minut",
    eleven: "menys d'onze minuts",
    other: "menys de {{count}} minuts"
  },
  xMinutes: {
    one: "1 minut",
    other: "{{count}} minuts"
  },
  aboutXHours: {
    one: "aproximadament una hora",
    other: "aproximadament {{count}} hores"
  },
  xHours: {
    one: "1 hora",
    other: "{{count}} hores"
  },
  xDays: {
    one: "1 dia",
    other: "{{count}} dies"
  },
  aboutXWeeks: {
    one: "aproximadament una setmana",
    other: "aproximadament {{count}} setmanes"
  },
  xWeeks: {
    one: "1 setmana",
    other: "{{count}} setmanes"
  },
  aboutXMonths: {
    one: "aproximadament un mes",
    other: "aproximadament {{count}} mesos"
  },
  xMonths: {
    one: "1 mes",
    other: "{{count}} mesos"
  },
  aboutXYears: {
    one: "aproximadament un any",
    other: "aproximadament {{count}} anys"
  },
  xYears: {
    one: "1 any",
    other: "{{count}} anys"
  },
  overXYears: {
    one: "m\xE9s d'un any",
    eleven: "m\xE9s d'onze anys",
    other: "m\xE9s de {{count}} anys"
  },
  almostXYears: {
    one: "gaireb\xE9 un any",
    other: "gaireb\xE9 {{count}} anys"
  }
};
var formatDistance = function formatDistance(token, count, options) {
  var result;
  var tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result = tokenValue;
  } else if (count === 1) {
    result = tokenValue.one;
  } else if (count === 11 && tokenValue.eleven) {
    result = tokenValue.eleven;
  } else {
    result = tokenValue.other.replace("{{count}}", String(count));
  }
  if (options !== null && options !== void 0 && options.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return &quot;en &quot; + result;
    } else {
      return &quot;fa &quot; + result;
    }
  }
  return result;
};

// lib/locale/_lib/buildFormatLongFn.js
function buildFormatLongFn(args) {
  return function () {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}

// lib/locale/ca/_lib/formatLong.js
var dateFormats = {
  full: &quot;EEEE, d &apos;de&apos; MMMM y&quot;,
  long: &quot;d &apos;de&apos; MMMM y&quot;,
  medium: &quot;d MMM y&quot;,
  short: &quot;dd/MM/y&quot;
};
var timeFormats = {
  full: &quot;HH:mm:ss zzzz&quot;,
  long: &quot;HH:mm:ss z&quot;,
  medium: &quot;HH:mm:ss&quot;,
  short: &quot;HH:mm&quot;
};
var dateTimeFormats = {
  full: &quot;{{date}} &apos;a les&apos; {{time}}&quot;,
  long: &quot;{{date}} &apos;a les&apos; {{time}}&quot;,
  medium: &quot;{{date}}, {{time}}&quot;,
  short: &quot;{{date}}, {{time}}&quot;
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: &quot;full&quot;
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: &quot;full&quot;
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: &quot;full&quot;
  })
};

// lib/locale/ca/_lib/formatRelative.js
var formatRelativeLocale = {
  lastWeek: &quot;&apos;el&apos; eeee &apos;passat a la&apos; LT&quot;,
  yesterday: &quot;&apos;ahir a la&apos; p&quot;,
  today: &quot;&apos;avui a la&apos; p&quot;,
  tomorrow: &quot;&apos;dem\xE0 a la&apos; p&quot;,
  nextWeek: &quot;eeee &apos;a la&apos; p&quot;,
  other: &quot;P&quot;
};
var formatRelativeLocalePlural = {
  lastWeek: &quot;&apos;el&apos; eeee &apos;passat a les&apos; p&quot;,
  yesterday: &quot;&apos;ahir a les&apos; p&quot;,
  today: &quot;&apos;avui a les&apos; p&quot;,
  tomorrow: &quot;&apos;dem\xE0 a les&apos; p&quot;,
  nextWeek: &quot;eeee &apos;a les&apos; p&quot;,
  other: &quot;P&quot;
};
var formatRelative = function formatRelative(token, date, _baseDate, _options) {
  if (date.getHours() !== 1) {
    return formatRelativeLocalePlural[token];
  }
  return formatRelativeLocale[token];
};

// lib/locale/_lib/buildLocalizeFn.js
function buildLocalizeFn(args) {
  return function (value, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : &quot;standalone&quot;;
    var valuesArray;
    if (context === &quot;formatting&quot; && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(value) : value;
    return valuesArray[index];
  };
}

// lib/locale/ca/_lib/localize.js
var eraValues = {
  narrow: [&quot;aC&quot;, &quot;dC&quot;],
  abbreviated: [&quot;a. de C.&quot;, &quot;d. de C.&quot;],
  wide: [&quot;abans de Crist&quot;, &quot;despr\xE9s de Crist&quot;]
};
var quarterValues = {
  narrow: [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;],
  abbreviated: [&quot;T1&quot;, &quot;T2&quot;, &quot;T3&quot;, &quot;T4&quot;],
  wide: [&quot;1r trimestre&quot;, &quot;2n trimestre&quot;, &quot;3r trimestre&quot;, &quot;4t trimestre&quot;]
};
var monthValues = {
  narrow: [
  &quot;GN&quot;,
  &quot;FB&quot;,
  &quot;M\xC7&quot;,
  &quot;AB&quot;,
  &quot;MG&quot;,
  &quot;JN&quot;,
  &quot;JL&quot;,
  &quot;AG&quot;,
  &quot;ST&quot;,
  &quot;OC&quot;,
  &quot;NV&quot;,
  &quot;DS&quot;],

  abbreviated: [
  &quot;gen.&quot;,
  &quot;febr.&quot;,
  &quot;mar\xE7&quot;,
  &quot;abr.&quot;,
  &quot;maig&quot;,
  &quot;juny&quot;,
  &quot;jul.&quot;,
  &quot;ag.&quot;,
  &quot;set.&quot;,
  &quot;oct.&quot;,
  &quot;nov.&quot;,
  &quot;des.&quot;],

  wide: [
  &quot;gener&quot;,
  &quot;febrer&quot;,
  &quot;mar\xE7&quot;,
  &quot;abril&quot;,
  &quot;maig&quot;,
  &quot;juny&quot;,
  &quot;juliol&quot;,
  &quot;agost&quot;,
  &quot;setembre&quot;,
  &quot;octubre&quot;,
  &quot;novembre&quot;,
  &quot;desembre&quot;]

};
var dayValues = {
  narrow: [&quot;dg.&quot;, &quot;dl.&quot;, &quot;dt.&quot;, &quot;dm.&quot;, &quot;dj.&quot;, &quot;dv.&quot;, &quot;ds.&quot;],
  short: [&quot;dg.&quot;, &quot;dl.&quot;, &quot;dt.&quot;, &quot;dm.&quot;, &quot;dj.&quot;, &quot;dv.&quot;, &quot;ds.&quot;],
  abbreviated: [&quot;dg.&quot;, &quot;dl.&quot;, &quot;dt.&quot;, &quot;dm.&quot;, &quot;dj.&quot;, &quot;dv.&quot;, &quot;ds.&quot;],
  wide: [
  &quot;diumenge&quot;,
  &quot;dilluns&quot;,
  &quot;dimarts&quot;,
  &quot;dimecres&quot;,
  &quot;dijous&quot;,
  &quot;divendres&quot;,
  &quot;dissabte&quot;]

};
var dayPeriodValues = {
  narrow: {
    am: &quot;am&quot;,
    pm: &quot;pm&quot;,
    midnight: &quot;mitjanit&quot;,
    noon: &quot;migdia&quot;,
    morning: &quot;mat\xED&quot;,
    afternoon: &quot;tarda&quot;,
    evening: &quot;vespre&quot;,
    night: &quot;nit&quot;
  },
  abbreviated: {
    am: &quot;a.m.&quot;,
    pm: &quot;p.m.&quot;,
    midnight: &quot;mitjanit&quot;,
    noon: &quot;migdia&quot;,
    morning: &quot;mat\xED&quot;,
    afternoon: &quot;tarda&quot;,
    evening: &quot;vespre&quot;,
    night: &quot;nit&quot;
  },
  wide: {
    am: &quot;ante meridiem&quot;,
    pm: &quot;post meridiem&quot;,
    midnight: &quot;mitjanit&quot;,
    noon: &quot;migdia&quot;,
    morning: &quot;mat\xED&quot;,
    afternoon: &quot;tarda&quot;,
    evening: &quot;vespre&quot;,
    night: &quot;nit&quot;
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: &quot;am&quot;,
    pm: &quot;pm&quot;,
    midnight: &quot;de la mitjanit&quot;,
    noon: &quot;del migdia&quot;,
    morning: &quot;del mat\xED&quot;,
    afternoon: &quot;de la tarda&quot;,
    evening: &quot;del vespre&quot;,
    night: &quot;de la nit&quot;
  },
  abbreviated: {
    am: &quot;AM&quot;,
    pm: &quot;PM&quot;,
    midnight: &quot;de la mitjanit&quot;,
    noon: &quot;del migdia&quot;,
    morning: &quot;del mat\xED&quot;,
    afternoon: &quot;de la tarda&quot;,
    evening: &quot;del vespre&quot;,
    night: &quot;de la nit&quot;
  },
  wide: {
    am: &quot;ante meridiem&quot;,
    pm: &quot;post meridiem&quot;,
    midnight: &quot;de la mitjanit&quot;,
    noon: &quot;del migdia&quot;,
    morning: &quot;del mat\xED&quot;,
    afternoon: &quot;de la tarda&quot;,
    evening: &quot;del vespre&quot;,
    night: &quot;de la nit&quot;
  }
};
var ordinalNumber = function ordinalNumber(dirtyNumber, _options) {
  var number = Number(dirtyNumber);
  var rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + "r";
      case 2:
        return number + "n";
      case 3:
        return number + "r";
      case 4:
        return number + "t";
    }
  }
  return number + "\xE8";
};
var localize = {
  ordinalNumber: ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: "wide"
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: "wide",
    argumentCallback: function argumentCallback(quarter) {return quarter - 1;}
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: "wide"
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: "wide"
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: "wide"
  })
};

// lib/locale/_lib/buildMatchFn.js
function buildMatchFn(args) {
  return function (string) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {return pattern.test(matchedString);}) : findKey(parsePatterns, function (pattern) {return pattern.test(matchedString);});
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return { value: value, rest: rest };
  };
}
function findKey(object, predicate) {
  for (var key in object) {
    if (Object.prototype.hasOwnProperty.call(object, key) && predicate(object[key])) {
      return key;
    }
  }
  return;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return;
}

// lib/locale/_lib/buildMatchPatternFn.js
function buildMatchPatternFn(args) {
  return function (string) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var matchResult = string.match(args.matchPattern);
    if (!matchResult)
    return null;
    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);
    if (!parseResult)
    return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return { value: value, rest: rest };
  };
}

// lib/locale/ca/_lib/match.js
var matchOrdinalNumberPattern = /^(\d+)(è|r|n|r|t)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(aC|dC)/i,
  abbreviated: /^(a. de C.|d. de C.)/i,
  wide: /^(abans de Crist|despr[eé]s de Crist)/i
};
var parseEraPatterns = {
  narrow: [/^aC/i, /^dC/i],
  abbreviated: [/^(a. de C.)/i, /^(d. de C.)/i],
  wide: [/^(abans de Crist)/i, /^(despr[eé]s de Crist)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^T[1234]/i,
  wide: /^[1234](è|r|n|r|t)? trimestre/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^(GN|FB|MÇ|AB|MG|JN|JL|AG|ST|OC|NV|DS)/i,
  abbreviated: /^(gen.|febr.|març|abr.|maig|juny|jul.|ag.|set.|oct.|nov.|des.)/i,
  wide: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i
};
var parseMonthPatterns = {
  narrow: [
  /^GN/i,
  /^FB/i,
  /^MÇ/i,
  /^AB/i,
  /^MG/i,
  /^JN/i,
  /^JL/i,
  /^AG/i,
  /^ST/i,
  /^OC/i,
  /^NV/i,
  /^DS/i],

  abbreviated: [
  /^gen./i,
  /^febr./i,
  /^març/i,
  /^abr./i,
  /^maig/i,
  /^juny/i,
  /^jul./i,
  /^ag./i,
  /^set./i,
  /^oct./i,
  /^nov./i,
  /^des./i],

  wide: [
  /^gener/i,
  /^febrer/i,
  /^març/i,
  /^abril/i,
  /^maig/i,
  /^juny/i,
  /^juliol/i,
  /^agost/i,
  /^setembre/i,
  /^octubre/i,
  /^novembre/i,
  /^desembre/i]

};
var matchDayPatterns = {
  narrow: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i,
  short: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i,
  abbreviated: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i,
  wide: /^(diumenge|dilluns|dimarts|dimecres|dijous|divendres|dissabte)/i
};
var parseDayPatterns = {
  narrow: [/^dg./i, /^dl./i, /^dt./i, /^dm./i, /^dj./i, /^dv./i, /^ds./i],
  abbreviated: [/^dg./i, /^dl./i, /^dt./i, /^dm./i, /^dj./i, /^dv./i, /^ds./i],
  wide: [
  /^diumenge/i,
  /^dilluns/i,
  /^dimarts/i,
  /^dimecres/i,
  /^dijous/i,
  /^divendres/i,
  /^disssabte/i]

};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mn|md|(del|de la) (matí|tarda|vespre|nit))/i,
  abbreviated: /^([ap]\.?\s?m\.?|mitjanit|migdia|(del|de la) (matí|tarda|vespre|nit))/i,
  wide: /^(ante meridiem|post meridiem|mitjanit|migdia|(del|de la) (matí|tarda|vespre|nit))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mitjanit/i,
    noon: /^migdia/i,
    morning: /matí/i,
    afternoon: /tarda/i,
    evening: /vespre/i,
    night: /nit/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {return parseInt(value, 10);}
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "wide"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function valueCallback(index) {return index + 1;}
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "wide"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "wide"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};

// lib/locale/ca.js
var ca = {
  code: "ca",
  formatDistance: formatDistance,
  formatLong: formatLong,
  formatRelative: formatRelative,
  localize: localize,
  match: match,
  options: {
    weekStartsOn: 1,
    firstWeekContainsDate: 4
  }
};

// lib/locale/ca/cdn.js
window.dateFns = _objectSpread(_objectSpread({},
window.dateFns), {}, {
  locale: _objectSpread(_objectSpread({}, (_window$dateFns =
  window.dateFns) === null || _window$dateFns === void 0 ? void 0 : _window$dateFns.locale), {}, {
    ca: ca }) });



//# debugId=EACB4BEDC85AD84564756E2164756E21

//# sourceMappingURL=cdn.js.map
})();