/**
 * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.
 *
 * Specifically:
 * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js
 * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts
 *
 * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)
 */
type ClassNameValue = ClassNameArray | string | null | undefined | 0 | 0n | false;
type ClassNameArray = ClassNameValue[];
declare function twJoin(...classLists: ClassNameValue[]): string;

/**
 * Type the tailwind-merge configuration adheres to.
 */
interface Config<ClassGroupIds extends string, ThemeGroupIds extends string> extends ConfigStaticPart, ConfigGroupsPart<ClassGroupIds, ThemeGroupIds> {
}
/**
 * The static part of the tailwind-merge configuration. When merging multiple configurations, the properties of this interface are always overridden.
 */
interface ConfigStaticPart {
    /**
     * Integer indicating size of LRU cache used for memoizing results.
     * - Cache might be up to twice as big as `cacheSize`
     * - No cache is used for values <= 0
     */
    cacheSize: number;
    /**
     * Prefix added to Tailwind-generated classes
     * @see https://tailwindcss.com/docs/configuration#prefix
     */
    prefix?: string;
    /**
     * Custom separator for modifiers in Tailwind classes
     * @see https://tailwindcss.com/docs/configuration#separator
     */
    separator: string;
    /**
     * Allows to customize parsing of individual classes passed to `twMerge`.
     * All classes passed to `twMerge` outside of cache hits are passed to this function before it is determined whether the class is a valid Tailwind CSS class.
     *
     * This is an experimental feature and may introduce breaking changes in any minor version update.
     */
    experimentalParseClassName?(param: ExperimentalParseClassNameParam): ExperimentalParsedClassName;
}
/**
 * Type of param passed to the `experimentalParseClassName` function.
 *
 * This is an experimental feature and may introduce breaking changes in any minor version update.
 */
interface ExperimentalParseClassNameParam {
    className: string;
    parseClassName(className: string): ExperimentalParsedClassName;
}
/**
 * Type of the result returned by the `experimentalParseClassName` function.
 *
 * This is an experimental feature and may introduce breaking changes in any minor version update.
 */
interface ExperimentalParsedClassName {
    /**
     * Modifiers of the class in the order they appear in the class.
     *
     * @example ['hover', 'dark'] // for `hover:dark:bg-gray-100`
     */
    modifiers: string[];
    /**
     * Whether the class has an `!important` modifier.
     *
     * @example true // for `hover:dark:!bg-gray-100`
     */
    hasImportantModifier: boolean;
    /**
     * Base class without preceding modifiers.
     *
     * @example 'bg-gray-100' // for `hover:dark:bg-gray-100`
     */
    baseClassName: string;
    /**
     * Index position of a possible postfix modifier in the class.
     * If the class has no postfix modifier, this is `undefined`.
     *
     * This property is prefixed with "maybe" because tailwind-merge does not know whether something is a postfix modifier or part of the base class since it's possible to configure Tailwind CSS classes which include a `/` in the base class name.
     *
     * If a `maybePostfixModifierPosition` is present, tailwind-merge first tries to match the `baseClassName` without the possible postfix modifier to a class group. If tht fails, it tries again with the possible postfix modifier.
     *
     * @example 11 // for `bg-gray-100/50`
     */
    maybePostfixModifierPosition: number | undefined;
}
/**
 * The dynamic part of the tailwind-merge configuration. When merging multiple configurations, the user can choose to either override or extend the properties of this interface.
 */
interface ConfigGroupsPart<ClassGroupIds extends string, ThemeGroupIds extends string> {
    /**
     * Theme scales used in classGroups.
     * The keys are the same as in the Tailwind config but the values are sometimes defined more broadly.
     */
    theme: NoInfer<ThemeObject<ThemeGroupIds>>;
    /**
     * Object with groups of classes.
     * @example
     * {
     *     // Creates group of classes `group`, `of` and `classes`
     *     &apos;group-id&apos;: [&apos;group&apos;, &apos;of&apos;, &apos;classes&apos;],
     *     // Creates group of classes `look-at-me-other` and `look-at-me-group`.
     *     &apos;other-group&apos;: [{ &apos;look-at-me&apos;: [&apos;other&apos;, &apos;group&apos;]}]
     * }
     */
    classGroups: NoInfer<Record<ClassGroupIds, ClassGroup<ThemeGroupIds>>>;
    /**
     * Conflicting classes across groups.
     * The key is ID of class group which creates conflict, values are IDs of class groups which receive a conflict.
     * A class group ID is the key of a class group in classGroups object.
     * @example { gap: [&apos;gap-x&apos;, &apos;gap-y&apos;] }
     */
    conflictingClassGroups: NoInfer<Partial<Record<ClassGroupIds, readonly ClassGroupIds[]>>>;
    /**
     * Postfix modifiers conflicting with other class groups.
     * A class group ID is the key of a class group in classGroups object.
     * @example { &apos;font-size&apos;: [&apos;leading&apos;] }
     */
    conflictingClassGroupModifiers: NoInfer<Partial<Record<ClassGroupIds, readonly ClassGroupIds[]>>>;
}
/**
 * Type of the configuration object that can be passed to `extendTailwindMerge`.
 */
interface ConfigExtension<ClassGroupIds extends string, ThemeGroupIds extends string> extends Partial<ConfigStaticPart> {
    override?: PartialPartial<ConfigGroupsPart<ClassGroupIds, ThemeGroupIds>>;
    extend?: PartialPartial<ConfigGroupsPart<ClassGroupIds, ThemeGroupIds>>;
}
type PartialPartial<T> = {
    [P in keyof T]?: Partial<T[P]>;
};
type ThemeObject<ThemeGroupIds extends string> = Record<ThemeGroupIds, ClassGroup<ThemeGroupIds>>;
type ClassGroup<ThemeGroupIds extends string> = readonly ClassDefinition<ThemeGroupIds>[];
type ClassDefinition<ThemeGroupIds extends string> = string | ClassValidator | ThemeGetter | ClassObject<ThemeGroupIds>;
type ClassValidator = (classPart: string) => boolean;
interface ThemeGetter {
    (theme: ThemeObject<AnyThemeGroupIds>): ClassGroup<AnyClassGroupIds>;
    isThemeGetter: true;
}
type ClassObject<ThemeGroupIds extends string> = Record<string, readonly ClassDefinition<ThemeGroupIds>[]>;
/**
 * Hack from https://stackoverflow.com/questions/56687668/a-way-to-disable-type-argument-inference-in-generics/56688073#56688073
 *
 * Could be replaced with NoInfer utility type from TypeScript (https://www.typescriptlang.org/docs/handbook/utility-types.html#noinfertype), but that is only supported in TypeScript 5.4 or higher, so I should wait some time before using it.
 */
type NoInfer<T> = [T][T extends any ? 0 : never];
/**
 * Theme group IDs included in the default configuration of tailwind-merge.
 *
 * If you want to use a scale that is not supported in the `ThemeObject` type,
 * consider using `classGroups` instead of `theme`.
 *
 * @see https://github.com/dcastil/tailwind-merge/blob/main/docs/configuration.md#theme
 *      (the list of supported keys may vary between `tailwind-merge` versions)
 */
type DefaultThemeGroupIds = &apos;blur&apos; | &apos;borderColor&apos; | &apos;borderRadius&apos; | &apos;borderSpacing&apos; | &apos;borderWidth&apos; | &apos;brightness&apos; | &apos;colors&apos; | &apos;contrast&apos; | &apos;gap&apos; | &apos;gradientColorStopPositions&apos; | &apos;gradientColorStops&apos; | &apos;grayscale&apos; | &apos;hueRotate&apos; | &apos;inset&apos; | &apos;invert&apos; | &apos;margin&apos; | &apos;opacity&apos; | &apos;padding&apos; | &apos;saturate&apos; | &apos;scale&apos; | &apos;sepia&apos; | &apos;skew&apos; | &apos;space&apos; | &apos;spacing&apos; | &apos;translate&apos;;
/**
 * Class group IDs included in the default configuration of tailwind-merge.
 */
type DefaultClassGroupIds = &apos;accent&apos; | &apos;align-content&apos; | &apos;align-items&apos; | &apos;align-self&apos; | &apos;animate&apos; | &apos;appearance&apos; | &apos;aspect&apos; | &apos;auto-cols&apos; | &apos;auto-rows&apos; | &apos;backdrop-blur&apos; | &apos;backdrop-brightness&apos; | &apos;backdrop-contrast&apos; | &apos;backdrop-filter&apos; | &apos;backdrop-grayscale&apos; | &apos;backdrop-hue-rotate&apos; | &apos;backdrop-invert&apos; | &apos;backdrop-opacity&apos; | &apos;backdrop-saturate&apos; | &apos;backdrop-sepia&apos; | &apos;basis&apos; | &apos;bg-attachment&apos; | &apos;bg-blend&apos; | &apos;bg-clip&apos; | &apos;bg-color&apos; | &apos;bg-image&apos; | &apos;bg-opacity&apos; | &apos;bg-origin&apos; | &apos;bg-position&apos; | &apos;bg-repeat&apos; | &apos;bg-size&apos; | &apos;blur&apos; | &apos;border-collapse&apos; | &apos;border-color-b&apos; | &apos;border-color-e&apos; | &apos;border-color-l&apos; | &apos;border-color-r&apos; | &apos;border-color-s&apos; | &apos;border-color-t&apos; | &apos;border-color-x&apos; | &apos;border-color-y&apos; | &apos;border-color&apos; | &apos;border-opacity&apos; | &apos;border-spacing-x&apos; | &apos;border-spacing-y&apos; | &apos;border-spacing&apos; | &apos;border-style&apos; | &apos;border-w-b&apos; | &apos;border-w-e&apos; | &apos;border-w-l&apos; | &apos;border-w-r&apos; | &apos;border-w-s&apos; | &apos;border-w-t&apos; | &apos;border-w-x&apos; | &apos;border-w-y&apos; | &apos;border-w&apos; | &apos;bottom&apos; | &apos;box-decoration&apos; | &apos;box&apos; | &apos;break-after&apos; | &apos;break-before&apos; | &apos;break-inside&apos; | &apos;break&apos; | &apos;brightness&apos; | &apos;caption&apos; | &apos;caret-color&apos; | &apos;clear&apos; | &apos;col-end&apos; | &apos;col-start-end&apos; | &apos;col-start&apos; | &apos;columns&apos; | &apos;container&apos; | &apos;content&apos; | &apos;contrast&apos; | &apos;cursor&apos; | &apos;delay&apos; | &apos;display&apos; | &apos;divide-color&apos; | &apos;divide-opacity&apos; | &apos;divide-style&apos; | &apos;divide-x-reverse&apos; | &apos;divide-x&apos; | &apos;divide-y-reverse&apos; | &apos;divide-y&apos; | &apos;drop-shadow&apos; | &apos;duration&apos; | &apos;ease&apos; | &apos;end&apos; | &apos;fill&apos; | &apos;filter&apos; | &apos;flex-direction&apos; | &apos;flex-wrap&apos; | &apos;flex&apos; | &apos;float&apos; | &apos;font-family&apos; | &apos;font-size&apos; | &apos;font-smoothing&apos; | &apos;font-style&apos; | &apos;font-weight&apos; | &apos;forced-color-adjust&apos; | &apos;fvn-figure&apos; | &apos;fvn-fraction&apos; | &apos;fvn-normal&apos; | &apos;fvn-ordinal&apos; | &apos;fvn-slashed-zero&apos; | &apos;fvn-spacing&apos; | &apos;gap-x&apos; | &apos;gap-y&apos; | &apos;gap&apos; | &apos;gradient-from-pos&apos; | &apos;gradient-from&apos; | &apos;gradient-to-pos&apos; | &apos;gradient-to&apos; | &apos;gradient-via-pos&apos; | &apos;gradient-via&apos; | &apos;grayscale&apos; | &apos;grid-cols&apos; | &apos;grid-flow&apos; | &apos;grid-rows&apos; | &apos;grow&apos; | &apos;h&apos; | &apos;hue-rotate&apos; | &apos;hyphens&apos; | &apos;indent&apos; | &apos;inset-x&apos; | &apos;inset-y&apos; | &apos;inset&apos; | &apos;invert&apos; | &apos;isolation&apos; | &apos;justify-content&apos; | &apos;justify-items&apos; | &apos;justify-self&apos; | &apos;leading&apos; | &apos;left&apos; | &apos;line-clamp&apos; | &apos;list-image&apos; | &apos;list-style-position&apos; | &apos;list-style-type&apos; | &apos;m&apos; | &apos;max-h&apos; | &apos;max-w&apos; | &apos;mb&apos; | &apos;me&apos; | &apos;min-h&apos; | &apos;min-w&apos; | &apos;mix-blend&apos; | &apos;ml&apos; | &apos;mr&apos; | &apos;ms&apos; | &apos;mt&apos; | &apos;mx&apos; | &apos;my&apos; | &apos;object-fit&apos; | &apos;object-position&apos; | &apos;opacity&apos; | &apos;order&apos; | &apos;outline-color&apos; | &apos;outline-offset&apos; | &apos;outline-style&apos; | &apos;outline-w&apos; | &apos;overflow-x&apos; | &apos;overflow-y&apos; | &apos;overflow&apos; | &apos;overscroll-x&apos; | &apos;overscroll-y&apos; | &apos;overscroll&apos; | &apos;p&apos; | &apos;pb&apos; | &apos;pe&apos; | &apos;pl&apos; | &apos;place-content&apos; | &apos;place-items&apos; | &apos;place-self&apos; | &apos;placeholder-color&apos; | &apos;placeholder-opacity&apos; | &apos;pointer-events&apos; | &apos;position&apos; | &apos;pr&apos; | &apos;ps&apos; | &apos;pt&apos; | &apos;px&apos; | &apos;py&apos; | &apos;resize&apos; | &apos;right&apos; | &apos;ring-color&apos; | &apos;ring-offset-color&apos; | &apos;ring-offset-w&apos; | &apos;ring-opacity&apos; | &apos;ring-w-inset&apos; | &apos;ring-w&apos; | &apos;rotate&apos; | &apos;rounded-b&apos; | &apos;rounded-bl&apos; | &apos;rounded-br&apos; | &apos;rounded-e&apos; | &apos;rounded-ee&apos; | &apos;rounded-es&apos; | &apos;rounded-l&apos; | &apos;rounded-r&apos; | &apos;rounded-s&apos; | &apos;rounded-se&apos; | &apos;rounded-ss&apos; | &apos;rounded-t&apos; | &apos;rounded-tl&apos; | &apos;rounded-tr&apos; | &apos;rounded&apos; | &apos;row-end&apos; | &apos;row-start-end&apos; | &apos;row-start&apos; | &apos;saturate&apos; | &apos;scale-x&apos; | &apos;scale-y&apos; | &apos;scale&apos; | &apos;scroll-behavior&apos; | &apos;scroll-m&apos; | &apos;scroll-mb&apos; | &apos;scroll-me&apos; | &apos;scroll-ml&apos; | &apos;scroll-mr&apos; | &apos;scroll-ms&apos; | &apos;scroll-mt&apos; | &apos;scroll-mx&apos; | &apos;scroll-my&apos; | &apos;scroll-p&apos; | &apos;scroll-pb&apos; | &apos;scroll-pe&apos; | &apos;scroll-pl&apos; | &apos;scroll-pr&apos; | &apos;scroll-ps&apos; | &apos;scroll-pt&apos; | &apos;scroll-px&apos; | &apos;scroll-py&apos; | &apos;select&apos; | &apos;sepia&apos; | &apos;shadow-color&apos; | &apos;shadow&apos; | &apos;shrink&apos; | &apos;size&apos; | &apos;skew-x&apos; | &apos;skew-y&apos; | &apos;snap-align&apos; | &apos;snap-stop&apos; | &apos;snap-strictness&apos; | &apos;snap-type&apos; | &apos;space-x-reverse&apos; | &apos;space-x&apos; | &apos;space-y-reverse&apos; | &apos;space-y&apos; | &apos;sr&apos; | &apos;start&apos; | &apos;stroke-w&apos; | &apos;stroke&apos; | &apos;table-layout&apos; | &apos;text-alignment&apos; | &apos;text-color&apos; | &apos;text-decoration-color&apos; | &apos;text-decoration-style&apos; | &apos;text-decoration-thickness&apos; | &apos;text-decoration&apos; | &apos;text-opacity&apos; | &apos;text-overflow&apos; | &apos;text-transform&apos; | &apos;text-wrap&apos; | &apos;top&apos; | &apos;touch-pz&apos; | &apos;touch-x&apos; | &apos;touch-y&apos; | &apos;touch&apos; | &apos;tracking&apos; | &apos;transform-origin&apos; | &apos;transform&apos; | &apos;transition&apos; | &apos;translate-x&apos; | &apos;translate-y&apos; | &apos;underline-offset&apos; | &apos;vertical-align&apos; | &apos;visibility&apos; | &apos;w&apos; | &apos;whitespace&apos; | &apos;will-change&apos; | &apos;z&apos;;
type AnyClassGroupIds = string;
type AnyThemeGroupIds = string;
/**
 * type of the tailwind-merge configuration that allows for any possible configuration.
 */
type AnyConfig = Config<AnyClassGroupIds, AnyThemeGroupIds>;

type CreateConfigFirst = () => AnyConfig;
type CreateConfigSubsequent$1 = (config: AnyConfig) => AnyConfig;
type TailwindMerge = (...classLists: ClassNameValue[]) => string;
declare function createTailwindMerge(createConfigFirst: CreateConfigFirst, ...createConfigRest: CreateConfigSubsequent$1[]): TailwindMerge;

declare const getDefaultConfig: () => {
    readonly cacheSize: 500;
    readonly separator: &quot;:&quot;;
    readonly theme: {
        readonly colors: readonly [() => boolean];
        readonly spacing: readonly [(value: string) => boolean, (value: string) => boolean];
        readonly blur: readonly [&quot;none&quot;, &quot;&quot;, (value: string) => boolean, (value: string) => boolean];
        readonly brightness: ((value: string) => boolean)[];
        readonly borderColor: readonly [ThemeGetter];
        readonly borderRadius: readonly [&quot;none&quot;, &quot;&quot;, &quot;full&quot;, (value: string) => boolean, (value: string) => boolean];
        readonly borderSpacing: readonly [(value: string) => boolean, ThemeGetter];
        readonly borderWidth: readonly [&quot;&quot;, (value: string) => boolean, (value: string) => boolean];
        readonly contrast: ((value: string) => boolean)[];
        readonly grayscale: readonly [&quot;&quot;, &quot;0&quot;, (value: string) => boolean];
        readonly hueRotate: ((value: string) => boolean)[];
        readonly invert: readonly [&quot;&quot;, &quot;0&quot;, (value: string) => boolean];
        readonly gap: readonly [(value: string) => boolean, ThemeGetter];
        readonly gradientColorStops: readonly [ThemeGetter];
        readonly gradientColorStopPositions: readonly [(value: string) => boolean, (value: string) => boolean];
        readonly inset: readonly [&quot;auto&quot;, (value: string) => boolean, ThemeGetter];
        readonly margin: readonly [&quot;auto&quot;, (value: string) => boolean, ThemeGetter];
        readonly opacity: ((value: string) => boolean)[];
        readonly padding: readonly [(value: string) => boolean, ThemeGetter];
        readonly saturate: ((value: string) => boolean)[];
        readonly scale: ((value: string) => boolean)[];
        readonly sepia: readonly [&quot;&quot;, &quot;0&quot;, (value: string) => boolean];
        readonly skew: ((value: string) => boolean)[];
        readonly space: readonly [(value: string) => boolean, ThemeGetter];
        readonly translate: readonly [(value: string) => boolean, ThemeGetter];
    };
    readonly classGroups: {
        /**
         * Aspect Ratio
         * @see https://tailwindcss.com/docs/aspect-ratio
         */
        readonly aspect: readonly [{
            readonly aspect: readonly [&quot;auto&quot;, &quot;square&quot;, &quot;video&quot;, (value: string) => boolean];
        }];
        /**
         * Container
         * @see https://tailwindcss.com/docs/container
         */
        readonly container: readonly [&quot;container&quot;];
        /**
         * Columns
         * @see https://tailwindcss.com/docs/columns
         */
        readonly columns: readonly [{
            readonly columns: readonly [(value: string) => boolean];
        }];
        /**
         * Break After
         * @see https://tailwindcss.com/docs/break-after
         */
        readonly &apos;break-after&apos;: readonly [{
            readonly &apos;break-after&apos;: readonly [&quot;auto&quot;, &quot;avoid&quot;, &quot;all&quot;, &quot;avoid-page&quot;, &quot;page&quot;, &quot;left&quot;, &quot;right&quot;, &quot;column&quot;];
        }];
        /**
         * Break Before
         * @see https://tailwindcss.com/docs/break-before
         */
        readonly &apos;break-before&apos;: readonly [{
            readonly &apos;break-before&apos;: readonly [&quot;auto&quot;, &quot;avoid&quot;, &quot;all&quot;, &quot;avoid-page&quot;, &quot;page&quot;, &quot;left&quot;, &quot;right&quot;, &quot;column&quot;];
        }];
        /**
         * Break Inside
         * @see https://tailwindcss.com/docs/break-inside
         */
        readonly &apos;break-inside&apos;: readonly [{
            readonly &apos;break-inside&apos;: readonly [&quot;auto&quot;, &quot;avoid&quot;, &quot;avoid-page&quot;, &quot;avoid-column&quot;];
        }];
        /**
         * Box Decoration Break
         * @see https://tailwindcss.com/docs/box-decoration-break
         */
        readonly &apos;box-decoration&apos;: readonly [{
            readonly &apos;box-decoration&apos;: readonly [&quot;slice&quot;, &quot;clone&quot;];
        }];
        /**
         * Box Sizing
         * @see https://tailwindcss.com/docs/box-sizing
         */
        readonly box: readonly [{
            readonly box: readonly [&quot;border&quot;, &quot;content&quot;];
        }];
        /**
         * Display
         * @see https://tailwindcss.com/docs/display
         */
        readonly display: readonly [&quot;block&quot;, &quot;inline-block&quot;, &quot;inline&quot;, &quot;flex&quot;, &quot;inline-flex&quot;, &quot;table&quot;, &quot;inline-table&quot;, &quot;table-caption&quot;, &quot;table-cell&quot;, &quot;table-column&quot;, &quot;table-column-group&quot;, &quot;table-footer-group&quot;, &quot;table-header-group&quot;, &quot;table-row-group&quot;, &quot;table-row&quot;, &quot;flow-root&quot;, &quot;grid&quot;, &quot;inline-grid&quot;, &quot;contents&quot;, &quot;list-item&quot;, &quot;hidden&quot;];
        /**
         * Floats
         * @see https://tailwindcss.com/docs/float
         */
        readonly float: readonly [{
            readonly float: readonly [&quot;right&quot;, &quot;left&quot;, &quot;none&quot;, &quot;start&quot;, &quot;end&quot;];
        }];
        /**
         * Clear
         * @see https://tailwindcss.com/docs/clear
         */
        readonly clear: readonly [{
            readonly clear: readonly [&quot;left&quot;, &quot;right&quot;, &quot;both&quot;, &quot;none&quot;, &quot;start&quot;, &quot;end&quot;];
        }];
        /**
         * Isolation
         * @see https://tailwindcss.com/docs/isolation
         */
        readonly isolation: readonly [&quot;isolate&quot;, &quot;isolation-auto&quot;];
        /**
         * Object Fit
         * @see https://tailwindcss.com/docs/object-fit
         */
        readonly &apos;object-fit&apos;: readonly [{
            readonly object: readonly [&quot;contain&quot;, &quot;cover&quot;, &quot;fill&quot;, &quot;none&quot;, &quot;scale-down&quot;];
        }];
        /**
         * Object Position
         * @see https://tailwindcss.com/docs/object-position
         */
        readonly &apos;object-position&apos;: readonly [{
            readonly object: readonly [&quot;bottom&quot;, &quot;center&quot;, &quot;left&quot;, &quot;left-bottom&quot;, &quot;left-top&quot;, &quot;right&quot;, &quot;right-bottom&quot;, &quot;right-top&quot;, &quot;top&quot;, (value: string) => boolean];
        }];
        /**
         * Overflow
         * @see https://tailwindcss.com/docs/overflow
         */
        readonly overflow: readonly [{
            readonly overflow: readonly [&quot;auto&quot;, &quot;hidden&quot;, &quot;clip&quot;, &quot;visible&quot;, &quot;scroll&quot;];
        }];
        /**
         * Overflow X
         * @see https://tailwindcss.com/docs/overflow
         */
        readonly &apos;overflow-x&apos;: readonly [{
            readonly &apos;overflow-x&apos;: readonly [&quot;auto&quot;, &quot;hidden&quot;, &quot;clip&quot;, &quot;visible&quot;, &quot;scroll&quot;];
        }];
        /**
         * Overflow Y
         * @see https://tailwindcss.com/docs/overflow
         */
        readonly &apos;overflow-y&apos;: readonly [{
            readonly &apos;overflow-y&apos;: readonly [&quot;auto&quot;, &quot;hidden&quot;, &quot;clip&quot;, &quot;visible&quot;, &quot;scroll&quot;];
        }];
        /**
         * Overscroll Behavior
         * @see https://tailwindcss.com/docs/overscroll-behavior
         */
        readonly overscroll: readonly [{
            readonly overscroll: readonly [&quot;auto&quot;, &quot;contain&quot;, &quot;none&quot;];
        }];
        /**
         * Overscroll Behavior X
         * @see https://tailwindcss.com/docs/overscroll-behavior
         */
        readonly &apos;overscroll-x&apos;: readonly [{
            readonly &apos;overscroll-x&apos;: readonly [&quot;auto&quot;, &quot;contain&quot;, &quot;none&quot;];
        }];
        /**
         * Overscroll Behavior Y
         * @see https://tailwindcss.com/docs/overscroll-behavior
         */
        readonly &apos;overscroll-y&apos;: readonly [{
            readonly &apos;overscroll-y&apos;: readonly [&quot;auto&quot;, &quot;contain&quot;, &quot;none&quot;];
        }];
        /**
         * Position
         * @see https://tailwindcss.com/docs/position
         */
        readonly position: readonly [&quot;static&quot;, &quot;fixed&quot;, &quot;absolute&quot;, &quot;relative&quot;, &quot;sticky&quot;];
        /**
         * Top / Right / Bottom / Left
         * @see https://tailwindcss.com/docs/top-right-bottom-left
         */
        readonly inset: readonly [{
            readonly inset: readonly [ThemeGetter];
        }];
        /**
         * Right / Left
         * @see https://tailwindcss.com/docs/top-right-bottom-left
         */
        readonly &apos;inset-x&apos;: readonly [{
            readonly &apos;inset-x&apos;: readonly [ThemeGetter];
        }];
        /**
         * Top / Bottom
         * @see https://tailwindcss.com/docs/top-right-bottom-left
         */
        readonly &apos;inset-y&apos;: readonly [{
            readonly &apos;inset-y&apos;: readonly [ThemeGetter];
        }];
        /**
         * Start
         * @see https://tailwindcss.com/docs/top-right-bottom-left
         */
        readonly start: readonly [{
            readonly start: readonly [ThemeGetter];
        }];
        /**
         * End
         * @see https://tailwindcss.com/docs/top-right-bottom-left
         */
        readonly end: readonly [{
            readonly end: readonly [ThemeGetter];
        }];
        /**
         * Top
         * @see https://tailwindcss.com/docs/top-right-bottom-left
         */
        readonly top: readonly [{
            readonly top: readonly [ThemeGetter];
        }];
        /**
         * Right
         * @see https://tailwindcss.com/docs/top-right-bottom-left
         */
        readonly right: readonly [{
            readonly right: readonly [ThemeGetter];
        }];
        /**
         * Bottom
         * @see https://tailwindcss.com/docs/top-right-bottom-left
         */
        readonly bottom: readonly [{
            readonly bottom: readonly [ThemeGetter];
        }];
        /**
         * Left
         * @see https://tailwindcss.com/docs/top-right-bottom-left
         */
        readonly left: readonly [{
            readonly left: readonly [ThemeGetter];
        }];
        /**
         * Visibility
         * @see https://tailwindcss.com/docs/visibility
         */
        readonly visibility: readonly [&quot;visible&quot;, &quot;invisible&quot;, &quot;collapse&quot;];
        /**
         * Z-Index
         * @see https://tailwindcss.com/docs/z-index
         */
        readonly z: readonly [{
            readonly z: readonly [&quot;auto&quot;, (value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Flex Basis
         * @see https://tailwindcss.com/docs/flex-basis
         */
        readonly basis: readonly [{
            readonly basis: readonly [&quot;auto&quot;, (value: string) => boolean, ThemeGetter];
        }];
        /**
         * Flex Direction
         * @see https://tailwindcss.com/docs/flex-direction
         */
        readonly &apos;flex-direction&apos;: readonly [{
            readonly flex: readonly [&quot;row&quot;, &quot;row-reverse&quot;, &quot;col&quot;, &quot;col-reverse&quot;];
        }];
        /**
         * Flex Wrap
         * @see https://tailwindcss.com/docs/flex-wrap
         */
        readonly &apos;flex-wrap&apos;: readonly [{
            readonly flex: readonly [&quot;wrap&quot;, &quot;wrap-reverse&quot;, &quot;nowrap&quot;];
        }];
        /**
         * Flex
         * @see https://tailwindcss.com/docs/flex
         */
        readonly flex: readonly [{
            readonly flex: readonly [&quot;1&quot;, &quot;auto&quot;, &quot;initial&quot;, &quot;none&quot;, (value: string) => boolean];
        }];
        /**
         * Flex Grow
         * @see https://tailwindcss.com/docs/flex-grow
         */
        readonly grow: readonly [{
            readonly grow: readonly [&quot;&quot;, &quot;0&quot;, (value: string) => boolean];
        }];
        /**
         * Flex Shrink
         * @see https://tailwindcss.com/docs/flex-shrink
         */
        readonly shrink: readonly [{
            readonly shrink: readonly [&quot;&quot;, &quot;0&quot;, (value: string) => boolean];
        }];
        /**
         * Order
         * @see https://tailwindcss.com/docs/order
         */
        readonly order: readonly [{
            readonly order: readonly [&quot;first&quot;, &quot;last&quot;, &quot;none&quot;, (value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Grid Template Columns
         * @see https://tailwindcss.com/docs/grid-template-columns
         */
        readonly &apos;grid-cols&apos;: readonly [{
            readonly &apos;grid-cols&apos;: readonly [() => boolean];
        }];
        /**
         * Grid Column Start / End
         * @see https://tailwindcss.com/docs/grid-column
         */
        readonly &apos;col-start-end&apos;: readonly [{
            readonly col: readonly [&quot;auto&quot;, {
                readonly span: readonly [&quot;full&quot;, (value: string) => boolean, (value: string) => boolean];
            }, (value: string) => boolean];
        }];
        /**
         * Grid Column Start
         * @see https://tailwindcss.com/docs/grid-column
         */
        readonly &apos;col-start&apos;: readonly [{
            readonly &apos;col-start&apos;: readonly [&quot;auto&quot;, (value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Grid Column End
         * @see https://tailwindcss.com/docs/grid-column
         */
        readonly &apos;col-end&apos;: readonly [{
            readonly &apos;col-end&apos;: readonly [&quot;auto&quot;, (value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Grid Template Rows
         * @see https://tailwindcss.com/docs/grid-template-rows
         */
        readonly &apos;grid-rows&apos;: readonly [{
            readonly &apos;grid-rows&apos;: readonly [() => boolean];
        }];
        /**
         * Grid Row Start / End
         * @see https://tailwindcss.com/docs/grid-row
         */
        readonly &apos;row-start-end&apos;: readonly [{
            readonly row: readonly [&quot;auto&quot;, {
                readonly span: readonly [(value: string) => boolean, (value: string) => boolean];
            }, (value: string) => boolean];
        }];
        /**
         * Grid Row Start
         * @see https://tailwindcss.com/docs/grid-row
         */
        readonly &apos;row-start&apos;: readonly [{
            readonly &apos;row-start&apos;: readonly [&quot;auto&quot;, (value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Grid Row End
         * @see https://tailwindcss.com/docs/grid-row
         */
        readonly &apos;row-end&apos;: readonly [{
            readonly &apos;row-end&apos;: readonly [&quot;auto&quot;, (value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Grid Auto Flow
         * @see https://tailwindcss.com/docs/grid-auto-flow
         */
        readonly &apos;grid-flow&apos;: readonly [{
            readonly &apos;grid-flow&apos;: readonly [&quot;row&quot;, &quot;col&quot;, &quot;dense&quot;, &quot;row-dense&quot;, &quot;col-dense&quot;];
        }];
        /**
         * Grid Auto Columns
         * @see https://tailwindcss.com/docs/grid-auto-columns
         */
        readonly &apos;auto-cols&apos;: readonly [{
            readonly &apos;auto-cols&apos;: readonly [&quot;auto&quot;, &quot;min&quot;, &quot;max&quot;, &quot;fr&quot;, (value: string) => boolean];
        }];
        /**
         * Grid Auto Rows
         * @see https://tailwindcss.com/docs/grid-auto-rows
         */
        readonly &apos;auto-rows&apos;: readonly [{
            readonly &apos;auto-rows&apos;: readonly [&quot;auto&quot;, &quot;min&quot;, &quot;max&quot;, &quot;fr&quot;, (value: string) => boolean];
        }];
        /**
         * Gap
         * @see https://tailwindcss.com/docs/gap
         */
        readonly gap: readonly [{
            readonly gap: readonly [ThemeGetter];
        }];
        /**
         * Gap X
         * @see https://tailwindcss.com/docs/gap
         */
        readonly &apos;gap-x&apos;: readonly [{
            readonly &apos;gap-x&apos;: readonly [ThemeGetter];
        }];
        /**
         * Gap Y
         * @see https://tailwindcss.com/docs/gap
         */
        readonly &apos;gap-y&apos;: readonly [{
            readonly &apos;gap-y&apos;: readonly [ThemeGetter];
        }];
        /**
         * Justify Content
         * @see https://tailwindcss.com/docs/justify-content
         */
        readonly &apos;justify-content&apos;: readonly [{
            readonly justify: readonly [&quot;normal&quot;, &quot;start&quot;, &quot;end&quot;, &quot;center&quot;, &quot;between&quot;, &quot;around&quot;, &quot;evenly&quot;, &quot;stretch&quot;];
        }];
        /**
         * Justify Items
         * @see https://tailwindcss.com/docs/justify-items
         */
        readonly &apos;justify-items&apos;: readonly [{
            readonly &apos;justify-items&apos;: readonly [&quot;start&quot;, &quot;end&quot;, &quot;center&quot;, &quot;stretch&quot;];
        }];
        /**
         * Justify Self
         * @see https://tailwindcss.com/docs/justify-self
         */
        readonly &apos;justify-self&apos;: readonly [{
            readonly &apos;justify-self&apos;: readonly [&quot;auto&quot;, &quot;start&quot;, &quot;end&quot;, &quot;center&quot;, &quot;stretch&quot;];
        }];
        /**
         * Align Content
         * @see https://tailwindcss.com/docs/align-content
         */
        readonly &apos;align-content&apos;: readonly [{
            readonly content: readonly [&quot;normal&quot;, &quot;start&quot;, &quot;end&quot;, &quot;center&quot;, &quot;between&quot;, &quot;around&quot;, &quot;evenly&quot;, &quot;stretch&quot;, &quot;baseline&quot;];
        }];
        /**
         * Align Items
         * @see https://tailwindcss.com/docs/align-items
         */
        readonly &apos;align-items&apos;: readonly [{
            readonly items: readonly [&quot;start&quot;, &quot;end&quot;, &quot;center&quot;, &quot;baseline&quot;, &quot;stretch&quot;];
        }];
        /**
         * Align Self
         * @see https://tailwindcss.com/docs/align-self
         */
        readonly &apos;align-self&apos;: readonly [{
            readonly self: readonly [&quot;auto&quot;, &quot;start&quot;, &quot;end&quot;, &quot;center&quot;, &quot;stretch&quot;, &quot;baseline&quot;];
        }];
        /**
         * Place Content
         * @see https://tailwindcss.com/docs/place-content
         */
        readonly &apos;place-content&apos;: readonly [{
            readonly &apos;place-content&apos;: readonly [&quot;start&quot;, &quot;end&quot;, &quot;center&quot;, &quot;between&quot;, &quot;around&quot;, &quot;evenly&quot;, &quot;stretch&quot;, &quot;baseline&quot;];
        }];
        /**
         * Place Items
         * @see https://tailwindcss.com/docs/place-items
         */
        readonly &apos;place-items&apos;: readonly [{
            readonly &apos;place-items&apos;: readonly [&quot;start&quot;, &quot;end&quot;, &quot;center&quot;, &quot;baseline&quot;, &quot;stretch&quot;];
        }];
        /**
         * Place Self
         * @see https://tailwindcss.com/docs/place-self
         */
        readonly &apos;place-self&apos;: readonly [{
            readonly &apos;place-self&apos;: readonly [&quot;auto&quot;, &quot;start&quot;, &quot;end&quot;, &quot;center&quot;, &quot;stretch&quot;];
        }];
        /**
         * Padding
         * @see https://tailwindcss.com/docs/padding
         */
        readonly p: readonly [{
            readonly p: readonly [ThemeGetter];
        }];
        /**
         * Padding X
         * @see https://tailwindcss.com/docs/padding
         */
        readonly px: readonly [{
            readonly px: readonly [ThemeGetter];
        }];
        /**
         * Padding Y
         * @see https://tailwindcss.com/docs/padding
         */
        readonly py: readonly [{
            readonly py: readonly [ThemeGetter];
        }];
        /**
         * Padding Start
         * @see https://tailwindcss.com/docs/padding
         */
        readonly ps: readonly [{
            readonly ps: readonly [ThemeGetter];
        }];
        /**
         * Padding End
         * @see https://tailwindcss.com/docs/padding
         */
        readonly pe: readonly [{
            readonly pe: readonly [ThemeGetter];
        }];
        /**
         * Padding Top
         * @see https://tailwindcss.com/docs/padding
         */
        readonly pt: readonly [{
            readonly pt: readonly [ThemeGetter];
        }];
        /**
         * Padding Right
         * @see https://tailwindcss.com/docs/padding
         */
        readonly pr: readonly [{
            readonly pr: readonly [ThemeGetter];
        }];
        /**
         * Padding Bottom
         * @see https://tailwindcss.com/docs/padding
         */
        readonly pb: readonly [{
            readonly pb: readonly [ThemeGetter];
        }];
        /**
         * Padding Left
         * @see https://tailwindcss.com/docs/padding
         */
        readonly pl: readonly [{
            readonly pl: readonly [ThemeGetter];
        }];
        /**
         * Margin
         * @see https://tailwindcss.com/docs/margin
         */
        readonly m: readonly [{
            readonly m: readonly [ThemeGetter];
        }];
        /**
         * Margin X
         * @see https://tailwindcss.com/docs/margin
         */
        readonly mx: readonly [{
            readonly mx: readonly [ThemeGetter];
        }];
        /**
         * Margin Y
         * @see https://tailwindcss.com/docs/margin
         */
        readonly my: readonly [{
            readonly my: readonly [ThemeGetter];
        }];
        /**
         * Margin Start
         * @see https://tailwindcss.com/docs/margin
         */
        readonly ms: readonly [{
            readonly ms: readonly [ThemeGetter];
        }];
        /**
         * Margin End
         * @see https://tailwindcss.com/docs/margin
         */
        readonly me: readonly [{
            readonly me: readonly [ThemeGetter];
        }];
        /**
         * Margin Top
         * @see https://tailwindcss.com/docs/margin
         */
        readonly mt: readonly [{
            readonly mt: readonly [ThemeGetter];
        }];
        /**
         * Margin Right
         * @see https://tailwindcss.com/docs/margin
         */
        readonly mr: readonly [{
            readonly mr: readonly [ThemeGetter];
        }];
        /**
         * Margin Bottom
         * @see https://tailwindcss.com/docs/margin
         */
        readonly mb: readonly [{
            readonly mb: readonly [ThemeGetter];
        }];
        /**
         * Margin Left
         * @see https://tailwindcss.com/docs/margin
         */
        readonly ml: readonly [{
            readonly ml: readonly [ThemeGetter];
        }];
        /**
         * Space Between X
         * @see https://tailwindcss.com/docs/space
         */
        readonly &apos;space-x&apos;: readonly [{
            readonly &apos;space-x&apos;: readonly [ThemeGetter];
        }];
        /**
         * Space Between X Reverse
         * @see https://tailwindcss.com/docs/space
         */
        readonly &apos;space-x-reverse&apos;: readonly [&quot;space-x-reverse&quot;];
        /**
         * Space Between Y
         * @see https://tailwindcss.com/docs/space
         */
        readonly &apos;space-y&apos;: readonly [{
            readonly &apos;space-y&apos;: readonly [ThemeGetter];
        }];
        /**
         * Space Between Y Reverse
         * @see https://tailwindcss.com/docs/space
         */
        readonly &apos;space-y-reverse&apos;: readonly [&quot;space-y-reverse&quot;];
        /**
         * Width
         * @see https://tailwindcss.com/docs/width
         */
        readonly w: readonly [{
            readonly w: readonly [&quot;auto&quot;, &quot;min&quot;, &quot;max&quot;, &quot;fit&quot;, &quot;svw&quot;, &quot;lvw&quot;, &quot;dvw&quot;, (value: string) => boolean, ThemeGetter];
        }];
        /**
         * Min-Width
         * @see https://tailwindcss.com/docs/min-width
         */
        readonly &apos;min-w&apos;: readonly [{
            readonly &apos;min-w&apos;: readonly [(value: string) => boolean, ThemeGetter, &quot;min&quot;, &quot;max&quot;, &quot;fit&quot;];
        }];
        /**
         * Max-Width
         * @see https://tailwindcss.com/docs/max-width
         */
        readonly &apos;max-w&apos;: readonly [{
            readonly &apos;max-w&apos;: readonly [(value: string) => boolean, ThemeGetter, &quot;none&quot;, &quot;full&quot;, &quot;min&quot;, &quot;max&quot;, &quot;fit&quot;, &quot;prose&quot;, {
                readonly screen: readonly [(value: string) => boolean];
            }, (value: string) => boolean];
        }];
        /**
         * Height
         * @see https://tailwindcss.com/docs/height
         */
        readonly h: readonly [{
            readonly h: readonly [(value: string) => boolean, ThemeGetter, &quot;auto&quot;, &quot;min&quot;, &quot;max&quot;, &quot;fit&quot;, &quot;svh&quot;, &quot;lvh&quot;, &quot;dvh&quot;];
        }];
        /**
         * Min-Height
         * @see https://tailwindcss.com/docs/min-height
         */
        readonly &apos;min-h&apos;: readonly [{
            readonly &apos;min-h&apos;: readonly [(value: string) => boolean, ThemeGetter, &quot;min&quot;, &quot;max&quot;, &quot;fit&quot;, &quot;svh&quot;, &quot;lvh&quot;, &quot;dvh&quot;];
        }];
        /**
         * Max-Height
         * @see https://tailwindcss.com/docs/max-height
         */
        readonly &apos;max-h&apos;: readonly [{
            readonly &apos;max-h&apos;: readonly [(value: string) => boolean, ThemeGetter, &quot;min&quot;, &quot;max&quot;, &quot;fit&quot;, &quot;svh&quot;, &quot;lvh&quot;, &quot;dvh&quot;];
        }];
        /**
         * Size
         * @see https://tailwindcss.com/docs/size
         */
        readonly size: readonly [{
            readonly size: readonly [(value: string) => boolean, ThemeGetter, &quot;auto&quot;, &quot;min&quot;, &quot;max&quot;, &quot;fit&quot;];
        }];
        /**
         * Font Size
         * @see https://tailwindcss.com/docs/font-size
         */
        readonly &apos;font-size&apos;: readonly [{
            readonly text: readonly [&quot;base&quot;, (value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Font Smoothing
         * @see https://tailwindcss.com/docs/font-smoothing
         */
        readonly &apos;font-smoothing&apos;: readonly [&quot;antialiased&quot;, &quot;subpixel-antialiased&quot;];
        /**
         * Font Style
         * @see https://tailwindcss.com/docs/font-style
         */
        readonly &apos;font-style&apos;: readonly [&quot;italic&quot;, &quot;not-italic&quot;];
        /**
         * Font Weight
         * @see https://tailwindcss.com/docs/font-weight
         */
        readonly &apos;font-weight&apos;: readonly [{
            readonly font: readonly [&quot;thin&quot;, &quot;extralight&quot;, &quot;light&quot;, &quot;normal&quot;, &quot;medium&quot;, &quot;semibold&quot;, &quot;bold&quot;, &quot;extrabold&quot;, &quot;black&quot;, (value: string) => boolean];
        }];
        /**
         * Font Family
         * @see https://tailwindcss.com/docs/font-family
         */
        readonly &apos;font-family&apos;: readonly [{
            readonly font: readonly [() => boolean];
        }];
        /**
         * Font Variant Numeric
         * @see https://tailwindcss.com/docs/font-variant-numeric
         */
        readonly &apos;fvn-normal&apos;: readonly [&quot;normal-nums&quot;];
        /**
         * Font Variant Numeric
         * @see https://tailwindcss.com/docs/font-variant-numeric
         */
        readonly &apos;fvn-ordinal&apos;: readonly [&quot;ordinal&quot;];
        /**
         * Font Variant Numeric
         * @see https://tailwindcss.com/docs/font-variant-numeric
         */
        readonly &apos;fvn-slashed-zero&apos;: readonly [&quot;slashed-zero&quot;];
        /**
         * Font Variant Numeric
         * @see https://tailwindcss.com/docs/font-variant-numeric
         */
        readonly &apos;fvn-figure&apos;: readonly [&quot;lining-nums&quot;, &quot;oldstyle-nums&quot;];
        /**
         * Font Variant Numeric
         * @see https://tailwindcss.com/docs/font-variant-numeric
         */
        readonly &apos;fvn-spacing&apos;: readonly [&quot;proportional-nums&quot;, &quot;tabular-nums&quot;];
        /**
         * Font Variant Numeric
         * @see https://tailwindcss.com/docs/font-variant-numeric
         */
        readonly &apos;fvn-fraction&apos;: readonly [&quot;diagonal-fractions&quot;, &quot;stacked-fractions&quot;];
        /**
         * Letter Spacing
         * @see https://tailwindcss.com/docs/letter-spacing
         */
        readonly tracking: readonly [{
            readonly tracking: readonly [&quot;tighter&quot;, &quot;tight&quot;, &quot;normal&quot;, &quot;wide&quot;, &quot;wider&quot;, &quot;widest&quot;, (value: string) => boolean];
        }];
        /**
         * Line Clamp
         * @see https://tailwindcss.com/docs/line-clamp
         */
        readonly &apos;line-clamp&apos;: readonly [{
            readonly &apos;line-clamp&apos;: readonly [&quot;none&quot;, (value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Line Height
         * @see https://tailwindcss.com/docs/line-height
         */
        readonly leading: readonly [{
            readonly leading: readonly [&quot;none&quot;, &quot;tight&quot;, &quot;snug&quot;, &quot;normal&quot;, &quot;relaxed&quot;, &quot;loose&quot;, (value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * List Style Image
         * @see https://tailwindcss.com/docs/list-style-image
         */
        readonly &apos;list-image&apos;: readonly [{
            readonly &apos;list-image&apos;: readonly [&quot;none&quot;, (value: string) => boolean];
        }];
        /**
         * List Style Type
         * @see https://tailwindcss.com/docs/list-style-type
         */
        readonly &apos;list-style-type&apos;: readonly [{
            readonly list: readonly [&quot;none&quot;, &quot;disc&quot;, &quot;decimal&quot;, (value: string) => boolean];
        }];
        /**
         * List Style Position
         * @see https://tailwindcss.com/docs/list-style-position
         */
        readonly &apos;list-style-position&apos;: readonly [{
            readonly list: readonly [&quot;inside&quot;, &quot;outside&quot;];
        }];
        /**
         * Placeholder Color
         * @deprecated since Tailwind CSS v3.0.0
         * @see https://tailwindcss.com/docs/placeholder-color
         */
        readonly &apos;placeholder-color&apos;: readonly [{
            readonly placeholder: readonly [ThemeGetter];
        }];
        /**
         * Placeholder Opacity
         * @see https://tailwindcss.com/docs/placeholder-opacity
         */
        readonly &apos;placeholder-opacity&apos;: readonly [{
            readonly &apos;placeholder-opacity&apos;: readonly [ThemeGetter];
        }];
        /**
         * Text Alignment
         * @see https://tailwindcss.com/docs/text-align
         */
        readonly &apos;text-alignment&apos;: readonly [{
            readonly text: readonly [&quot;left&quot;, &quot;center&quot;, &quot;right&quot;, &quot;justify&quot;, &quot;start&quot;, &quot;end&quot;];
        }];
        /**
         * Text Color
         * @see https://tailwindcss.com/docs/text-color
         */
        readonly &apos;text-color&apos;: readonly [{
            readonly text: readonly [ThemeGetter];
        }];
        /**
         * Text Opacity
         * @see https://tailwindcss.com/docs/text-opacity
         */
        readonly &apos;text-opacity&apos;: readonly [{
            readonly &apos;text-opacity&apos;: readonly [ThemeGetter];
        }];
        /**
         * Text Decoration
         * @see https://tailwindcss.com/docs/text-decoration
         */
        readonly &apos;text-decoration&apos;: readonly [&quot;underline&quot;, &quot;overline&quot;, &quot;line-through&quot;, &quot;no-underline&quot;];
        /**
         * Text Decoration Style
         * @see https://tailwindcss.com/docs/text-decoration-style
         */
        readonly &apos;text-decoration-style&apos;: readonly [{
            readonly decoration: readonly [&quot;solid&quot;, &quot;dashed&quot;, &quot;dotted&quot;, &quot;double&quot;, &quot;none&quot;, &quot;wavy&quot;];
        }];
        /**
         * Text Decoration Thickness
         * @see https://tailwindcss.com/docs/text-decoration-thickness
         */
        readonly &apos;text-decoration-thickness&apos;: readonly [{
            readonly decoration: readonly [&quot;auto&quot;, &quot;from-font&quot;, (value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Text Underline Offset
         * @see https://tailwindcss.com/docs/text-underline-offset
         */
        readonly &apos;underline-offset&apos;: readonly [{
            readonly &apos;underline-offset&apos;: readonly [&quot;auto&quot;, (value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Text Decoration Color
         * @see https://tailwindcss.com/docs/text-decoration-color
         */
        readonly &apos;text-decoration-color&apos;: readonly [{
            readonly decoration: readonly [ThemeGetter];
        }];
        /**
         * Text Transform
         * @see https://tailwindcss.com/docs/text-transform
         */
        readonly &apos;text-transform&apos;: readonly [&quot;uppercase&quot;, &quot;lowercase&quot;, &quot;capitalize&quot;, &quot;normal-case&quot;];
        /**
         * Text Overflow
         * @see https://tailwindcss.com/docs/text-overflow
         */
        readonly &apos;text-overflow&apos;: readonly [&quot;truncate&quot;, &quot;text-ellipsis&quot;, &quot;text-clip&quot;];
        /**
         * Text Wrap
         * @see https://tailwindcss.com/docs/text-wrap
         */
        readonly &apos;text-wrap&apos;: readonly [{
            readonly text: readonly [&quot;wrap&quot;, &quot;nowrap&quot;, &quot;balance&quot;, &quot;pretty&quot;];
        }];
        /**
         * Text Indent
         * @see https://tailwindcss.com/docs/text-indent
         */
        readonly indent: readonly [{
            readonly indent: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Vertical Alignment
         * @see https://tailwindcss.com/docs/vertical-align
         */
        readonly &apos;vertical-align&apos;: readonly [{
            readonly align: readonly [&quot;baseline&quot;, &quot;top&quot;, &quot;middle&quot;, &quot;bottom&quot;, &quot;text-top&quot;, &quot;text-bottom&quot;, &quot;sub&quot;, &quot;super&quot;, (value: string) => boolean];
        }];
        /**
         * Whitespace
         * @see https://tailwindcss.com/docs/whitespace
         */
        readonly whitespace: readonly [{
            readonly whitespace: readonly [&quot;normal&quot;, &quot;nowrap&quot;, &quot;pre&quot;, &quot;pre-line&quot;, &quot;pre-wrap&quot;, &quot;break-spaces&quot;];
        }];
        /**
         * Word Break
         * @see https://tailwindcss.com/docs/word-break
         */
        readonly break: readonly [{
            readonly break: readonly [&quot;normal&quot;, &quot;words&quot;, &quot;all&quot;, &quot;keep&quot;];
        }];
        /**
         * Hyphens
         * @see https://tailwindcss.com/docs/hyphens
         */
        readonly hyphens: readonly [{
            readonly hyphens: readonly [&quot;none&quot;, &quot;manual&quot;, &quot;auto&quot;];
        }];
        /**
         * Content
         * @see https://tailwindcss.com/docs/content
         */
        readonly content: readonly [{
            readonly content: readonly [&quot;none&quot;, (value: string) => boolean];
        }];
        /**
         * Background Attachment
         * @see https://tailwindcss.com/docs/background-attachment
         */
        readonly &apos;bg-attachment&apos;: readonly [{
            readonly bg: readonly [&quot;fixed&quot;, &quot;local&quot;, &quot;scroll&quot;];
        }];
        /**
         * Background Clip
         * @see https://tailwindcss.com/docs/background-clip
         */
        readonly &apos;bg-clip&apos;: readonly [{
            readonly &apos;bg-clip&apos;: readonly [&quot;border&quot;, &quot;padding&quot;, &quot;content&quot;, &quot;text&quot;];
        }];
        /**
         * Background Opacity
         * @deprecated since Tailwind CSS v3.0.0
         * @see https://tailwindcss.com/docs/background-opacity
         */
        readonly &apos;bg-opacity&apos;: readonly [{
            readonly &apos;bg-opacity&apos;: readonly [ThemeGetter];
        }];
        /**
         * Background Origin
         * @see https://tailwindcss.com/docs/background-origin
         */
        readonly &apos;bg-origin&apos;: readonly [{
            readonly &apos;bg-origin&apos;: readonly [&quot;border&quot;, &quot;padding&quot;, &quot;content&quot;];
        }];
        /**
         * Background Position
         * @see https://tailwindcss.com/docs/background-position
         */
        readonly &apos;bg-position&apos;: readonly [{
            readonly bg: readonly [&quot;bottom&quot;, &quot;center&quot;, &quot;left&quot;, &quot;left-bottom&quot;, &quot;left-top&quot;, &quot;right&quot;, &quot;right-bottom&quot;, &quot;right-top&quot;, &quot;top&quot;, (value: string) => boolean];
        }];
        /**
         * Background Repeat
         * @see https://tailwindcss.com/docs/background-repeat
         */
        readonly &apos;bg-repeat&apos;: readonly [{
            readonly bg: readonly [&quot;no-repeat&quot;, {
                readonly repeat: readonly [&quot;&quot;, &quot;x&quot;, &quot;y&quot;, &quot;round&quot;, &quot;space&quot;];
            }];
        }];
        /**
         * Background Size
         * @see https://tailwindcss.com/docs/background-size
         */
        readonly &apos;bg-size&apos;: readonly [{
            readonly bg: readonly [&quot;auto&quot;, &quot;cover&quot;, &quot;contain&quot;, (value: string) => boolean];
        }];
        /**
         * Background Image
         * @see https://tailwindcss.com/docs/background-image
         */
        readonly &apos;bg-image&apos;: readonly [{
            readonly bg: readonly [&quot;none&quot;, {
                readonly &apos;gradient-to&apos;: readonly [&quot;t&quot;, &quot;tr&quot;, &quot;r&quot;, &quot;br&quot;, &quot;b&quot;, &quot;bl&quot;, &quot;l&quot;, &quot;tl&quot;];
            }, (value: string) => boolean];
        }];
        /**
         * Background Color
         * @see https://tailwindcss.com/docs/background-color
         */
        readonly &apos;bg-color&apos;: readonly [{
            readonly bg: readonly [ThemeGetter];
        }];
        /**
         * Gradient Color Stops From Position
         * @see https://tailwindcss.com/docs/gradient-color-stops
         */
        readonly &apos;gradient-from-pos&apos;: readonly [{
            readonly from: readonly [ThemeGetter];
        }];
        /**
         * Gradient Color Stops Via Position
         * @see https://tailwindcss.com/docs/gradient-color-stops
         */
        readonly &apos;gradient-via-pos&apos;: readonly [{
            readonly via: readonly [ThemeGetter];
        }];
        /**
         * Gradient Color Stops To Position
         * @see https://tailwindcss.com/docs/gradient-color-stops
         */
        readonly &apos;gradient-to-pos&apos;: readonly [{
            readonly to: readonly [ThemeGetter];
        }];
        /**
         * Gradient Color Stops From
         * @see https://tailwindcss.com/docs/gradient-color-stops
         */
        readonly &apos;gradient-from&apos;: readonly [{
            readonly from: readonly [ThemeGetter];
        }];
        /**
         * Gradient Color Stops Via
         * @see https://tailwindcss.com/docs/gradient-color-stops
         */
        readonly &apos;gradient-via&apos;: readonly [{
            readonly via: readonly [ThemeGetter];
        }];
        /**
         * Gradient Color Stops To
         * @see https://tailwindcss.com/docs/gradient-color-stops
         */
        readonly &apos;gradient-to&apos;: readonly [{
            readonly to: readonly [ThemeGetter];
        }];
        /**
         * Border Radius
         * @see https://tailwindcss.com/docs/border-radius
         */
        readonly rounded: readonly [{
            readonly rounded: readonly [ThemeGetter];
        }];
        /**
         * Border Radius Start
         * @see https://tailwindcss.com/docs/border-radius
         */
        readonly &apos;rounded-s&apos;: readonly [{
            readonly &apos;rounded-s&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Radius End
         * @see https://tailwindcss.com/docs/border-radius
         */
        readonly &apos;rounded-e&apos;: readonly [{
            readonly &apos;rounded-e&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Radius Top
         * @see https://tailwindcss.com/docs/border-radius
         */
        readonly &apos;rounded-t&apos;: readonly [{
            readonly &apos;rounded-t&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Radius Right
         * @see https://tailwindcss.com/docs/border-radius
         */
        readonly &apos;rounded-r&apos;: readonly [{
            readonly &apos;rounded-r&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Radius Bottom
         * @see https://tailwindcss.com/docs/border-radius
         */
        readonly &apos;rounded-b&apos;: readonly [{
            readonly &apos;rounded-b&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Radius Left
         * @see https://tailwindcss.com/docs/border-radius
         */
        readonly &apos;rounded-l&apos;: readonly [{
            readonly &apos;rounded-l&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Radius Start Start
         * @see https://tailwindcss.com/docs/border-radius
         */
        readonly &apos;rounded-ss&apos;: readonly [{
            readonly &apos;rounded-ss&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Radius Start End
         * @see https://tailwindcss.com/docs/border-radius
         */
        readonly &apos;rounded-se&apos;: readonly [{
            readonly &apos;rounded-se&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Radius End End
         * @see https://tailwindcss.com/docs/border-radius
         */
        readonly &apos;rounded-ee&apos;: readonly [{
            readonly &apos;rounded-ee&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Radius End Start
         * @see https://tailwindcss.com/docs/border-radius
         */
        readonly &apos;rounded-es&apos;: readonly [{
            readonly &apos;rounded-es&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Radius Top Left
         * @see https://tailwindcss.com/docs/border-radius
         */
        readonly &apos;rounded-tl&apos;: readonly [{
            readonly &apos;rounded-tl&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Radius Top Right
         * @see https://tailwindcss.com/docs/border-radius
         */
        readonly &apos;rounded-tr&apos;: readonly [{
            readonly &apos;rounded-tr&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Radius Bottom Right
         * @see https://tailwindcss.com/docs/border-radius
         */
        readonly &apos;rounded-br&apos;: readonly [{
            readonly &apos;rounded-br&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Radius Bottom Left
         * @see https://tailwindcss.com/docs/border-radius
         */
        readonly &apos;rounded-bl&apos;: readonly [{
            readonly &apos;rounded-bl&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Width
         * @see https://tailwindcss.com/docs/border-width
         */
        readonly &apos;border-w&apos;: readonly [{
            readonly border: readonly [ThemeGetter];
        }];
        /**
         * Border Width X
         * @see https://tailwindcss.com/docs/border-width
         */
        readonly &apos;border-w-x&apos;: readonly [{
            readonly &apos;border-x&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Width Y
         * @see https://tailwindcss.com/docs/border-width
         */
        readonly &apos;border-w-y&apos;: readonly [{
            readonly &apos;border-y&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Width Start
         * @see https://tailwindcss.com/docs/border-width
         */
        readonly &apos;border-w-s&apos;: readonly [{
            readonly &apos;border-s&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Width End
         * @see https://tailwindcss.com/docs/border-width
         */
        readonly &apos;border-w-e&apos;: readonly [{
            readonly &apos;border-e&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Width Top
         * @see https://tailwindcss.com/docs/border-width
         */
        readonly &apos;border-w-t&apos;: readonly [{
            readonly &apos;border-t&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Width Right
         * @see https://tailwindcss.com/docs/border-width
         */
        readonly &apos;border-w-r&apos;: readonly [{
            readonly &apos;border-r&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Width Bottom
         * @see https://tailwindcss.com/docs/border-width
         */
        readonly &apos;border-w-b&apos;: readonly [{
            readonly &apos;border-b&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Width Left
         * @see https://tailwindcss.com/docs/border-width
         */
        readonly &apos;border-w-l&apos;: readonly [{
            readonly &apos;border-l&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Opacity
         * @see https://tailwindcss.com/docs/border-opacity
         */
        readonly &apos;border-opacity&apos;: readonly [{
            readonly &apos;border-opacity&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Style
         * @see https://tailwindcss.com/docs/border-style
         */
        readonly &apos;border-style&apos;: readonly [{
            readonly border: readonly [&quot;solid&quot;, &quot;dashed&quot;, &quot;dotted&quot;, &quot;double&quot;, &quot;none&quot;, &quot;hidden&quot;];
        }];
        /**
         * Divide Width X
         * @see https://tailwindcss.com/docs/divide-width
         */
        readonly &apos;divide-x&apos;: readonly [{
            readonly &apos;divide-x&apos;: readonly [ThemeGetter];
        }];
        /**
         * Divide Width X Reverse
         * @see https://tailwindcss.com/docs/divide-width
         */
        readonly &apos;divide-x-reverse&apos;: readonly [&quot;divide-x-reverse&quot;];
        /**
         * Divide Width Y
         * @see https://tailwindcss.com/docs/divide-width
         */
        readonly &apos;divide-y&apos;: readonly [{
            readonly &apos;divide-y&apos;: readonly [ThemeGetter];
        }];
        /**
         * Divide Width Y Reverse
         * @see https://tailwindcss.com/docs/divide-width
         */
        readonly &apos;divide-y-reverse&apos;: readonly [&quot;divide-y-reverse&quot;];
        /**
         * Divide Opacity
         * @see https://tailwindcss.com/docs/divide-opacity
         */
        readonly &apos;divide-opacity&apos;: readonly [{
            readonly &apos;divide-opacity&apos;: readonly [ThemeGetter];
        }];
        /**
         * Divide Style
         * @see https://tailwindcss.com/docs/divide-style
         */
        readonly &apos;divide-style&apos;: readonly [{
            readonly divide: readonly [&quot;solid&quot;, &quot;dashed&quot;, &quot;dotted&quot;, &quot;double&quot;, &quot;none&quot;];
        }];
        /**
         * Border Color
         * @see https://tailwindcss.com/docs/border-color
         */
        readonly &apos;border-color&apos;: readonly [{
            readonly border: readonly [ThemeGetter];
        }];
        /**
         * Border Color X
         * @see https://tailwindcss.com/docs/border-color
         */
        readonly &apos;border-color-x&apos;: readonly [{
            readonly &apos;border-x&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Color Y
         * @see https://tailwindcss.com/docs/border-color
         */
        readonly &apos;border-color-y&apos;: readonly [{
            readonly &apos;border-y&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Color S
         * @see https://tailwindcss.com/docs/border-color
         */
        readonly &apos;border-color-s&apos;: readonly [{
            readonly &apos;border-s&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Color E
         * @see https://tailwindcss.com/docs/border-color
         */
        readonly &apos;border-color-e&apos;: readonly [{
            readonly &apos;border-e&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Color Top
         * @see https://tailwindcss.com/docs/border-color
         */
        readonly &apos;border-color-t&apos;: readonly [{
            readonly &apos;border-t&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Color Right
         * @see https://tailwindcss.com/docs/border-color
         */
        readonly &apos;border-color-r&apos;: readonly [{
            readonly &apos;border-r&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Color Bottom
         * @see https://tailwindcss.com/docs/border-color
         */
        readonly &apos;border-color-b&apos;: readonly [{
            readonly &apos;border-b&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Color Left
         * @see https://tailwindcss.com/docs/border-color
         */
        readonly &apos;border-color-l&apos;: readonly [{
            readonly &apos;border-l&apos;: readonly [ThemeGetter];
        }];
        /**
         * Divide Color
         * @see https://tailwindcss.com/docs/divide-color
         */
        readonly &apos;divide-color&apos;: readonly [{
            readonly divide: readonly [ThemeGetter];
        }];
        /**
         * Outline Style
         * @see https://tailwindcss.com/docs/outline-style
         */
        readonly &apos;outline-style&apos;: readonly [{
            readonly outline: readonly [&quot;&quot;, &quot;solid&quot;, &quot;dashed&quot;, &quot;dotted&quot;, &quot;double&quot;, &quot;none&quot;];
        }];
        /**
         * Outline Offset
         * @see https://tailwindcss.com/docs/outline-offset
         */
        readonly &apos;outline-offset&apos;: readonly [{
            readonly &apos;outline-offset&apos;: readonly [(value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Outline Width
         * @see https://tailwindcss.com/docs/outline-width
         */
        readonly &apos;outline-w&apos;: readonly [{
            readonly outline: readonly [(value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Outline Color
         * @see https://tailwindcss.com/docs/outline-color
         */
        readonly &apos;outline-color&apos;: readonly [{
            readonly outline: readonly [ThemeGetter];
        }];
        /**
         * Ring Width
         * @see https://tailwindcss.com/docs/ring-width
         */
        readonly &apos;ring-w&apos;: readonly [{
            readonly ring: readonly [&quot;&quot;, (value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Ring Width Inset
         * @see https://tailwindcss.com/docs/ring-width
         */
        readonly &apos;ring-w-inset&apos;: readonly [&quot;ring-inset&quot;];
        /**
         * Ring Color
         * @see https://tailwindcss.com/docs/ring-color
         */
        readonly &apos;ring-color&apos;: readonly [{
            readonly ring: readonly [ThemeGetter];
        }];
        /**
         * Ring Opacity
         * @see https://tailwindcss.com/docs/ring-opacity
         */
        readonly &apos;ring-opacity&apos;: readonly [{
            readonly &apos;ring-opacity&apos;: readonly [ThemeGetter];
        }];
        /**
         * Ring Offset Width
         * @see https://tailwindcss.com/docs/ring-offset-width
         */
        readonly &apos;ring-offset-w&apos;: readonly [{
            readonly &apos;ring-offset&apos;: readonly [(value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Ring Offset Color
         * @see https://tailwindcss.com/docs/ring-offset-color
         */
        readonly &apos;ring-offset-color&apos;: readonly [{
            readonly &apos;ring-offset&apos;: readonly [ThemeGetter];
        }];
        /**
         * Box Shadow
         * @see https://tailwindcss.com/docs/box-shadow
         */
        readonly shadow: readonly [{
            readonly shadow: readonly [&quot;&quot;, &quot;inner&quot;, &quot;none&quot;, (value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Box Shadow Color
         * @see https://tailwindcss.com/docs/box-shadow-color
         */
        readonly &apos;shadow-color&apos;: readonly [{
            readonly shadow: readonly [() => boolean];
        }];
        /**
         * Opacity
         * @see https://tailwindcss.com/docs/opacity
         */
        readonly opacity: readonly [{
            readonly opacity: readonly [ThemeGetter];
        }];
        /**
         * Mix Blend Mode
         * @see https://tailwindcss.com/docs/mix-blend-mode
         */
        readonly &apos;mix-blend&apos;: readonly [{
            readonly &apos;mix-blend&apos;: readonly [&quot;normal&quot;, &quot;multiply&quot;, &quot;screen&quot;, &quot;overlay&quot;, &quot;darken&quot;, &quot;lighten&quot;, &quot;color-dodge&quot;, &quot;color-burn&quot;, &quot;hard-light&quot;, &quot;soft-light&quot;, &quot;difference&quot;, &quot;exclusion&quot;, &quot;hue&quot;, &quot;saturation&quot;, &quot;color&quot;, &quot;luminosity&quot;, &quot;plus-lighter&quot;, &quot;plus-darker&quot;];
        }];
        /**
         * Background Blend Mode
         * @see https://tailwindcss.com/docs/background-blend-mode
         */
        readonly &apos;bg-blend&apos;: readonly [{
            readonly &apos;bg-blend&apos;: readonly [&quot;normal&quot;, &quot;multiply&quot;, &quot;screen&quot;, &quot;overlay&quot;, &quot;darken&quot;, &quot;lighten&quot;, &quot;color-dodge&quot;, &quot;color-burn&quot;, &quot;hard-light&quot;, &quot;soft-light&quot;, &quot;difference&quot;, &quot;exclusion&quot;, &quot;hue&quot;, &quot;saturation&quot;, &quot;color&quot;, &quot;luminosity&quot;];
        }];
        /**
         * Filter
         * @deprecated since Tailwind CSS v3.0.0
         * @see https://tailwindcss.com/docs/filter
         */
        readonly filter: readonly [{
            readonly filter: readonly [&quot;&quot;, &quot;none&quot;];
        }];
        /**
         * Blur
         * @see https://tailwindcss.com/docs/blur
         */
        readonly blur: readonly [{
            readonly blur: readonly [ThemeGetter];
        }];
        /**
         * Brightness
         * @see https://tailwindcss.com/docs/brightness
         */
        readonly brightness: readonly [{
            readonly brightness: readonly [ThemeGetter];
        }];
        /**
         * Contrast
         * @see https://tailwindcss.com/docs/contrast
         */
        readonly contrast: readonly [{
            readonly contrast: readonly [ThemeGetter];
        }];
        /**
         * Drop Shadow
         * @see https://tailwindcss.com/docs/drop-shadow
         */
        readonly &apos;drop-shadow&apos;: readonly [{
            readonly &apos;drop-shadow&apos;: readonly [&quot;&quot;, &quot;none&quot;, (value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Grayscale
         * @see https://tailwindcss.com/docs/grayscale
         */
        readonly grayscale: readonly [{
            readonly grayscale: readonly [ThemeGetter];
        }];
        /**
         * Hue Rotate
         * @see https://tailwindcss.com/docs/hue-rotate
         */
        readonly &apos;hue-rotate&apos;: readonly [{
            readonly &apos;hue-rotate&apos;: readonly [ThemeGetter];
        }];
        /**
         * Invert
         * @see https://tailwindcss.com/docs/invert
         */
        readonly invert: readonly [{
            readonly invert: readonly [ThemeGetter];
        }];
        /**
         * Saturate
         * @see https://tailwindcss.com/docs/saturate
         */
        readonly saturate: readonly [{
            readonly saturate: readonly [ThemeGetter];
        }];
        /**
         * Sepia
         * @see https://tailwindcss.com/docs/sepia
         */
        readonly sepia: readonly [{
            readonly sepia: readonly [ThemeGetter];
        }];
        /**
         * Backdrop Filter
         * @deprecated since Tailwind CSS v3.0.0
         * @see https://tailwindcss.com/docs/backdrop-filter
         */
        readonly &apos;backdrop-filter&apos;: readonly [{
            readonly &apos;backdrop-filter&apos;: readonly [&quot;&quot;, &quot;none&quot;];
        }];
        /**
         * Backdrop Blur
         * @see https://tailwindcss.com/docs/backdrop-blur
         */
        readonly &apos;backdrop-blur&apos;: readonly [{
            readonly &apos;backdrop-blur&apos;: readonly [ThemeGetter];
        }];
        /**
         * Backdrop Brightness
         * @see https://tailwindcss.com/docs/backdrop-brightness
         */
        readonly &apos;backdrop-brightness&apos;: readonly [{
            readonly &apos;backdrop-brightness&apos;: readonly [ThemeGetter];
        }];
        /**
         * Backdrop Contrast
         * @see https://tailwindcss.com/docs/backdrop-contrast
         */
        readonly &apos;backdrop-contrast&apos;: readonly [{
            readonly &apos;backdrop-contrast&apos;: readonly [ThemeGetter];
        }];
        /**
         * Backdrop Grayscale
         * @see https://tailwindcss.com/docs/backdrop-grayscale
         */
        readonly &apos;backdrop-grayscale&apos;: readonly [{
            readonly &apos;backdrop-grayscale&apos;: readonly [ThemeGetter];
        }];
        /**
         * Backdrop Hue Rotate
         * @see https://tailwindcss.com/docs/backdrop-hue-rotate
         */
        readonly &apos;backdrop-hue-rotate&apos;: readonly [{
            readonly &apos;backdrop-hue-rotate&apos;: readonly [ThemeGetter];
        }];
        /**
         * Backdrop Invert
         * @see https://tailwindcss.com/docs/backdrop-invert
         */
        readonly &apos;backdrop-invert&apos;: readonly [{
            readonly &apos;backdrop-invert&apos;: readonly [ThemeGetter];
        }];
        /**
         * Backdrop Opacity
         * @see https://tailwindcss.com/docs/backdrop-opacity
         */
        readonly &apos;backdrop-opacity&apos;: readonly [{
            readonly &apos;backdrop-opacity&apos;: readonly [ThemeGetter];
        }];
        /**
         * Backdrop Saturate
         * @see https://tailwindcss.com/docs/backdrop-saturate
         */
        readonly &apos;backdrop-saturate&apos;: readonly [{
            readonly &apos;backdrop-saturate&apos;: readonly [ThemeGetter];
        }];
        /**
         * Backdrop Sepia
         * @see https://tailwindcss.com/docs/backdrop-sepia
         */
        readonly &apos;backdrop-sepia&apos;: readonly [{
            readonly &apos;backdrop-sepia&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Collapse
         * @see https://tailwindcss.com/docs/border-collapse
         */
        readonly &apos;border-collapse&apos;: readonly [{
            readonly border: readonly [&quot;collapse&quot;, &quot;separate&quot;];
        }];
        /**
         * Border Spacing
         * @see https://tailwindcss.com/docs/border-spacing
         */
        readonly &apos;border-spacing&apos;: readonly [{
            readonly &apos;border-spacing&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Spacing X
         * @see https://tailwindcss.com/docs/border-spacing
         */
        readonly &apos;border-spacing-x&apos;: readonly [{
            readonly &apos;border-spacing-x&apos;: readonly [ThemeGetter];
        }];
        /**
         * Border Spacing Y
         * @see https://tailwindcss.com/docs/border-spacing
         */
        readonly &apos;border-spacing-y&apos;: readonly [{
            readonly &apos;border-spacing-y&apos;: readonly [ThemeGetter];
        }];
        /**
         * Table Layout
         * @see https://tailwindcss.com/docs/table-layout
         */
        readonly &apos;table-layout&apos;: readonly [{
            readonly table: readonly [&quot;auto&quot;, &quot;fixed&quot;];
        }];
        /**
         * Caption Side
         * @see https://tailwindcss.com/docs/caption-side
         */
        readonly caption: readonly [{
            readonly caption: readonly [&quot;top&quot;, &quot;bottom&quot;];
        }];
        /**
         * Tranisition Property
         * @see https://tailwindcss.com/docs/transition-property
         */
        readonly transition: readonly [{
            readonly transition: readonly [&quot;none&quot;, &quot;all&quot;, &quot;&quot;, &quot;colors&quot;, &quot;opacity&quot;, &quot;shadow&quot;, &quot;transform&quot;, (value: string) => boolean];
        }];
        /**
         * Transition Duration
         * @see https://tailwindcss.com/docs/transition-duration
         */
        readonly duration: readonly [{
            readonly duration: ((value: string) => boolean)[];
        }];
        /**
         * Transition Timing Function
         * @see https://tailwindcss.com/docs/transition-timing-function
         */
        readonly ease: readonly [{
            readonly ease: readonly [&quot;linear&quot;, &quot;in&quot;, &quot;out&quot;, &quot;in-out&quot;, (value: string) => boolean];
        }];
        /**
         * Transition Delay
         * @see https://tailwindcss.com/docs/transition-delay
         */
        readonly delay: readonly [{
            readonly delay: ((value: string) => boolean)[];
        }];
        /**
         * Animation
         * @see https://tailwindcss.com/docs/animation
         */
        readonly animate: readonly [{
            readonly animate: readonly [&quot;none&quot;, &quot;spin&quot;, &quot;ping&quot;, &quot;pulse&quot;, &quot;bounce&quot;, (value: string) => boolean];
        }];
        /**
         * Transform
         * @see https://tailwindcss.com/docs/transform
         */
        readonly transform: readonly [{
            readonly transform: readonly [&quot;&quot;, &quot;gpu&quot;, &quot;none&quot;];
        }];
        /**
         * Scale
         * @see https://tailwindcss.com/docs/scale
         */
        readonly scale: readonly [{
            readonly scale: readonly [ThemeGetter];
        }];
        /**
         * Scale X
         * @see https://tailwindcss.com/docs/scale
         */
        readonly &apos;scale-x&apos;: readonly [{
            readonly &apos;scale-x&apos;: readonly [ThemeGetter];
        }];
        /**
         * Scale Y
         * @see https://tailwindcss.com/docs/scale
         */
        readonly &apos;scale-y&apos;: readonly [{
            readonly &apos;scale-y&apos;: readonly [ThemeGetter];
        }];
        /**
         * Rotate
         * @see https://tailwindcss.com/docs/rotate
         */
        readonly rotate: readonly [{
            readonly rotate: readonly [(value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Translate X
         * @see https://tailwindcss.com/docs/translate
         */
        readonly &apos;translate-x&apos;: readonly [{
            readonly &apos;translate-x&apos;: readonly [ThemeGetter];
        }];
        /**
         * Translate Y
         * @see https://tailwindcss.com/docs/translate
         */
        readonly &apos;translate-y&apos;: readonly [{
            readonly &apos;translate-y&apos;: readonly [ThemeGetter];
        }];
        /**
         * Skew X
         * @see https://tailwindcss.com/docs/skew
         */
        readonly &apos;skew-x&apos;: readonly [{
            readonly &apos;skew-x&apos;: readonly [ThemeGetter];
        }];
        /**
         * Skew Y
         * @see https://tailwindcss.com/docs/skew
         */
        readonly &apos;skew-y&apos;: readonly [{
            readonly &apos;skew-y&apos;: readonly [ThemeGetter];
        }];
        /**
         * Transform Origin
         * @see https://tailwindcss.com/docs/transform-origin
         */
        readonly &apos;transform-origin&apos;: readonly [{
            readonly origin: readonly [&quot;center&quot;, &quot;top&quot;, &quot;top-right&quot;, &quot;right&quot;, &quot;bottom-right&quot;, &quot;bottom&quot;, &quot;bottom-left&quot;, &quot;left&quot;, &quot;top-left&quot;, (value: string) => boolean];
        }];
        /**
         * Accent Color
         * @see https://tailwindcss.com/docs/accent-color
         */
        readonly accent: readonly [{
            readonly accent: readonly [&quot;auto&quot;, ThemeGetter];
        }];
        /**
         * Appearance
         * @see https://tailwindcss.com/docs/appearance
         */
        readonly appearance: readonly [{
            readonly appearance: readonly [&quot;none&quot;, &quot;auto&quot;];
        }];
        /**
         * Cursor
         * @see https://tailwindcss.com/docs/cursor
         */
        readonly cursor: readonly [{
            readonly cursor: readonly [&quot;auto&quot;, &quot;default&quot;, &quot;pointer&quot;, &quot;wait&quot;, &quot;text&quot;, &quot;move&quot;, &quot;help&quot;, &quot;not-allowed&quot;, &quot;none&quot;, &quot;context-menu&quot;, &quot;progress&quot;, &quot;cell&quot;, &quot;crosshair&quot;, &quot;vertical-text&quot;, &quot;alias&quot;, &quot;copy&quot;, &quot;no-drop&quot;, &quot;grab&quot;, &quot;grabbing&quot;, &quot;all-scroll&quot;, &quot;col-resize&quot;, &quot;row-resize&quot;, &quot;n-resize&quot;, &quot;e-resize&quot;, &quot;s-resize&quot;, &quot;w-resize&quot;, &quot;ne-resize&quot;, &quot;nw-resize&quot;, &quot;se-resize&quot;, &quot;sw-resize&quot;, &quot;ew-resize&quot;, &quot;ns-resize&quot;, &quot;nesw-resize&quot;, &quot;nwse-resize&quot;, &quot;zoom-in&quot;, &quot;zoom-out&quot;, (value: string) => boolean];
        }];
        /**
         * Caret Color
         * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
         */
        readonly &apos;caret-color&apos;: readonly [{
            readonly caret: readonly [ThemeGetter];
        }];
        /**
         * Pointer Events
         * @see https://tailwindcss.com/docs/pointer-events
         */
        readonly &apos;pointer-events&apos;: readonly [{
            readonly &apos;pointer-events&apos;: readonly [&quot;none&quot;, &quot;auto&quot;];
        }];
        /**
         * Resize
         * @see https://tailwindcss.com/docs/resize
         */
        readonly resize: readonly [{
            readonly resize: readonly [&quot;none&quot;, &quot;y&quot;, &quot;x&quot;, &quot;&quot;];
        }];
        /**
         * Scroll Behavior
         * @see https://tailwindcss.com/docs/scroll-behavior
         */
        readonly &apos;scroll-behavior&apos;: readonly [{
            readonly scroll: readonly [&quot;auto&quot;, &quot;smooth&quot;];
        }];
        /**
         * Scroll Margin
         * @see https://tailwindcss.com/docs/scroll-margin
         */
        readonly &apos;scroll-m&apos;: readonly [{
            readonly &apos;scroll-m&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Margin X
         * @see https://tailwindcss.com/docs/scroll-margin
         */
        readonly &apos;scroll-mx&apos;: readonly [{
            readonly &apos;scroll-mx&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Margin Y
         * @see https://tailwindcss.com/docs/scroll-margin
         */
        readonly &apos;scroll-my&apos;: readonly [{
            readonly &apos;scroll-my&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Margin Start
         * @see https://tailwindcss.com/docs/scroll-margin
         */
        readonly &apos;scroll-ms&apos;: readonly [{
            readonly &apos;scroll-ms&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Margin End
         * @see https://tailwindcss.com/docs/scroll-margin
         */
        readonly &apos;scroll-me&apos;: readonly [{
            readonly &apos;scroll-me&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Margin Top
         * @see https://tailwindcss.com/docs/scroll-margin
         */
        readonly &apos;scroll-mt&apos;: readonly [{
            readonly &apos;scroll-mt&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Margin Right
         * @see https://tailwindcss.com/docs/scroll-margin
         */
        readonly &apos;scroll-mr&apos;: readonly [{
            readonly &apos;scroll-mr&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Margin Bottom
         * @see https://tailwindcss.com/docs/scroll-margin
         */
        readonly &apos;scroll-mb&apos;: readonly [{
            readonly &apos;scroll-mb&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Margin Left
         * @see https://tailwindcss.com/docs/scroll-margin
         */
        readonly &apos;scroll-ml&apos;: readonly [{
            readonly &apos;scroll-ml&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Padding
         * @see https://tailwindcss.com/docs/scroll-padding
         */
        readonly &apos;scroll-p&apos;: readonly [{
            readonly &apos;scroll-p&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Padding X
         * @see https://tailwindcss.com/docs/scroll-padding
         */
        readonly &apos;scroll-px&apos;: readonly [{
            readonly &apos;scroll-px&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Padding Y
         * @see https://tailwindcss.com/docs/scroll-padding
         */
        readonly &apos;scroll-py&apos;: readonly [{
            readonly &apos;scroll-py&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Padding Start
         * @see https://tailwindcss.com/docs/scroll-padding
         */
        readonly &apos;scroll-ps&apos;: readonly [{
            readonly &apos;scroll-ps&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Padding End
         * @see https://tailwindcss.com/docs/scroll-padding
         */
        readonly &apos;scroll-pe&apos;: readonly [{
            readonly &apos;scroll-pe&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Padding Top
         * @see https://tailwindcss.com/docs/scroll-padding
         */
        readonly &apos;scroll-pt&apos;: readonly [{
            readonly &apos;scroll-pt&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Padding Right
         * @see https://tailwindcss.com/docs/scroll-padding
         */
        readonly &apos;scroll-pr&apos;: readonly [{
            readonly &apos;scroll-pr&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Padding Bottom
         * @see https://tailwindcss.com/docs/scroll-padding
         */
        readonly &apos;scroll-pb&apos;: readonly [{
            readonly &apos;scroll-pb&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Padding Left
         * @see https://tailwindcss.com/docs/scroll-padding
         */
        readonly &apos;scroll-pl&apos;: readonly [{
            readonly &apos;scroll-pl&apos;: readonly [(value: string) => boolean, ThemeGetter];
        }];
        /**
         * Scroll Snap Align
         * @see https://tailwindcss.com/docs/scroll-snap-align
         */
        readonly &apos;snap-align&apos;: readonly [{
            readonly snap: readonly [&quot;start&quot;, &quot;end&quot;, &quot;center&quot;, &quot;align-none&quot;];
        }];
        /**
         * Scroll Snap Stop
         * @see https://tailwindcss.com/docs/scroll-snap-stop
         */
        readonly &apos;snap-stop&apos;: readonly [{
            readonly snap: readonly [&quot;normal&quot;, &quot;always&quot;];
        }];
        /**
         * Scroll Snap Type
         * @see https://tailwindcss.com/docs/scroll-snap-type
         */
        readonly &apos;snap-type&apos;: readonly [{
            readonly snap: readonly [&quot;none&quot;, &quot;x&quot;, &quot;y&quot;, &quot;both&quot;];
        }];
        /**
         * Scroll Snap Type Strictness
         * @see https://tailwindcss.com/docs/scroll-snap-type
         */
        readonly &apos;snap-strictness&apos;: readonly [{
            readonly snap: readonly [&quot;mandatory&quot;, &quot;proximity&quot;];
        }];
        /**
         * Touch Action
         * @see https://tailwindcss.com/docs/touch-action
         */
        readonly touch: readonly [{
            readonly touch: readonly [&quot;auto&quot;, &quot;none&quot;, &quot;manipulation&quot;];
        }];
        /**
         * Touch Action X
         * @see https://tailwindcss.com/docs/touch-action
         */
        readonly &apos;touch-x&apos;: readonly [{
            readonly &apos;touch-pan&apos;: readonly [&quot;x&quot;, &quot;left&quot;, &quot;right&quot;];
        }];
        /**
         * Touch Action Y
         * @see https://tailwindcss.com/docs/touch-action
         */
        readonly &apos;touch-y&apos;: readonly [{
            readonly &apos;touch-pan&apos;: readonly [&quot;y&quot;, &quot;up&quot;, &quot;down&quot;];
        }];
        /**
         * Touch Action Pinch Zoom
         * @see https://tailwindcss.com/docs/touch-action
         */
        readonly &apos;touch-pz&apos;: readonly [&quot;touch-pinch-zoom&quot;];
        /**
         * User Select
         * @see https://tailwindcss.com/docs/user-select
         */
        readonly select: readonly [{
            readonly select: readonly [&quot;none&quot;, &quot;text&quot;, &quot;all&quot;, &quot;auto&quot;];
        }];
        /**
         * Will Change
         * @see https://tailwindcss.com/docs/will-change
         */
        readonly &apos;will-change&apos;: readonly [{
            readonly &apos;will-change&apos;: readonly [&quot;auto&quot;, &quot;scroll&quot;, &quot;contents&quot;, &quot;transform&quot;, (value: string) => boolean];
        }];
        /**
         * Fill
         * @see https://tailwindcss.com/docs/fill
         */
        readonly fill: readonly [{
            readonly fill: readonly [ThemeGetter, &quot;none&quot;];
        }];
        /**
         * Stroke Width
         * @see https://tailwindcss.com/docs/stroke-width
         */
        readonly &apos;stroke-w&apos;: readonly [{
            readonly stroke: readonly [(value: string) => boolean, (value: string) => boolean, (value: string) => boolean];
        }];
        /**
         * Stroke
         * @see https://tailwindcss.com/docs/stroke
         */
        readonly stroke: readonly [{
            readonly stroke: readonly [ThemeGetter, &quot;none&quot;];
        }];
        /**
         * Screen Readers
         * @see https://tailwindcss.com/docs/screen-readers
         */
        readonly sr: readonly [&quot;sr-only&quot;, &quot;not-sr-only&quot;];
        /**
         * Forced Color Adjust
         * @see https://tailwindcss.com/docs/forced-color-adjust
         */
        readonly &apos;forced-color-adjust&apos;: readonly [{
            readonly &apos;forced-color-adjust&apos;: readonly [&quot;auto&quot;, &quot;none&quot;];
        }];
    };
    readonly conflictingClassGroups: {
        readonly overflow: readonly [&quot;overflow-x&quot;, &quot;overflow-y&quot;];
        readonly overscroll: readonly [&quot;overscroll-x&quot;, &quot;overscroll-y&quot;];
        readonly inset: readonly [&quot;inset-x&quot;, &quot;inset-y&quot;, &quot;start&quot;, &quot;end&quot;, &quot;top&quot;, &quot;right&quot;, &quot;bottom&quot;, &quot;left&quot;];
        readonly &apos;inset-x&apos;: readonly [&quot;right&quot;, &quot;left&quot;];
        readonly &apos;inset-y&apos;: readonly [&quot;top&quot;, &quot;bottom&quot;];
        readonly flex: readonly [&quot;basis&quot;, &quot;grow&quot;, &quot;shrink&quot;];
        readonly gap: readonly [&quot;gap-x&quot;, &quot;gap-y&quot;];
        readonly p: readonly [&quot;px&quot;, &quot;py&quot;, &quot;ps&quot;, &quot;pe&quot;, &quot;pt&quot;, &quot;pr&quot;, &quot;pb&quot;, &quot;pl&quot;];
        readonly px: readonly [&quot;pr&quot;, &quot;pl&quot;];
        readonly py: readonly [&quot;pt&quot;, &quot;pb&quot;];
        readonly m: readonly [&quot;mx&quot;, &quot;my&quot;, &quot;ms&quot;, &quot;me&quot;, &quot;mt&quot;, &quot;mr&quot;, &quot;mb&quot;, &quot;ml&quot;];
        readonly mx: readonly [&quot;mr&quot;, &quot;ml&quot;];
        readonly my: readonly [&quot;mt&quot;, &quot;mb&quot;];
        readonly size: readonly [&quot;w&quot;, &quot;h&quot;];
        readonly &apos;font-size&apos;: readonly [&quot;leading&quot;];
        readonly &apos;fvn-normal&apos;: readonly [&quot;fvn-ordinal&quot;, &quot;fvn-slashed-zero&quot;, &quot;fvn-figure&quot;, &quot;fvn-spacing&quot;, &quot;fvn-fraction&quot;];
        readonly &apos;fvn-ordinal&apos;: readonly [&quot;fvn-normal&quot;];
        readonly &apos;fvn-slashed-zero&apos;: readonly [&quot;fvn-normal&quot;];
        readonly &apos;fvn-figure&apos;: readonly [&quot;fvn-normal&quot;];
        readonly &apos;fvn-spacing&apos;: readonly [&quot;fvn-normal&quot;];
        readonly &apos;fvn-fraction&apos;: readonly [&quot;fvn-normal&quot;];
        readonly &apos;line-clamp&apos;: readonly [&quot;display&quot;, &quot;overflow&quot;];
        readonly rounded: readonly [&quot;rounded-s&quot;, &quot;rounded-e&quot;, &quot;rounded-t&quot;, &quot;rounded-r&quot;, &quot;rounded-b&quot;, &quot;rounded-l&quot;, &quot;rounded-ss&quot;, &quot;rounded-se&quot;, &quot;rounded-ee&quot;, &quot;rounded-es&quot;, &quot;rounded-tl&quot;, &quot;rounded-tr&quot;, &quot;rounded-br&quot;, &quot;rounded-bl&quot;];
        readonly &apos;rounded-s&apos;: readonly [&quot;rounded-ss&quot;, &quot;rounded-es&quot;];
        readonly &apos;rounded-e&apos;: readonly [&quot;rounded-se&quot;, &quot;rounded-ee&quot;];
        readonly &apos;rounded-t&apos;: readonly [&quot;rounded-tl&quot;, &quot;rounded-tr&quot;];
        readonly &apos;rounded-r&apos;: readonly [&quot;rounded-tr&quot;, &quot;rounded-br&quot;];
        readonly &apos;rounded-b&apos;: readonly [&quot;rounded-br&quot;, &quot;rounded-bl&quot;];
        readonly &apos;rounded-l&apos;: readonly [&quot;rounded-tl&quot;, &quot;rounded-bl&quot;];
        readonly &apos;border-spacing&apos;: readonly [&quot;border-spacing-x&quot;, &quot;border-spacing-y&quot;];
        readonly &apos;border-w&apos;: readonly [&quot;border-w-s&quot;, &quot;border-w-e&quot;, &quot;border-w-t&quot;, &quot;border-w-r&quot;, &quot;border-w-b&quot;, &quot;border-w-l&quot;];
        readonly &apos;border-w-x&apos;: readonly [&quot;border-w-r&quot;, &quot;border-w-l&quot;];
        readonly &apos;border-w-y&apos;: readonly [&quot;border-w-t&quot;, &quot;border-w-b&quot;];
        readonly &apos;border-color&apos;: readonly [&quot;border-color-s&quot;, &quot;border-color-e&quot;, &quot;border-color-t&quot;, &quot;border-color-r&quot;, &quot;border-color-b&quot;, &quot;border-color-l&quot;];
        readonly &apos;border-color-x&apos;: readonly [&quot;border-color-r&quot;, &quot;border-color-l&quot;];
        readonly &apos;border-color-y&apos;: readonly [&quot;border-color-t&quot;, &quot;border-color-b&quot;];
        readonly &apos;scroll-m&apos;: readonly [&quot;scroll-mx&quot;, &quot;scroll-my&quot;, &quot;scroll-ms&quot;, &quot;scroll-me&quot;, &quot;scroll-mt&quot;, &quot;scroll-mr&quot;, &quot;scroll-mb&quot;, &quot;scroll-ml&quot;];
        readonly &apos;scroll-mx&apos;: readonly [&quot;scroll-mr&quot;, &quot;scroll-ml&quot;];
        readonly &apos;scroll-my&apos;: readonly [&quot;scroll-mt&quot;, &quot;scroll-mb&quot;];
        readonly &apos;scroll-p&apos;: readonly [&quot;scroll-px&quot;, &quot;scroll-py&quot;, &quot;scroll-ps&quot;, &quot;scroll-pe&quot;, &quot;scroll-pt&quot;, &quot;scroll-pr&quot;, &quot;scroll-pb&quot;, &quot;scroll-pl&quot;];
        readonly &apos;scroll-px&apos;: readonly [&quot;scroll-pr&quot;, &quot;scroll-pl&quot;];
        readonly &apos;scroll-py&apos;: readonly [&quot;scroll-pt&quot;, &quot;scroll-pb&quot;];
        readonly touch: readonly [&quot;touch-x&quot;, &quot;touch-y&quot;, &quot;touch-pz&quot;];
        readonly &apos;touch-x&apos;: readonly [&quot;touch&quot;];
        readonly &apos;touch-y&apos;: readonly [&quot;touch&quot;];
        readonly &apos;touch-pz&apos;: readonly [&quot;touch&quot;];
    };
    readonly conflictingClassGroupModifiers: {
        readonly &apos;font-size&apos;: readonly [&quot;leading&quot;];
    };
};

type CreateConfigSubsequent = (config: AnyConfig) => AnyConfig;
declare const extendTailwindMerge: <AdditionalClassGroupIds extends string = never, AdditionalThemeGroupIds extends string = never>(configExtension: ConfigExtension<DefaultClassGroupIds | AdditionalClassGroupIds, DefaultThemeGroupIds | AdditionalThemeGroupIds> | CreateConfigSubsequent, ...createConfig: CreateConfigSubsequent[]) => (...classLists: ClassNameValue[]) => string;

declare const fromTheme: <AdditionalThemeGroupIds extends string = never, DefaultThemeGroupIdsInner extends string = DefaultThemeGroupIds>(key: NoInfer<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>) => ThemeGetter;

/**
 * @param baseConfig Config where other config will be merged into. This object will be mutated.
 * @param configExtension Partial config to merge into the `baseConfig`.
 */
declare const mergeConfigs: <ClassGroupIds extends string, ThemeGroupIds extends string = never>(baseConfig: AnyConfig, { cacheSize, prefix, separator, experimentalParseClassName, extend, override, }: ConfigExtension<ClassGroupIds, ThemeGroupIds>) => AnyConfig;

declare const twMerge: (...classLists: ClassNameValue[]) => string;

declare const isLength: (value: string) => boolean;
declare const isArbitraryLength: (value: string) => boolean;
declare const isNumber: (value: string) => boolean;
declare const isArbitraryNumber: (value: string) => boolean;
declare const isInteger: (value: string) => boolean;
declare const isPercent: (value: string) => boolean;
declare const isArbitraryValue: (value: string) => boolean;
declare const isTshirtSize: (value: string) => boolean;
declare const isArbitrarySize: (value: string) => boolean;
declare const isArbitraryPosition: (value: string) => boolean;
declare const isArbitraryImage: (value: string) => boolean;
declare const isArbitraryShadow: (value: string) => boolean;
declare const isAny: () => boolean;

declare const validators_d_isAny: typeof isAny;
declare const validators_d_isArbitraryImage: typeof isArbitraryImage;
declare const validators_d_isArbitraryLength: typeof isArbitraryLength;
declare const validators_d_isArbitraryNumber: typeof isArbitraryNumber;
declare const validators_d_isArbitraryPosition: typeof isArbitraryPosition;
declare const validators_d_isArbitraryShadow: typeof isArbitraryShadow;
declare const validators_d_isArbitrarySize: typeof isArbitrarySize;
declare const validators_d_isArbitraryValue: typeof isArbitraryValue;
declare const validators_d_isInteger: typeof isInteger;
declare const validators_d_isLength: typeof isLength;
declare const validators_d_isNumber: typeof isNumber;
declare const validators_d_isPercent: typeof isPercent;
declare const validators_d_isTshirtSize: typeof isTshirtSize;
declare namespace validators_d {
  export { validators_d_isAny as isAny, validators_d_isArbitraryImage as isArbitraryImage, validators_d_isArbitraryLength as isArbitraryLength, validators_d_isArbitraryNumber as isArbitraryNumber, validators_d_isArbitraryPosition as isArbitraryPosition, validators_d_isArbitraryShadow as isArbitraryShadow, validators_d_isArbitrarySize as isArbitrarySize, validators_d_isArbitraryValue as isArbitraryValue, validators_d_isInteger as isInteger, validators_d_isLength as isLength, validators_d_isNumber as isNumber, validators_d_isPercent as isPercent, validators_d_isTshirtSize as isTshirtSize };
}

export { type ClassNameValue, type ClassValidator, type Config, type ConfigExtension, type DefaultClassGroupIds, type DefaultThemeGroupIds, type ExperimentalParseClassNameParam, type ExperimentalParsedClassName, createTailwindMerge, extendTailwindMerge, fromTheme, getDefaultConfig, mergeConfigs, twJoin, twMerge, validators_d as validators };
