/**
 * Type the tailwind-merge configuration adheres to.
 */
export interface Config<ClassGroupIds extends string, ThemeGroupIds extends string>
    extends ConfigStaticPart,
        ConfigGroupsPart<ClassGroupIds, ThemeGroupIds> {}

/**
 * The static part of the tailwind-merge configuration. When merging multiple configurations, the properties of this interface are always overridden.
 */
interface ConfigStaticPart {
    /**
     * Integer indicating size of LRU cache used for memoizing results.
     * - Cache might be up to twice as big as `cacheSize`
     * - No cache is used for values <= 0
     */
    cacheSize: number
    /**
     * Prefix added to Tailwind-generated classes
     * @see https://tailwindcss.com/docs/configuration#prefix
     */
    prefix?: string
    /**
     * Custom separator for modifiers in Tailwind classes
     * @see https://tailwindcss.com/docs/configuration#separator
     */
    separator: string
    /**
     * Allows to customize parsing of individual classes passed to `twMerge`.
     * All classes passed to `twMerge` outside of cache hits are passed to this function before it is determined whether the class is a valid Tailwind CSS class.
     *
     * This is an experimental feature and may introduce breaking changes in any minor version update.
     */
    experimentalParseClassName?(param: ExperimentalParseClassNameParam): ExperimentalParsedClassName
}

/**
 * Type of param passed to the `experimentalParseClassName` function.
 *
 * This is an experimental feature and may introduce breaking changes in any minor version update.
 */
export interface ExperimentalParseClassNameParam {
    className: string
    parseClassName(className: string): ExperimentalParsedClassName
}

/**
 * Type of the result returned by the `experimentalParseClassName` function.
 *
 * This is an experimental feature and may introduce breaking changes in any minor version update.
 */
export interface ExperimentalParsedClassName {
    /**
     * Modifiers of the class in the order they appear in the class.
     *
     * @example ['hover', 'dark'] // for `hover:dark:bg-gray-100`
     */
    modifiers: string[]
    /**
     * Whether the class has an `!important` modifier.
     *
     * @example true // for `hover:dark:!bg-gray-100`
     */
    hasImportantModifier: boolean
    /**
     * Base class without preceding modifiers.
     *
     * @example 'bg-gray-100' // for `hover:dark:bg-gray-100`
     */
    baseClassName: string
    /**
     * Index position of a possible postfix modifier in the class.
     * If the class has no postfix modifier, this is `undefined`.
     *
     * This property is prefixed with "maybe" because tailwind-merge does not know whether something is a postfix modifier or part of the base class since it's possible to configure Tailwind CSS classes which include a `/` in the base class name.
     *
     * If a `maybePostfixModifierPosition` is present, tailwind-merge first tries to match the `baseClassName` without the possible postfix modifier to a class group. If tht fails, it tries again with the possible postfix modifier.
     *
     * @example 11 // for `bg-gray-100/50`
     */
    maybePostfixModifierPosition: number | undefined
}

/**
 * The dynamic part of the tailwind-merge configuration. When merging multiple configurations, the user can choose to either override or extend the properties of this interface.
 */
interface ConfigGroupsPart<ClassGroupIds extends string, ThemeGroupIds extends string> {
    /**
     * Theme scales used in classGroups.
     * The keys are the same as in the Tailwind config but the values are sometimes defined more broadly.
     */
    theme: NoInfer<ThemeObject<ThemeGroupIds>>
    /**
     * Object with groups of classes.
     * @example
     * {
     *     // Creates group of classes `group`, `of` and `classes`
     *     &apos;group-id&apos;: [&apos;group&apos;, &apos;of&apos;, &apos;classes&apos;],
     *     // Creates group of classes `look-at-me-other` and `look-at-me-group`.
     *     &apos;other-group&apos;: [{ &apos;look-at-me&apos;: [&apos;other&apos;, &apos;group&apos;]}]
     * }
     */
    classGroups: NoInfer<Record<ClassGroupIds, ClassGroup<ThemeGroupIds>>>
    /**
     * Conflicting classes across groups.
     * The key is ID of class group which creates conflict, values are IDs of class groups which receive a conflict.
     * A class group ID is the key of a class group in classGroups object.
     * @example { gap: [&apos;gap-x&apos;, &apos;gap-y&apos;] }
     */
    conflictingClassGroups: NoInfer<Partial<Record<ClassGroupIds, readonly ClassGroupIds[]>>>
    /**
     * Postfix modifiers conflicting with other class groups.
     * A class group ID is the key of a class group in classGroups object.
     * @example { &apos;font-size&apos;: [&apos;leading&apos;] }
     */
    conflictingClassGroupModifiers: NoInfer<
        Partial<Record<ClassGroupIds, readonly ClassGroupIds[]>>
    >
}

/**
 * Type of the configuration object that can be passed to `extendTailwindMerge`.
 */
export interface ConfigExtension<ClassGroupIds extends string, ThemeGroupIds extends string>
    extends Partial<ConfigStaticPart> {
    override?: PartialPartial<ConfigGroupsPart<ClassGroupIds, ThemeGroupIds>>
    extend?: PartialPartial<ConfigGroupsPart<ClassGroupIds, ThemeGroupIds>>
}

type PartialPartial<T> = {
    [P in keyof T]?: Partial<T[P]>
}

export type ThemeObject<ThemeGroupIds extends string> = Record<
    ThemeGroupIds,
    ClassGroup<ThemeGroupIds>
>
export type ClassGroup<ThemeGroupIds extends string> = readonly ClassDefinition<ThemeGroupIds>[]
type ClassDefinition<ThemeGroupIds extends string> =
    | string
    | ClassValidator
    | ThemeGetter
    | ClassObject<ThemeGroupIds>
export type ClassValidator = (classPart: string) => boolean
export interface ThemeGetter {
    (theme: ThemeObject<AnyThemeGroupIds>): ClassGroup<AnyClassGroupIds>
    isThemeGetter: true
}
type ClassObject<ThemeGroupIds extends string> = Record<
    string,
    readonly ClassDefinition<ThemeGroupIds>[]
>

/**
 * Hack from https://stackoverflow.com/questions/56687668/a-way-to-disable-type-argument-inference-in-generics/56688073#56688073
 *
 * Could be replaced with NoInfer utility type from TypeScript (https://www.typescriptlang.org/docs/handbook/utility-types.html#noinfertype), but that is only supported in TypeScript 5.4 or higher, so I should wait some time before using it.
 */
export type NoInfer<T> = [T][T extends any ? 0 : never]

/**
 * Theme group IDs included in the default configuration of tailwind-merge.
 *
 * If you want to use a scale that is not supported in the `ThemeObject` type,
 * consider using `classGroups` instead of `theme`.
 *
 * @see https://github.com/dcastil/tailwind-merge/blob/main/docs/configuration.md#theme
 *      (the list of supported keys may vary between `tailwind-merge` versions)
 */
export type DefaultThemeGroupIds =
    | &apos;blur&apos;
    | &apos;borderColor&apos;
    | &apos;borderRadius&apos;
    | &apos;borderSpacing&apos;
    | &apos;borderWidth&apos;
    | &apos;brightness&apos;
    | &apos;colors&apos;
    | &apos;contrast&apos;
    | &apos;gap&apos;
    | &apos;gradientColorStopPositions&apos;
    | &apos;gradientColorStops&apos;
    | &apos;grayscale&apos;
    | &apos;hueRotate&apos;
    | &apos;inset&apos;
    | &apos;invert&apos;
    | &apos;margin&apos;
    | &apos;opacity&apos;
    | &apos;padding&apos;
    | &apos;saturate&apos;
    | &apos;scale&apos;
    | &apos;sepia&apos;
    | &apos;skew&apos;
    | &apos;space&apos;
    | &apos;spacing&apos;
    | &apos;translate&apos;

/**
 * Class group IDs included in the default configuration of tailwind-merge.
 */
export type DefaultClassGroupIds =
    | &apos;accent&apos;
    | &apos;align-content&apos;
    | &apos;align-items&apos;
    | &apos;align-self&apos;
    | &apos;animate&apos;
    | &apos;appearance&apos;
    | &apos;aspect&apos;
    | &apos;auto-cols&apos;
    | &apos;auto-rows&apos;
    | &apos;backdrop-blur&apos;
    | &apos;backdrop-brightness&apos;
    | &apos;backdrop-contrast&apos;
    | &apos;backdrop-filter&apos;
    | &apos;backdrop-grayscale&apos;
    | &apos;backdrop-hue-rotate&apos;
    | &apos;backdrop-invert&apos;
    | &apos;backdrop-opacity&apos;
    | &apos;backdrop-saturate&apos;
    | &apos;backdrop-sepia&apos;
    | &apos;basis&apos;
    | &apos;bg-attachment&apos;
    | &apos;bg-blend&apos;
    | &apos;bg-clip&apos;
    | &apos;bg-color&apos;
    | &apos;bg-image&apos;
    | &apos;bg-opacity&apos;
    | &apos;bg-origin&apos;
    | &apos;bg-position&apos;
    | &apos;bg-repeat&apos;
    | &apos;bg-size&apos;
    | &apos;blur&apos;
    | &apos;border-collapse&apos;
    | &apos;border-color-b&apos;
    | &apos;border-color-e&apos;
    | &apos;border-color-l&apos;
    | &apos;border-color-r&apos;
    | &apos;border-color-s&apos;
    | &apos;border-color-t&apos;
    | &apos;border-color-x&apos;
    | &apos;border-color-y&apos;
    | &apos;border-color&apos;
    | &apos;border-opacity&apos;
    | &apos;border-spacing-x&apos;
    | &apos;border-spacing-y&apos;
    | &apos;border-spacing&apos;
    | &apos;border-style&apos;
    | &apos;border-w-b&apos;
    | &apos;border-w-e&apos;
    | &apos;border-w-l&apos;
    | &apos;border-w-r&apos;
    | &apos;border-w-s&apos;
    | &apos;border-w-t&apos;
    | &apos;border-w-x&apos;
    | &apos;border-w-y&apos;
    | &apos;border-w&apos;
    | &apos;bottom&apos;
    | &apos;box-decoration&apos;
    | &apos;box&apos;
    | &apos;break-after&apos;
    | &apos;break-before&apos;
    | &apos;break-inside&apos;
    | &apos;break&apos;
    | &apos;brightness&apos;
    | &apos;caption&apos;
    | &apos;caret-color&apos;
    | &apos;clear&apos;
    | &apos;col-end&apos;
    | &apos;col-start-end&apos;
    | &apos;col-start&apos;
    | &apos;columns&apos;
    | &apos;container&apos;
    | &apos;content&apos;
    | &apos;contrast&apos;
    | &apos;cursor&apos;
    | &apos;delay&apos;
    | &apos;display&apos;
    | &apos;divide-color&apos;
    | &apos;divide-opacity&apos;
    | &apos;divide-style&apos;
    | &apos;divide-x-reverse&apos;
    | &apos;divide-x&apos;
    | &apos;divide-y-reverse&apos;
    | &apos;divide-y&apos;
    | &apos;drop-shadow&apos;
    | &apos;duration&apos;
    | &apos;ease&apos;
    | &apos;end&apos;
    | &apos;fill&apos;
    | &apos;filter&apos;
    | &apos;flex-direction&apos;
    | &apos;flex-wrap&apos;
    | &apos;flex&apos;
    | &apos;float&apos;
    | &apos;font-family&apos;
    | &apos;font-size&apos;
    | &apos;font-smoothing&apos;
    | &apos;font-style&apos;
    | &apos;font-weight&apos;
    | &apos;forced-color-adjust&apos;
    | &apos;fvn-figure&apos;
    | &apos;fvn-fraction&apos;
    | &apos;fvn-normal&apos;
    | &apos;fvn-ordinal&apos;
    | &apos;fvn-slashed-zero&apos;
    | &apos;fvn-spacing&apos;
    | &apos;gap-x&apos;
    | &apos;gap-y&apos;
    | &apos;gap&apos;
    | &apos;gradient-from-pos&apos;
    | &apos;gradient-from&apos;
    | &apos;gradient-to-pos&apos;
    | &apos;gradient-to&apos;
    | &apos;gradient-via-pos&apos;
    | &apos;gradient-via&apos;
    | &apos;grayscale&apos;
    | &apos;grid-cols&apos;
    | &apos;grid-flow&apos;
    | &apos;grid-rows&apos;
    | &apos;grow&apos;
    | &apos;h&apos;
    | &apos;hue-rotate&apos;
    | &apos;hyphens&apos;
    | &apos;indent&apos;
    | &apos;inset-x&apos;
    | &apos;inset-y&apos;
    | &apos;inset&apos;
    | &apos;invert&apos;
    | &apos;isolation&apos;
    | &apos;justify-content&apos;
    | &apos;justify-items&apos;
    | &apos;justify-self&apos;
    | &apos;leading&apos;
    | &apos;left&apos;
    | &apos;line-clamp&apos;
    | &apos;list-image&apos;
    | &apos;list-style-position&apos;
    | &apos;list-style-type&apos;
    | &apos;m&apos;
    | &apos;max-h&apos;
    | &apos;max-w&apos;
    | &apos;mb&apos;
    | &apos;me&apos;
    | &apos;min-h&apos;
    | &apos;min-w&apos;
    | &apos;mix-blend&apos;
    | &apos;ml&apos;
    | &apos;mr&apos;
    | &apos;ms&apos;
    | &apos;mt&apos;
    | &apos;mx&apos;
    | &apos;my&apos;
    | &apos;object-fit&apos;
    | &apos;object-position&apos;
    | &apos;opacity&apos;
    | &apos;order&apos;
    | &apos;outline-color&apos;
    | &apos;outline-offset&apos;
    | &apos;outline-style&apos;
    | &apos;outline-w&apos;
    | &apos;overflow-x&apos;
    | &apos;overflow-y&apos;
    | &apos;overflow&apos;
    | &apos;overscroll-x&apos;
    | &apos;overscroll-y&apos;
    | &apos;overscroll&apos;
    | &apos;p&apos;
    | &apos;pb&apos;
    | &apos;pe&apos;
    | &apos;pl&apos;
    | &apos;place-content&apos;
    | &apos;place-items&apos;
    | &apos;place-self&apos;
    | &apos;placeholder-color&apos;
    | &apos;placeholder-opacity&apos;
    | &apos;pointer-events&apos;
    | &apos;position&apos;
    | &apos;pr&apos;
    | &apos;ps&apos;
    | &apos;pt&apos;
    | &apos;px&apos;
    | &apos;py&apos;
    | &apos;resize&apos;
    | &apos;right&apos;
    | &apos;ring-color&apos;
    | &apos;ring-offset-color&apos;
    | &apos;ring-offset-w&apos;
    | &apos;ring-opacity&apos;
    | &apos;ring-w-inset&apos;
    | &apos;ring-w&apos;
    | &apos;rotate&apos;
    | &apos;rounded-b&apos;
    | &apos;rounded-bl&apos;
    | &apos;rounded-br&apos;
    | &apos;rounded-e&apos;
    | &apos;rounded-ee&apos;
    | &apos;rounded-es&apos;
    | &apos;rounded-l&apos;
    | &apos;rounded-r&apos;
    | &apos;rounded-s&apos;
    | &apos;rounded-se&apos;
    | &apos;rounded-ss&apos;
    | &apos;rounded-t&apos;
    | &apos;rounded-tl&apos;
    | &apos;rounded-tr&apos;
    | &apos;rounded&apos;
    | &apos;row-end&apos;
    | &apos;row-start-end&apos;
    | &apos;row-start&apos;
    | &apos;saturate&apos;
    | &apos;scale-x&apos;
    | &apos;scale-y&apos;
    | &apos;scale&apos;
    | &apos;scroll-behavior&apos;
    | &apos;scroll-m&apos;
    | &apos;scroll-mb&apos;
    | &apos;scroll-me&apos;
    | &apos;scroll-ml&apos;
    | &apos;scroll-mr&apos;
    | &apos;scroll-ms&apos;
    | &apos;scroll-mt&apos;
    | &apos;scroll-mx&apos;
    | &apos;scroll-my&apos;
    | &apos;scroll-p&apos;
    | &apos;scroll-pb&apos;
    | &apos;scroll-pe&apos;
    | &apos;scroll-pl&apos;
    | &apos;scroll-pr&apos;
    | &apos;scroll-ps&apos;
    | &apos;scroll-pt&apos;
    | &apos;scroll-px&apos;
    | &apos;scroll-py&apos;
    | &apos;select&apos;
    | &apos;sepia&apos;
    | &apos;shadow-color&apos;
    | &apos;shadow&apos;
    | &apos;shrink&apos;
    | &apos;size&apos;
    | &apos;skew-x&apos;
    | &apos;skew-y&apos;
    | &apos;snap-align&apos;
    | &apos;snap-stop&apos;
    | &apos;snap-strictness&apos;
    | &apos;snap-type&apos;
    | &apos;space-x-reverse&apos;
    | &apos;space-x&apos;
    | &apos;space-y-reverse&apos;
    | &apos;space-y&apos;
    | &apos;sr&apos;
    | &apos;start&apos;
    | &apos;stroke-w&apos;
    | &apos;stroke&apos;
    | &apos;table-layout&apos;
    | &apos;text-alignment&apos;
    | &apos;text-color&apos;
    | &apos;text-decoration-color&apos;
    | &apos;text-decoration-style&apos;
    | &apos;text-decoration-thickness&apos;
    | &apos;text-decoration&apos;
    | &apos;text-opacity&apos;
    | &apos;text-overflow&apos;
    | &apos;text-transform&apos;
    | &apos;text-wrap&apos;
    | &apos;top&apos;
    | &apos;touch-pz&apos;
    | &apos;touch-x&apos;
    | &apos;touch-y&apos;
    | &apos;touch&apos;
    | &apos;tracking&apos;
    | &apos;transform-origin&apos;
    | &apos;transform&apos;
    | &apos;transition&apos;
    | &apos;translate-x&apos;
    | &apos;translate-y&apos;
    | &apos;underline-offset&apos;
    | &apos;vertical-align&apos;
    | &apos;visibility&apos;
    | &apos;w&apos;
    | &apos;whitespace&apos;
    | &apos;will-change&apos;
    | &apos;z&apos;

export type AnyClassGroupIds = string
export type AnyThemeGroupIds = string

/**
 * type of the tailwind-merge configuration that allows for any possible configuration.
 */
export type AnyConfig = Config<AnyClassGroupIds, AnyThemeGroupIds>
